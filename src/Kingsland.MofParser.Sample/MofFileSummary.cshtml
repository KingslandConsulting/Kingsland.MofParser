@using Kingsland.MofParser.Sample.Wrappers;
@using RazorEngine.Templating;
@using System.Linq;
@using System.Collections.Generic;
@inherits TemplateBase<List<InstanceWrapper>>

<html>

    <head>
        <title>Configuration Summary</title>
        <style type="text/css">
             @@font-face {
                 font-family: StationMedium;
                 src: url(Station.ttf);
             }
             body {
                 font-family: Arial;
             }
             h1 {
                 font-family: StationMedium;
                 color: #008CCC;
             }
             h2 {
                 font-family: StationMedium;
                 color: #008CCC;
             }
             table {
             }
             th {
                 font-family: StationMedium;
                 background-color: #008CCC;
                 color: white;
                 padding: 2px 2px 2px 2px;
             }
             th.resourceColumn {
                 text-align: left;
             }
             tr:nth-child(even) {
                 background-color: #DAEBF3;
             }
             .resourcePresent {
                 text-align: center;
             }
             .resourceAbsent {
             }
        </style>
    </head>

    <body>

        <h1>Configuration Summary</h1>

        @{
            var filenames = Model.Select(w => w.Filename).Distinct();
        }
        @foreach (var filename in filenames)
        {
            var filename1 = filename;
            var wrappers = Model.Where(w => (w.Filename == filename1) &&
                                            !string.IsNullOrEmpty(w.ResourceName)).ToList();
            var computerNames = wrappers.Select(w => w.ComputerName).Distinct().ToList();


            <h2>@HtmlHelper.SplitTitleCaseWords(filename)</h2>

            if (wrappers.Count == 0)
            {
                <p>No resources defined</p>
            }
            else {
                <table>
                    <thead>
                        <tr>
                            <th class="resourceColumn">Resource</th>
                            @foreach (var computerName in computerNames)
                            {
                                <th>@HtmlHelper.HtmlEncode(computerName)</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{ var resourceNames = wrappers.Select(w => w.ResourceName).Distinct().ToList(); }
                        @foreach (var resourceName in resourceNames)
                        {
                            <tr>
                                <td>@HtmlHelper.ReplaceUnderscores(resourceName)</td>
                                @foreach (var computerName in computerNames)
                                {
                                    if (wrappers.Any(w => (w.ComputerName == computerName) &&
                                                          (w.ResourceName == resourceName)))
                                    {
                                        <td class="resourcePresent">X</td>
                                    }
                                    else
                                    {
                                        <td class="resourceAbsent">&nbsp;</td>
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }

        }

    </body>

</html>