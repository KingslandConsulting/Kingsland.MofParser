//**************************************************************************
//* File: WinXpProSp3CIMV2.mof
//**************************************************************************

//**************************************************************************
//* This MOF was generated from the "\\.\ROOT\CIMV2"
//* namespace on machine "WINXPPROSP3".
//* To compile this MOF on another machine you should edit this pragma.
//**************************************************************************
#pragma namespace("\\\\.\\ROOT\\CIMV2")

//**************************************************************************
//* Class: __SecurityRelatedClass
//* Derived from: 
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __SecurityRelatedClass
//* {
//* };

//**************************************************************************
//* Class: __NTLMUser9X
//* Derived from: __SecurityRelatedClass
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __NTLMUser9X : __SecurityRelatedClass
//* {
//* 	string Name;
//* 	string Authority = ".";
//* 	sint32 Flags;
//* 	sint32 Mask;
//* 	sint32 Type;
//* };

//**************************************************************************
//* Class: __PARAMETERS
//* Derived from: 
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __PARAMETERS
//* {
//* };

//**************************************************************************
//* Class: __SystemSecurity
//* Derived from: 
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [singleton: DisableOverride ToInstance ToSubClass]
//* class __SystemSecurity
//* {
//* 	[Static] uint32 GetSD([out] uint8 SD[]);
//* 	[Static] uint32 Get9XUserList([out] __ntlmuser9x ul[]);
//* 	[Static] uint32 SetSD([in] uint8 SD[]);
//* 	[Static] uint32 Set9XUserList([in] __ntlmuser9x ul[]);
//* 	[Static] uint32 GetCallerAccessRights([out] sint32 rights);
//* };

//**************************************************************************
//* Class: __NotifyStatus
//* Derived from: 
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract: DisableOverride ToInstance ToSubClass]
//* class __NotifyStatus
//* {
//* 	uint32 StatusCode;
//* };

//**************************************************************************
//* Class: __ExtendedStatus
//* Derived from: __NotifyStatus
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ExtendedStatus : __NotifyStatus
//* {
//* 	string ProviderName;
//* 	string Operation;
//* 	string ParameterInfo;
//* 	string Description;
//* };

//**************************************************************************
//* Class: Win32_PrivilegesStatus
//* Derived from: __ExtendedStatus
//**************************************************************************
[Locale(1033): ToInstance, UUID("{BE46D060-7A7C-11d2-BC85-00104B2CF71C}"): ToInstance]
class Win32_PrivilegesStatus : __ExtendedStatus
{
	[read: ToSubClass, MappingStrings{"Win32API|AccessControl|Windows NT Privileges"}: ToSubClass] string PrivilegesNotHeld[];
	[read: ToSubClass, MappingStrings{"Win32API|AccessControl|Windows NT Privileges"}: ToSubClass] string PrivilegesRequired[];
};

//**************************************************************************
//* Class: Win32_TSNetworkAdapterSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSNetworkAdapterSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TSRemoteControlSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSRemoteControlSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TSEnvironmentSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSEnvironmentSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TSSessionDirectoryError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSSessionDirectoryError : __ExtendedStatus
{
	[read] string SessionDirectory;
};

//**************************************************************************
//* Class: Win32_TSLogonSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSLogonSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TerminalError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TerminalError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_JobObjectStatus
//* Derived from: __ExtendedStatus
//**************************************************************************
[Locale(1033): ToInstance, UUID("{7E6475FE-CF3C-4e22-892E-0E58482158E3}"): ToInstance]
class Win32_JobObjectStatus : __ExtendedStatus
{
	[read: ToSubClass] uint32 Win32ErrorCode;
	[read: ToSubClass] string AdditionalDescription;
};

//**************************************************************************
//* Class: Win32_TerminalServiceSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TerminalServiceSettingError : __ExtendedStatus
{
	[read] sint32 TerminalServiceMode;
};

//**************************************************************************
//* Class: Win32_TSPermissionsSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSPermissionsSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TSClientSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSClientSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TSGeneralSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSGeneralSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TSSessionSettingError
//* Derived from: __ExtendedStatus
//**************************************************************************
class Win32_TSSessionSettingError : __ExtendedStatus
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: __SystemClass
//* Derived from: 
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __SystemClass
//* {
//* };

//**************************************************************************
//* Class: __Provider
//* Derived from: __SystemClass
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __Provider : __SystemClass
//* {
//* 	[key] string Name;
//* };

//**************************************************************************
//* Class: __Win32Provider
//* Derived from: __Provider
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __Win32Provider : __Provider
//* {
//* 	string CLSID;
//* 	string ClientLoadableCLSID;
//* 	string DefaultMachineName;
//* 	[SUBTYPE("interval"): ToInstance ToSubClass] datetime UnloadTimeout;
//* 	boolean InitializeAsAdminFirst;
//* 	uint32 Version;
//* 	[Values{"None"}: ToSubClass] sint32 ImpersonationLevel = 0;
//* 	[Values{"CLSID", "Namespace", "COM Object"}: ToSubClass] sint32 InitializationReentrancy = 0;
//* 	boolean PerUserInitialization = FALSE;
//* 	boolean PerLocaleInitialization = FALSE;
//* 	boolean Pure = TRUE;
//* 	[Values{}: ToSubClass] string HostingModel;
//* 	sint32 Concurrency;
//* 	boolean SupportsSendStatus;
//* 	boolean SupportsExplicitShutdown;
//* 	boolean SupportsExtendedStatus;
//* 	boolean SupportsThrottling;
//* 	[SUBTYPE("interval"): ToInstance ToSubClass] datetime OperationTimeoutInterval;
//* 	[SUBTYPE("interval"): ToInstance ToSubClass] datetime InitializationTimeoutInterval;
//* 	boolean SupportsQuotas;
//* 	boolean Enabled;
//* 	boolean SupportsShutdown;
//* 	string SecurityDescriptor;
//* };

//**************************************************************************
//* Class: __thisNAMESPACE
//* Derived from: __SystemClass
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [singleton: DisableOverride ToInstance ToSubClass]
//* class __thisNAMESPACE : __SystemClass
//* {
//* 	uint8 SECURITY_DESCRIPTOR[];
//* };

//**************************************************************************
//* Class: __IndicationRelated
//* Derived from: __SystemClass
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __IndicationRelated : __SystemClass
//* {
//* };

//**************************************************************************
//* Class: __EventGenerator
//* Derived from: __IndicationRelated
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __EventGenerator : __IndicationRelated
//* {
//* };

//**************************************************************************
//* Class: __TimerInstruction
//* Derived from: __EventGenerator
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __TimerInstruction : __EventGenerator
//* {
//* 	[key] string TimerId;
//* 	boolean SkipIfPassed = FALSE;
//* };

//**************************************************************************
//* Class: __IntervalTimerInstruction
//* Derived from: __TimerInstruction
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __IntervalTimerInstruction : __TimerInstruction
//* {
//* 	[not_null: DisableOverride ToInstance ToSubClass, units("milliseconds"): DisableOverride ToInstance ToSubClass] uint32 IntervalBetweenEvents;
//* };

//**************************************************************************
//* Class: __AbsoluteTimerInstruction
//* Derived from: __TimerInstruction
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __AbsoluteTimerInstruction : __TimerInstruction
//* {
//* 	[not_null: DisableOverride ToInstance ToSubClass] datetime EventDateTime;
//* };

//**************************************************************************
//* Class: __Event
//* Derived from: __IndicationRelated
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract: DisableOverride ToInstance ToSubClass]
//* class __Event : __IndicationRelated
//* {
//* 	uint64 TIME_CREATED;
//* 	uint8 SECURITY_DESCRIPTOR[];
//* };

//**************************************************************************
//* Class: __NamespaceOperationEvent
//* Derived from: __Event
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __NamespaceOperationEvent : __Event
//* {
//* 	__Namespace TargetNamespace;
//* };

//**************************************************************************
//* Class: __NamespaceDeletionEvent
//* Derived from: __NamespaceOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __NamespaceDeletionEvent : __NamespaceOperationEvent
//* {
//* };

//**************************************************************************
//* Class: __NamespaceCreationEvent
//* Derived from: __NamespaceOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __NamespaceCreationEvent : __NamespaceOperationEvent
//* {
//* };

//**************************************************************************
//* Class: __NamespaceModificationEvent
//* Derived from: __NamespaceOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __NamespaceModificationEvent : __NamespaceOperationEvent
//* {
//* 	__Namespace PreviousNamespace;
//* };

//**************************************************************************
//* Class: __InstanceOperationEvent
//* Derived from: __Event
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __InstanceOperationEvent : __Event
//* {
//* 	object TargetInstance;
//* };

//**************************************************************************
//* Class: __MethodInvocationEvent
//* Derived from: __InstanceOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __MethodInvocationEvent : __InstanceOperationEvent
//* {
//* 	string Method;
//* 	boolean PreCall;
//* 	object Parameters;
//* };

//**************************************************************************
//* Class: __InstanceCreationEvent
//* Derived from: __InstanceOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __InstanceCreationEvent : __InstanceOperationEvent
//* {
//* };

//**************************************************************************
//* Class: __InstanceModificationEvent
//* Derived from: __InstanceOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __InstanceModificationEvent : __InstanceOperationEvent
//* {
//* 	object PreviousInstance;
//* };

//**************************************************************************
//* Class: __InstanceDeletionEvent
//* Derived from: __InstanceOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __InstanceDeletionEvent : __InstanceOperationEvent
//* {
//* };

//**************************************************************************
//* Class: __ExtrinsicEvent
//* Derived from: __Event
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ExtrinsicEvent : __Event
//* {
//* };

//**************************************************************************
//* Class: __SystemEvent
//* Derived from: __ExtrinsicEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __SystemEvent : __ExtrinsicEvent
//* {
//* };

//**************************************************************************
//* Class: __EventDroppedEvent
//* Derived from: __SystemEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __EventDroppedEvent : __SystemEvent
//* {
//* 	__Event Event;
//* 	__EventConsumer ref IntendedConsumer;
//* };

//**************************************************************************
//* Class: __ConsumerFailureEvent
//* Derived from: __EventDroppedEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ConsumerFailureEvent : __EventDroppedEvent
//* {
//* 	uint32 ErrorCode;
//* 	string ErrorDescription;
//* 	__ExtendedStatus ErrorObject;
//* };

//**************************************************************************
//* Class: __QOSFailureEvent
//* Derived from: __EventDroppedEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __QOSFailureEvent : __EventDroppedEvent
//* {
//* 	uint32 ErrorCode;
//* 	string ErrorDescription;
//* };

//**************************************************************************
//* Class: __EventQueueOverflowEvent
//* Derived from: __EventDroppedEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __EventQueueOverflowEvent : __EventDroppedEvent
//* {
//* 	[units("bytes"): DisableOverride ToInstance ToSubClass] uint32 CurrentQueueSize;
//* };

//**************************************************************************
//* Class: MSFT_WMI_GenericNonCOMEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
class MSFT_WMI_GenericNonCOMEvent : __ExtrinsicEvent
{
	string PropertyNames[];
	string PropertyValues[];
	string ProviderName;
	uint32 ProcessId;
};

//**************************************************************************
//* Class: MSFT_WmiSelfEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
class MSFT_WmiSelfEvent : __ExtrinsicEvent
{
};

//**************************************************************************
//* Class: Msft_WmiProvider_OperationEvent
//* Derived from: MSFT_WmiSelfEvent
//**************************************************************************
[Description("The Msft_WmiProvider_OperationEvent event class is the root definition of all WMI provider events.A provider operation is defined as some execution on behalf of a client via WMI that resultsin one or more calls to a provider executable, The properties of this class define the identity of the provider associated with the operation being executed and is uniquely associated with instances of the class Msft_Providers. Each instance of __Win32Provider can have an associated operation and be identified using the properties below. Internally WMI can contain any number of objects that refer to a particular instance of __Win32Provider since it differentiates each object based on whether the provider supports per user or per locale instantiation and also depending on where the provider is being hosted. Currently TransactionIdentifier is always an empty string. ")]
class Msft_WmiProvider_OperationEvent : MSFT_WmiSelfEvent
{
	[Description("The Namespace property indicates the namespace where instance of __Win32Provider is instantiated.")] String Namespace;
	[Description("The Provider property indicates the Unique Name associated with the instance of __Win32Provider.")] String provider;
	[Description("If the provider registration specifies per user initialization, then the User property defines the client principle identity associated with specific instantiation of a provider.")] String User;
	[Description("If the provider registration specifies per locale initialization, then the Locale property defines the client locale associated with specific instantiation of a provider.")] String Locale;
	[Description("The TransactionIdentifer property is for internal use, currently always empty.")] String TransactionIdentifer;
	[Description("The HostingSpecification property currently is not used.")] Uint32 HostingSpecification;
	[Description("The HostingGroup property currently is not used.")] String HostingGroup;
};

//**************************************************************************
//* Class: Msft_WmiProvider_ComServerLoadOperationEvent
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_ComServerLoadOperationEvent event class defines the successful activation of a com server instanceassociated with the provider registration.")]
class Msft_WmiProvider_ComServerLoadOperationEvent : Msft_WmiProvider_OperationEvent
{
	[Description("The Clsid property, if applicable, defines the COM CLSID associated with server implementation. Note: decoupled providers do not have an associated COM CLSID.")] String Clsid;
	[Description("The ServerName property, if applicable, defines the COM server name present within the unnamed value of the CLSID key.")] String ServerName;
	[Description("The InProcServer property, if applicable, defines whether the server supports inproc32 activation.")] boolean InProcServer;
	[Description("The LocalServer property, if applicable, defines whether the server supports localserver32 activation.")] boolean LocalServer;
	[Description("The InProcServerPath property, if applicable, defines the server inproc32 executable  name.")] String InProcServerPath;
	[Description("The LocalServerPath property, if applicable, defines the server localserver32 executable application name.")] String LocalServerPath;
};

//**************************************************************************
//* Class: Msft_WmiProvider_InitializationOperationFailureEvent
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_InitializationOperationFailureEvent event \t\t\t\tclass defines the unsuccessful initialization of the provider server instance.  Following activation of the provider server, the WMI willattempt to initialize the instance provider through a number of COM interface method calls. This event defines the unsuccessful initialization of the provider server instance.")]
class Msft_WmiProvider_InitializationOperationFailureEvent : Msft_WmiProvider_OperationEvent
{
	[Description("The ResultCode property reveals the HRESULT code returned from the initialization process.")] uint32 ResultCode;
};

//**************************************************************************
//* Class: Msft_WmiProvider_LoadOperationEvent
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_LoadOperationEvent event class defines the successful activation and initialization of the provider cache entry. WMI caches provider registration objects to decrease overallexecution time. The substem will drop cache entries either through the cache ageing process, through loss of RPC connectivity, through user control or due to some change in the provider's registration.")]
class Msft_WmiProvider_LoadOperationEvent : Msft_WmiProvider_OperationEvent
{
	[Description("The Clsid property, if applicable, defines the COM CLSID associated with server implementation. Note: decoupled providers do not have an associated COM CLSID.")] String Clsid;
	[Description("The ServerName property, if applicable, defines the COM server name present within the unnamed value of the CLSID key.")] String ServerName;
	[Description("The InProcServer property, if applicable, defines whether the server supports inproc32 activation.")] boolean InProcServer;
	[Description("The LocalServer property, if applicable, defines whether the server supports localserver32 activation.")] boolean LocalServer;
	[Description("The InProcServerPath property, if applicable, defines the server inproc32 executable  name.")] String InProcServerPath;
	[Description("The LocalServerPath property, if applicable, defines the server localserver32 executable application name.")] String LocalServerPath;
	[Description("The ThreadingModel property, if applicable, defines the server threading model, can take one of the following values: \n0 - Apartment \n 1 - Both \n 2 - Free \n 3 - Neutral \n 4 - Unknown"), Values{"Apartment", "Both", "Neutral", "Unknown"}, ValueMap{"0", "1", "2", "3", "4"}] uint32 ThreadingModel;
	[Description("The Synchronisation property, if applicable, defines the server synchronisation model, can take on one of the following values: \n0 - Ignored \n 1 - None \n 2 - Supported \n 3 - Required \n 4 - RequiresNew \n 5 - Unknown"), Values{"Ignored", "None", "Supported", "Required", "RequiresNew", "Unknown"}, ValueMap{"0", "1", "2", "3", "4", "5"}] uint32 Synchronisation;
};

//**************************************************************************
//* Class: Msft_WmiProvider_OperationEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_OperationEvent_Pre event class contains the operation event generated prior to calling provider implementation.")]
class Msft_WmiProvider_OperationEvent_Pre : Msft_WmiProvider_OperationEvent
{
};

//**************************************************************************
//* Class: Msft_WmiProvider_DeleteClassAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_DeleteClassAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: DeleteClassAsync.")]
class Msft_WmiProvider_DeleteClassAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The ClassName property hold the name of the class targeted for deletion.")] String ClassName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_GetObjectAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_GetObjectAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: GetObjectAsync. ")]
class Msft_WmiProvider_GetObjectAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The ObjecPath property holds the path of the object to retrieve.")] String ObjectPath;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_AccessCheck_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_AccessCheck_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemEventSecurity :: AccessCheck.")]
class Msft_WmiProvider_AccessCheck_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The QueryLanguage property contains the language of the following query filter. For this version of WMI, it will always be 'WQL'.")] string QueryLanguage;
	[Description("The Query property is a string containing the event query filter, which was registered by a logical consumer.")] string Query;
	[Description("The Sid property holds a Byte Array representing the SID of the client creating the subscription, NULL if subscription is temporary.")] uint8 Sid[];
};

//**************************************************************************
//* Class: Msft_WmiProvider_CreateClassEnumAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_CreateClassEnumAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: CreateClassEnumAsync.")]
class Msft_WmiProvider_CreateClassEnumAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The SuperclassName property, if not NULL or blank, specifies a superclass name. Only classes that are subclasses of this class are returnedIf NULL or blank, and Flags contains WBEM_FLAG_SHALLOW,only top-level classes, that is, those which have noparent class or superclass, are returned. If it isNULL or blank and Flags is WBEM_FLAG_DEEP, all classes within the namespace are returned.")] String SuperclassName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_ExecQueryAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_ExecQueryAsyncEvent_Pre class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: ExecQueryAsync.")]
class Msft_WmiProvider_ExecQueryAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The QueryLanguage property is a string containing one of the query languages supported by Windows Management.")] String QueryLanguage;
	[Description("The Query property is a string containing the text of the query.")] String Query;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_CreateInstanceEnumAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_CreateInstanceEnumAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: CreateInstanceEnumAsync.")]
class Msft_WmiProvider_CreateInstanceEnumAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The ClassName property is a string containing the name of the class for which instances are desired.")] String ClassName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_NewQuery_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_NewQuery_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemEventProviderQuerySink :: NewQuery.")]
class Msft_WmiProvider_NewQuery_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The QueryId property holds the Windows Management-generated identifier for the query. The provider can track this so that during a later cancellation it will know which query was canceled.")] uint32 QueryId;
	[Description("The QueryLanguage property contains the language of the following query filter. For this version of WMI, it will always be 'WQL'.")] string QueryLanguage;
	[Description("The Query property is a string containing the event query filter, which was registered by a logical consumer.")] string Query;
};

//**************************************************************************
//* Class: Msft_WmiProvider_DeleteInstanceAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_DeleteInstanceAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: DeleteInstanceAsync.")]
class Msft_WmiProvider_DeleteInstanceAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The ObjectPath property is a string containing the path of instance to be deleted.")] String ObjectPath;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_CancelQuery_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_CancelQuery_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemEventProviderQuerySink :: CancelQuery.")]
class Msft_WmiProvider_CancelQuery_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The QueryId property holds the Identifier of the query which was canceled. This identifier was originally delivered to the provider by the NewQuery method of this interface.")] uint32 QueryId;
};

//**************************************************************************
//* Class: Msft_WmiProvider_PutInstanceAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_PutInstanceAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: PutInstanceAsync.")]
class Msft_WmiProvider_PutInstanceAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The InstanceObject property contains the object instance to be written.")] object InstanceObject;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_PutClassAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_PutClassAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: PutClassAsync.")]
class Msft_WmiProvider_PutClassAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The ClassObject property holds the object containing the class definition.")] object ClassObject;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_ProvideEvents_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_ProvideEvents_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemEventProvider :: ProvideEvents.")]
class Msft_WmiProvider_ProvideEvents_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The Flags property contains the flags associated with the call.")] uint32 Flags;
};

//**************************************************************************
//* Class: Msft_WmiProvider_ExecMethodAsyncEvent_Pre
//* Derived from: Msft_WmiProvider_OperationEvent_Pre
//**************************************************************************
[Description("The Msft_WmiProvider_ExecMethodAsyncEvent_Pre event class represents an event generated immediately prior to calling the provider's implementation of IWbemServices :: ExecMethodAsync.")]
class Msft_WmiProvider_ExecMethodAsyncEvent_Pre : Msft_WmiProvider_OperationEvent_Pre
{
	[Description("The ObjectPath property is a string containing the object path of the object for which the method is to be executed.")] String ObjectPath;
	[Description("The MethodName is a string container the name of the method for the object.")] String MethodName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The InputParameters property is Null, if no inbound parameters are required to execute the method. Otherwise, an object that contains the properties acting as inbound parameters for the method execution. The contents of the object are method-specific, and are part of the specification for the provider in question.")] object InputParameters;
};

//**************************************************************************
//* Class: Msft_WmiProvider_InitializationOperationEvent
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_InitializationOperationEvent event class defines the successful initialization of the provider server instance. Following activation of the provider server, the WMI will attempt to initialize the instance provider through a number of COM interface method calls. ")]
class Msft_WmiProvider_InitializationOperationEvent : Msft_WmiProvider_OperationEvent
{
};

//**************************************************************************
//* Class: Msft_WmiProvider_ComServerLoadOperationFailureEvent
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_ComServerLoadOperationFailureEvent event class defines the unsuccessful activation of a com server instanceassociated with the provider registration.")]
class Msft_WmiProvider_ComServerLoadOperationFailureEvent : Msft_WmiProvider_OperationEvent
{
	[Description("The Clsid property, if applicable, defines the COM CLSID associated with server implementation. Note:  decoupled providers do not have an associated COM CLSID.")] String Clsid;
	[Description("The ServerName property, if applicable, defines the COM server name present within the unnamed value of the CLSID key.")] String ServerName;
	[Description("The InProcServer property, if applicable, defines whether the server supports inproc32 activation.")] boolean InProcServer;
	[Description("The LocalServer property, if applicable, defines whether the server supports localserver32 activation.")] boolean LocalServer;
	[Description("The InProcServerPath property, if applicable, defines the server inproc32 executable  name.")] String InProcServerPath;
	[Description("The LocalServerPath property, if applicable, defines the server localserver32 executable application name.")] String LocalServerPath;
	[Description("The ResultCode property, if applicable, defines the result code returned from the COM activation procedure.")] uint32 ResultCode;
};

//**************************************************************************
//* Class: Msft_WmiProvider_UnLoadOperationEvent
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_UnLoadOperationEvent event class defines the removal of the provider cache entry. At this point there will be no reference held by WMI onthe COM server instance.  WMI caches provider registration objects to decrease overallexecution time. The substem will drop cache entries either through the cache ageing process, through loss of RPC connectivity, through user control or due to some change in the provider's registration.")]
class Msft_WmiProvider_UnLoadOperationEvent : Msft_WmiProvider_OperationEvent
{
};

//**************************************************************************
//* Class: Msft_WmiProvider_LoadOperationFailureEvent
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("WMI caches provider registration objects to decrease overallexecution time. The substem will drop cache entries either through the cache ageing process, through loss of RPC connectivity, through user control or due to some change in the provider's registration. This event defines the unsuccessful activation and initialization of the provider cache entry.")]
class Msft_WmiProvider_LoadOperationFailureEvent : Msft_WmiProvider_OperationEvent
{
	[Description("If applicable, defines the COM CLSID associated with server implementation. Note: decoupled providers do not have an associated COM CLSID.")] String Clsid;
	[Description("If applicable, defines the COM server name present within the unnamed value of the CLSID key.")] String ServerName;
	[Description("If applicable, defines whether the server supports inproc32 activation.")] boolean InProcServer;
	[Description("If applicable, defines whether the server supports localserver32 activation.")] boolean LocalServer;
	[Description("If applicable, defines the server inproc32 executable  name.")] String InProcServerPath;
	[Description("If applicable, defines the server localserver32 executable application name.")] String LocalServerPath;
	[Description("The ThreadingModel property, if applicable, defines the server threading model, can take one of the following values: \n0 - Apartment \n 1 - Both \n 2 - Free \n 3 - Neutral \n 4 - Unknown"), Values{"Apartment", "Both", "Neutral", "Unknown"}, ValueMap{"0", "1", "2", "3", "4"}] uint32 ThreadingModel;
	[Description("The Synchronisation property, if applicable, defines the server synchronisation model, can take on one of the following values: \n0 - Ignored \n 1 - None \n 2 - Supported \n 3 - Required \n 4 - RequiresNew \n 5 - Unknown"), Values{"Ignored", "None", "Supported", "Required", "RequiresNew", "Unknown"}, ValueMap{"0", "1", "2", "3", "4", "5"}] uint32 Synchronisation;
	[Description("The ResultCode property reveals the HRESULT code returned from the loading process.")] uint32 ResultCode;
};

//**************************************************************************
//* Class: Msft_WmiProvider_OperationEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent
//**************************************************************************
[Description("The Msft_WmiProvider_OperationEvent_Post event class contains the operation event generated following completion of provider implementation.")]
class Msft_WmiProvider_OperationEvent_Post : Msft_WmiProvider_OperationEvent
{
};

//**************************************************************************
//* Class: Msft_WmiProvider_ProvideEvents_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_ProvideEvents_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemEventProvider :: ProvideEvents.")]
class Msft_WmiProvider_ProvideEvents_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The Flags property contains the flags associated with the call.")] uint32 Flags;
	[Description("The Result property holds the HRESULT Status code of operation.")] uint32 Result;
};

//**************************************************************************
//* Class: Msft_WmiProvider_GetObjectAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_GetObjectAsyncEvent_Post event class representes an event generated immediately following completion of the provider's implementation of IWbemServices :: GetObjectAsync. ")]
class Msft_WmiProvider_GetObjectAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The ObjectPath property hold the path of the object to retrieve.")] String ObjectPath;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the object defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_CancelQuery_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_CancelQuery_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemEventProviderQuerySink :: CancelQuery.")]
class Msft_WmiProvider_CancelQuery_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The QueryId property holds an identifier of the query which was canceled. This identifier was originally delivered to the provider by the NewQuery method of this interface.")] uint32 QueryId;
	[Description("The Result property holds the HRESULT Status code of operation.")] uint32 Result;
};

//**************************************************************************
//* Class: Msft_WmiProvider_AccessCheck_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_AccessCheck_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemEventSecurity :: AccessCheck.")]
class Msft_WmiProvider_AccessCheck_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The QueryLanguage property holds the language of the following query filter. For this version of WMI, it will always be 'WQL'.")] string QueryLanguage;
	[Description("The Query property is a string containing the event query filter, which was registered by a logical consumer.")] string Query;
	[Description("The Sid property is a Byte Array representing the SID of the client creating the subscription, NULL if subscription is temporary.")] uint8 Sid[];
	[Description("The Result property holds the HRESULT Status code of operation.")] uint32 Result;
};

//**************************************************************************
//* Class: Msft_WmiProvider_DeleteClassAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("Msft_WmiProvider_DeleteClassAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: DeleteClassAsync.")]
class Msft_WmiProvider_DeleteClassAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The ClassName property holds the name of the class targeted for deletion.")] String ClassName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the o defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_DeleteInstanceAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_DeleteInstanceAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: DeleteInstanceAsync.")]
class Msft_WmiProvider_DeleteInstanceAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The ObjectPath property holds a string containing path of instance to be deleted.")] String ObjectPath;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the o defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_PutInstanceAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_PutInstanceAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: PutInstanceAsync.")]
class Msft_WmiProvider_PutInstanceAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The InstanceObject property holds the object instance to be written.")] object InstanceObject;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the o defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property, for create operations, string containing the path of the instance created during the call.The provider can pass the StringParameter to IWbemObjectSink :: SetStatus indicating the key of the instance just created.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_NewQuery_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_NewQuery_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemEventProviderQuerySink :: NewQuery.")]
class Msft_WmiProvider_NewQuery_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The QueryId property holds a Windows Management-generated identifier for the query. The provider can track this so that during a later cancellation it will know which query was canceled.")] uint32 QueryId;
	[Description("The QueryLanguage property hold the language of the following query filter. For this version of WMI, it will always be 'WQL'.")] string QueryLanguage;
	[Description("The Query property holds a string containing the event query filter, which was registered by a logical consumer.")] string Query;
	[Description("The Result property holds the HRESULT Status code of operation.")] uint32 Result;
};

//**************************************************************************
//* Class: Msft_WmiProvider_CreateInstanceEnumAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_CreateInstanceEnumAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: CreateInstanceEnumAsync.")]
class Msft_WmiProvider_CreateInstanceEnumAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("String containing the name of the class for which instances are desired.")] String ClassName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the o defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_PutClassAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_PutClassAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: PutClassAsync.")]
class Msft_WmiProvider_PutClassAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The ClassObject property holds the object containing the class definition.")] object ClassObject;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the object defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_ExecQueryAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_ExecQueryAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: ExecQueryAsync.")]
class Msft_WmiProvider_ExecQueryAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The QueryLanguage property holds a string containing one of the query languages supported by Windows Management.")] String QueryLanguage;
	[Description("The Query property holds a string containing the text of the query.")] String Query;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the o defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_CreateClassEnumAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_CreateClassEnumAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: CreateClassEnumAsync.")]
class Msft_WmiProvider_CreateClassEnumAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The SuperclassName property, if not NULL or blank, this parameter specifies a superclass name. Only classes that are subclasses of this class are returnedIf NULL or blank, and Flags contains WBEM_FLAG_SHALLOW,only top-level classes, that is, those which have noparent class or superclass, are returned. If it isNULL or blank and Flags is WBEM_FLAG_DEEP, all classes within the namespace are returned.")] String SuperclassName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the o defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: Msft_WmiProvider_ExecMethodAsyncEvent_Post
//* Derived from: Msft_WmiProvider_OperationEvent_Post
//**************************************************************************
[Description("The Msft_WmiProvider_ExecMethodAsyncEvent_Post event class represents an event generated immediately following completion of the provider's implementation of IWbemServices :: ExecMethodAsync.")]
class Msft_WmiProvider_ExecMethodAsyncEvent_Post : Msft_WmiProvider_OperationEvent_Post
{
	[Description("The ObjectPath property holds a string containing the object path of the object for which the method is to be executed.")] String ObjectPath;
	[Description("The MethodName property holds a string container the name of the method for the object.")] String MethodName;
	[Description("The Flags property contains the flags associated with the call.")] Uint32 Flags;
	[Description("The InputParameters property is Null, if no inbound parameters are required to execute the method. Otherwise, an object that contains the properties acting as inbound parameters for the method execution. The contents of the object are method-specific, and are part of the specification for the provider in question.")] object InputParameters;
	[Description("The ResultCode property holds the HRESULT Status code of operation.")] Uint32 ResultCode;
	[Description("The ObjectParameter property holds the o defining the extended status passed though provider's IWbemObjectSink :: SetStatus call, possibly NULL.")] object ObjectParameter;
	[Description("The StringParameter property is currently always NULL.")] String StringParameter;
};

//**************************************************************************
//* Class: MSFT_WmiCoreEvent
//* Derived from: MSFT_WmiSelfEvent
//**************************************************************************
class MSFT_WmiCoreEvent : MSFT_WmiSelfEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiCoreTaskFailure
//* Derived from: MSFT_WmiCoreEvent
//**************************************************************************
class MSFT_WmiCoreTaskFailure : MSFT_WmiCoreEvent
{
	uint64 TaskID;
	[subtype("SID")] uint32 UserSid[];
	string Namespace;
	string Request;
	uint32 HRESULT;
	string Comment;
};

//**************************************************************************
//* Class: MSFT_WmiCoreLogoffEvent
//* Derived from: MSFT_WmiCoreEvent
//**************************************************************************
class MSFT_WmiCoreLogoffEvent : MSFT_WmiCoreEvent
{
	[subtype("SID")] uint32 UserSid[];
	string Namespace;
};

//**************************************************************************
//* Class: MSFT_WmiCoreLogonEvent
//* Derived from: MSFT_WmiCoreEvent
//**************************************************************************
class MSFT_WmiCoreLogonEvent : MSFT_WmiCoreEvent
{
	[subtype("SID")] uint32 UserSid[];
	string Namespace;
};

//**************************************************************************
//* Class: MSFT_WmiEssEvent
//* Derived from: MSFT_WmiSelfEvent
//**************************************************************************
class MSFT_WmiEssEvent : MSFT_WmiSelfEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiRegisterNotificationSink
//* Derived from: MSFT_WmiEssEvent
//**************************************************************************
class MSFT_WmiRegisterNotificationSink : MSFT_WmiEssEvent
{
	string Namespace;
	string QueryLanguage;
	string Query;
	uint64 Sink;
};

//**************************************************************************
//* Class: MSFT_WmiThreadPoolEvent
//* Derived from: MSFT_WmiEssEvent
//**************************************************************************
class MSFT_WmiThreadPoolEvent : MSFT_WmiEssEvent
{
	uint32 ThreadId;
};

//**************************************************************************
//* Class: MSFT_WmiThreadPoolThreadCreated
//* Derived from: MSFT_WmiThreadPoolEvent
//**************************************************************************
class MSFT_WmiThreadPoolThreadCreated : MSFT_WmiThreadPoolEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiThreadPoolThreadDeleted
//* Derived from: MSFT_WmiThreadPoolEvent
//**************************************************************************
class MSFT_WmiThreadPoolThreadDeleted : MSFT_WmiThreadPoolEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiFilterEvent
//* Derived from: MSFT_WmiEssEvent
//**************************************************************************
class MSFT_WmiFilterEvent : MSFT_WmiEssEvent
{
	string Namespace;
	string Name;
	string QueryLanguage;
	string Query;
};

//**************************************************************************
//* Class: MSFT_WmiFilterActivated
//* Derived from: MSFT_WmiFilterEvent
//**************************************************************************
class MSFT_WmiFilterActivated : MSFT_WmiFilterEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiFilterDeactivated
//* Derived from: MSFT_WmiFilterEvent
//**************************************************************************
class MSFT_WmiFilterDeactivated : MSFT_WmiFilterEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiProviderEvent
//* Derived from: MSFT_WmiEssEvent
//**************************************************************************
class MSFT_WmiProviderEvent : MSFT_WmiEssEvent
{
	string Namespace;
	string ProviderName;
};

//**************************************************************************
//* Class: MSFT_WmiConsumerProviderEvent
//* Derived from: MSFT_WmiProviderEvent
//**************************************************************************
class MSFT_WmiConsumerProviderEvent : MSFT_WmiProviderEvent
{
	string Machine;
};

//**************************************************************************
//* Class: MSFT_WmiConsumerProviderLoaded
//* Derived from: MSFT_WmiConsumerProviderEvent
//**************************************************************************
class MSFT_WmiConsumerProviderLoaded : MSFT_WmiConsumerProviderEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiConsumerProviderSinkUnloaded
//* Derived from: MSFT_WmiConsumerProviderEvent
//**************************************************************************
class MSFT_WmiConsumerProviderSinkUnloaded : MSFT_WmiConsumerProviderEvent
{
	__EventConsumer ref Consumer;
};

//**************************************************************************
//* Class: MSFT_WmiConsumerProviderUnloaded
//* Derived from: MSFT_WmiConsumerProviderEvent
//**************************************************************************
class MSFT_WmiConsumerProviderUnloaded : MSFT_WmiConsumerProviderEvent
{
};

//**************************************************************************
//* Class: MSFT_WmiConsumerProviderSinkLoaded
//* Derived from: MSFT_WmiConsumerProviderEvent
//**************************************************************************
class MSFT_WmiConsumerProviderSinkLoaded : MSFT_WmiConsumerProviderEvent
{
	__EventConsumer ref Consumer;
};

//**************************************************************************
//* Class: MSFT_WmiCancelNotificationSink
//* Derived from: MSFT_WmiEssEvent
//**************************************************************************
class MSFT_WmiCancelNotificationSink : MSFT_WmiEssEvent
{
	string Namespace;
	string QueryLanguage;
	string Query;
	uint64 Sink;
};

//**************************************************************************
//* Class: Win32_ComputerSystemEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
[Locale(1033): ToInstance, UUID("{999A286E-CF9C-4f0c-8F0F-827C4C0D9CC6}"): ToInstance]
class Win32_ComputerSystemEvent : __ExtrinsicEvent
{
	[read: ToSubClass] string MachineName;
};

//**************************************************************************
//* Class: Win32_ComputerShutdownEvent
//* Derived from: Win32_ComputerSystemEvent
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A6B834B1-F974-4445-8F2E-FC996638B350}"): ToInstance]
class Win32_ComputerShutdownEvent : Win32_ComputerSystemEvent
{
	[read: ToSubClass] uint32 Type;
};

//**************************************************************************
//* Class: Win32_SystemTrace
//* Derived from: __ExtrinsicEvent
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_SystemTrace : __ExtrinsicEvent
{
};

//**************************************************************************
//* Class: Win32_ModuleTrace
//* Derived from: Win32_SystemTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ModuleTrace : Win32_SystemTrace
{
};

//**************************************************************************
//* Class: Win32_ModuleLoadTrace
//* Derived from: Win32_ModuleTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ModuleLoadTrace : Win32_ModuleTrace
{
	[read: ToSubClass] uint64 ImageBase;
	[read: ToSubClass] uint32 ImageSize;
	[read: ToSubClass] uint32 ProcessID;
	[read: ToSubClass] string FileName;
};

//**************************************************************************
//* Class: Win32_ThreadTrace
//* Derived from: Win32_SystemTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ThreadTrace : Win32_SystemTrace
{
	[read: ToSubClass] uint32 ThreadID;
	[read: ToSubClass] uint32 ProcessID;
};

//**************************************************************************
//* Class: Win32_ThreadStartTrace
//* Derived from: Win32_ThreadTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ThreadStartTrace : Win32_ThreadTrace
{
	[read: ToSubClass] uint64 StackBase;
	[read: ToSubClass] uint64 StackLimit;
	[read: ToSubClass] uint64 UserStackBase;
	[read: ToSubClass] uint64 UserStackLimit;
	uint64 StartAddr;
	uint64 Win32StartAddr;
	uint32 WaitMode;
};

//**************************************************************************
//* Class: Win32_ThreadStopTrace
//* Derived from: Win32_ThreadTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ThreadStopTrace : Win32_ThreadTrace
{
};

//**************************************************************************
//* Class: Win32_ProcessTrace
//* Derived from: Win32_SystemTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ProcessTrace : Win32_SystemTrace
{
	[read: ToSubClass] uint32 ProcessID;
	[read: ToSubClass] uint32 ParentProcessID;
	[read: ToSubClass] uint32 SessionID;
	[read: ToSubClass] uint8 Sid[];
	[read: ToSubClass] string ProcessName;
	[read: ToSubClass] uint64 PageDirectoryBase;
};

//**************************************************************************
//* Class: Win32_ProcessStartTrace
//* Derived from: Win32_ProcessTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ProcessStartTrace : Win32_ProcessTrace
{
};

//**************************************************************************
//* Class: Win32_ProcessStopTrace
//* Derived from: Win32_ProcessTrace
//**************************************************************************
[Locale(1033): ToInstance]
class Win32_ProcessStopTrace : Win32_ProcessTrace
{
};

//**************************************************************************
//* Class: MSFT_SCMEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
class MSFT_SCMEvent : __ExtrinsicEvent
{
};

//**************************************************************************
//* Class: MSFT_SCMEventLogEvent
//* Derived from: MSFT_SCMEvent
//**************************************************************************
class MSFT_SCMEventLogEvent : MSFT_SCMEvent
{
};

//**************************************************************************
//* Class: MSFT_NetBadAccount
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232480"): ToInstance, EventType(1): ToInstance]
class MSFT_NetBadAccount : MSFT_SCMEventLogEvent
{
};

//**************************************************************************
//* Class: MSFT_NetServiceExitFailedSpecific
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232496"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%Error% (%Error(0x%X)%)"}: ToInstance]
class MSFT_NetServiceExitFailedSpecific : MSFT_SCMEventLogEvent
{
	string Service;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetServiceCrash
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232503"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%TimesFailed%", "%ActionDelay%", "%ActionType%", "%Action%"}: ToInstance]
class MSFT_NetServiceCrash : MSFT_SCMEventLogEvent
{
	string Service;
	uint32 TimesFailed;
	uint32 ActionDelay;
	uint32 ActionType;
	string Action;
};

//**************************************************************************
//* Class: MSFT_NetServiceStartFailedII
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232473"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%DependedOnService%", "%%%%%Error%"}: ToInstance]
class MSFT_NetServiceStartFailedII : MSFT_SCMEventLogEvent
{
	string Service;
	string DependedOnService;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetConnectionTimeout
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232481"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Milliseconds%", "%Service%"}: ToInstance]
class MSFT_NetConnectionTimeout : MSFT_SCMEventLogEvent
{
	uint32 Milliseconds;
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetReadfileTimeout
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232482"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Milliseconds%"}: ToInstance]
class MSFT_NetReadfileTimeout : MSFT_SCMEventLogEvent
{
	uint32 Milliseconds;
};

//**************************************************************************
//* Class: MSFT_NetCallToFunctionFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232477"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%FunctionName%", "%%%%%Error%"}: ToInstance]
class MSFT_NetCallToFunctionFailed : MSFT_SCMEventLogEvent
{
	string FunctionName;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetServiceControlSuccess
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId(1073748859): ToInstance, EventType(4): ToInstance, InsertionStringTemplates{"%Service%", "%Control%"}: ToInstance]
class MSFT_NetServiceControlSuccess : MSFT_SCMEventLogEvent
{
	string Service;
	string Control;
	string sid;
};

//**************************************************************************
//* Class: MSFT_NetServiceStartFailedGroup
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232474"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%Group%"}: ToInstance]
class MSFT_NetServiceStartFailedGroup : MSFT_SCMEventLogEvent
{
	string Service;
	string Group;
};

//**************************************************************************
//* Class: MSFT_NetServiceExitFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232495"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%%%%%Error%"}: ToInstance]
class MSFT_NetServiceExitFailed : MSFT_SCMEventLogEvent
{
	string Service;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetRevertedToLastKnownGood
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232479"): ToInstance, EventType(1): ToInstance]
class MSFT_NetRevertedToLastKnownGood : MSFT_SCMEventLogEvent
{
};

//**************************************************************************
//* Class: MSFT_NetServiceStartHung
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232494"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%"}: ToInstance]
class MSFT_NetServiceStartHung : MSFT_SCMEventLogEvent
{
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetCircularDependencyDemand
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232489"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%"}: ToInstance]
class MSFT_NetCircularDependencyDemand : MSFT_SCMEventLogEvent
{
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetCircularDependencyAuto
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232490"): ToInstance, EventType(1): ToInstance]
class MSFT_NetCircularDependencyAuto : MSFT_SCMEventLogEvent
{
};

//**************************************************************************
//* Class: MSFT_NetDependOnLaterGroup
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232491"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%"}: ToInstance]
class MSFT_NetDependOnLaterGroup : MSFT_SCMEventLogEvent
{
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetTakeOwnership
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232500"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%RegistryKey%"}: ToInstance]
class MSFT_NetTakeOwnership : MSFT_SCMEventLogEvent
{
	string RegistryKey;
};

//**************************************************************************
//* Class: MSFT_NetServiceRecoveryFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232504"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%ActionType%", "%Action%", "%Service%", "%%%%%Error%"}: ToInstance]
class MSFT_NetServiceRecoveryFailed : MSFT_SCMEventLogEvent
{
	uint32 ActionType;
	string Action;
	string Service;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetServiceConfigBackoutFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232509"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%ConfigField%"}: ToInstance]
class MSFT_NetServiceConfigBackoutFailed : MSFT_SCMEventLogEvent
{
	string Service;
	string ConfigField;
};

//**************************************************************************
//* Class: MSFT_NetCallToFunctionFailedII
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232478"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%FunctionName%", "%Argument%", "%%%%%Error%"}: ToInstance]
class MSFT_NetCallToFunctionFailedII : MSFT_SCMEventLogEvent
{
	string FunctionName;
	string Argument;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetServiceCrashNoAction
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232506"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%TimesFailed%"}: ToInstance]
class MSFT_NetServiceCrashNoAction : MSFT_SCMEventLogEvent
{
	string Service;
	uint32 TimesFailed;
};

//**************************************************************************
//* Class: MSFT_NetTransactTimeout
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232483"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Milliseconds%", "%Service%"}: ToInstance]
class MSFT_NetTransactTimeout : MSFT_SCMEventLogEvent
{
	uint32 Milliseconds;
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetSevereServiceFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232493"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%"}: ToInstance]
class MSFT_NetSevereServiceFailed : MSFT_SCMEventLogEvent
{
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetTransactInvalid
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232484"): ToInstance, EventType(1): ToInstance]
class MSFT_NetTransactInvalid : MSFT_SCMEventLogEvent
{
};

//**************************************************************************
//* Class: MSFT_NetServiceNotInteractive
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232502"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%"}: ToInstance]
class MSFT_NetServiceNotInteractive : MSFT_SCMEventLogEvent
{
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetServiceStartFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232472"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%%%%%Error%"}: ToInstance]
class MSFT_NetServiceStartFailed : MSFT_SCMEventLogEvent
{
	string Service;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetFirstLogonFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232485"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%%%%%Error%"}: ToInstance]
class MSFT_NetFirstLogonFailed : MSFT_SCMEventLogEvent
{
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NetServiceStatusSuccess
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId(1073748860): ToInstance, EventType(4): ToInstance, InsertionStringTemplates{"%Service%", "%Control%"}: ToInstance]
class MSFT_NetServiceStatusSuccess : MSFT_SCMEventLogEvent
{
	string Service;
	string Control;
};

//**************************************************************************
//* Class: MSFT_NetDependOnLaterService
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232491"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%"}: ToInstance]
class MSFT_NetDependOnLaterService : MSFT_SCMEventLogEvent
{
	string Service;
};

//**************************************************************************
//* Class: MSFT_NetInvalidDriverDependency
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232487"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Driver%"}: ToInstance]
class MSFT_NetInvalidDriverDependency : MSFT_SCMEventLogEvent
{
	string Driver;
};

//**************************************************************************
//* Class: MSFT_NetServiceStartFailedNone
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232475"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%NonExistingService%"}: ToInstance]
class MSFT_NetServiceStartFailedNone : MSFT_SCMEventLogEvent
{
	string Service;
	string NonExistingService;
};

//**************************************************************************
//* Class: MSFT_NetBadServiceState
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232488"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%State%"}: ToInstance]
class MSFT_NetBadServiceState : MSFT_SCMEventLogEvent
{
	string Service;
	uint32 State;
};

//**************************************************************************
//* Class: MSFT_NetBootSystemDriversFailed
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232498"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%DriverList%"}: ToInstance]
class MSFT_NetBootSystemDriversFailed : MSFT_SCMEventLogEvent
{
	string DriverList;
};

//**************************************************************************
//* Class: MSFT_NetFirstLogonFailedII
//* Derived from: MSFT_SCMEventLogEvent
//**************************************************************************
[EventId("3221232510"): ToInstance, EventType(1): ToInstance, InsertionStringTemplates{"%Service%", "%Account%", "%%%%%Error%"}: ToInstance]
class MSFT_NetFirstLogonFailedII : MSFT_SCMEventLogEvent
{
	string Service;
	string Account;
	uint32 Error;
};

//**************************************************************************
//* Class: MSFT_NCProvEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
class MSFT_NCProvEvent : __ExtrinsicEvent
{
	string Namespace;
	string ProviderName;
	uint32 Result;
};

//**************************************************************************
//* Class: MSFT_NCProvNewQuery
//* Derived from: MSFT_NCProvEvent
//**************************************************************************
class MSFT_NCProvNewQuery : MSFT_NCProvEvent
{
	string QueryLanguage;
	string Query;
	uint32 ID;
};

//**************************************************************************
//* Class: MSFT_NCProvAccessCheck
//* Derived from: MSFT_NCProvEvent
//**************************************************************************
class MSFT_NCProvAccessCheck : MSFT_NCProvEvent
{
	string QueryLanguage;
	string Query;
	uint8 Sid[];
};

//**************************************************************************
//* Class: MSFT_NCProvCancelQuery
//* Derived from: MSFT_NCProvEvent
//**************************************************************************
class MSFT_NCProvCancelQuery : MSFT_NCProvEvent
{
	uint32 ID;
};

//**************************************************************************
//* Class: MSFT_NCProvClientConnected
//* Derived from: MSFT_NCProvEvent
//**************************************************************************
class MSFT_NCProvClientConnected : MSFT_NCProvEvent
{
	boolean Inproc;
};

//**************************************************************************
//* Class: Win32_PowerManagementEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
[Locale(1033): ToInstance, UUID("{86460B6B-E709-11d2-B139-00105A1F77A1}"): ToInstance]
class Win32_PowerManagementEvent : __ExtrinsicEvent
{
	[read: ToSubClass, MappingStrings{"Win32API|Power Management Events"}: ToSubClass, ValueMap{"4", "7", "10", "11", "18"}: ToSubClass] uint16 EventType;
	[read: ToSubClass, MappingStrings{"Win32API|Power Management Events"}: ToSubClass] uint16 OEMEventCode;
};

//**************************************************************************
//* Class: MSFT_ForwardedMessageEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
[Locale(1033)]
class MSFT_ForwardedMessageEvent : __ExtrinsicEvent
{
	datetime Time;
	string Machine;
	string Consumer;
	string Namespace;
	uint8 Account[];
	boolean Authenticated;
};

//**************************************************************************
//* Class: MSFT_ForwardedEvent
//* Derived from: MSFT_ForwardedMessageEvent
//**************************************************************************
[Locale(1033)]
class MSFT_ForwardedEvent : MSFT_ForwardedMessageEvent
{
	__Event Event;
};

//**************************************************************************
//* Class: Win32_DeviceChangeEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
[Locale(1033): ToInstance, UUID("0DE6AAF8-49F1-4868-B3D4-61CB69BA4322"): ToInstance]
class Win32_DeviceChangeEvent : __ExtrinsicEvent
{
	[read: ToSubClass, MappingStrings{"Win32APIDevice Management Messages|WM_DEVICECHANGE|wParam", "Win32APIDevice Management Messages|WM_SETTINGCHANGE"}: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass] uint16 EventType;
};

//**************************************************************************
//* Class: Win32_SystemConfigurationChangeEvent
//* Derived from: Win32_DeviceChangeEvent
//**************************************************************************
[Locale(1033): ToInstance, UUID("76746942-D94B-47E2-BBA4-AFD2FDBA61"): ToInstance]
class Win32_SystemConfigurationChangeEvent : Win32_DeviceChangeEvent
{
};

//**************************************************************************
//* Class: Win32_VolumeChangeEvent
//* Derived from: Win32_DeviceChangeEvent
//**************************************************************************
[Locale(1033): ToInstance, UUID("455CE053-2552-4051-A3E4-C4200DC31B7"): ToInstance]
class Win32_VolumeChangeEvent : Win32_DeviceChangeEvent
{
	[read: ToSubClass] string DriveName;
};

//**************************************************************************
//* Class: Win32_IP4RouteTableEvent
//* Derived from: __ExtrinsicEvent
//**************************************************************************
[Locale(1033): ToInstance, UUID("{1C385E29-A5B4-40F0-96CF-929FC00958B}"): ToInstance]
class Win32_IP4RouteTableEvent : __ExtrinsicEvent
{
};

//**************************************************************************
//* Class: __ClassOperationEvent
//* Derived from: __Event
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ClassOperationEvent : __Event
//* {
//* 	object TargetClass;
//* };

//**************************************************************************
//* Class: __ClassModificationEvent
//* Derived from: __ClassOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ClassModificationEvent : __ClassOperationEvent
//* {
//* 	object PreviousClass;
//* };

//**************************************************************************
//* Class: __ClassCreationEvent
//* Derived from: __ClassOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ClassCreationEvent : __ClassOperationEvent
//* {
//* };

//**************************************************************************
//* Class: __ClassDeletionEvent
//* Derived from: __ClassOperationEvent
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ClassDeletionEvent : __ClassOperationEvent
//* {
//* };

//**************************************************************************
//* Class: __TimerEvent
//* Derived from: __Event
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __TimerEvent : __Event
//* {
//* 	string TimerId;
//* 	uint32 NumFirings;
//* };

//**************************************************************************
//* Class: __AggregateEvent
//* Derived from: __IndicationRelated
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __AggregateEvent : __IndicationRelated
//* {
//* 	uint32 NumberOfEvents;
//* 	object Representative;
//* };

//**************************************************************************
//* Class: __EventConsumer
//* Derived from: __IndicationRelated
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __EventConsumer : __IndicationRelated
//* {
//* 	string MachineName;
//* 	[units("bytes"): DisableOverride ToInstance ToSubClass] uint32 MaximumQueueSize;
//* 	[read: DisableOverride ToInstance ToSubClass] uint8 CreatorSID[] = {1, 1, 0, 0, 0, 0, 0, 5, 18, 0, 0, 0};
//* };

//**************************************************************************
//* Class: EventViewerConsumer
//* Derived from: __EventConsumer
//**************************************************************************
[Locale(73), UUID("{8502C596-5FBB-11D2-AAC1-006008C78BC7}")]
class EventViewerConsumer : __EventConsumer
{
	[key] string Name = "";
	[read, ValueMap{"0", "1", "2"}, Values{"Error", "Warning", "Information"}] uint8 Severity = 0;
	[read] string Description = "";
};

//**************************************************************************
//* Class: CmdTriggerConsumer
//* Derived from: __EventConsumer
//**************************************************************************
[provider("CmdTriggerConsumer")]
class CmdTriggerConsumer : __EventConsumer
{
	[key] uint32 TriggerID;
	[read] string TriggerName;
	[read] string Action;
	[read] string ScheduledTaskName;
	[read, write] string TriggerDesc;
	[implemented, static] uint32 CreateETrigger([IN] string TriggerName, [IN] string TriggerDesc, [IN] string TriggerAction, [IN] string TriggerQuery, [IN] string RunAsUser, [IN] string RunAsPwd);
	[implemented, static] uint32 DeleteETrigger([IN] string TriggerName);
	[implemented, static] uint32 QueryETrigger([IN] string ScheduledTaskName, [OUT] string RunAsUser);
};

//**************************************************************************
//* Class: __FilterToConsumerBinding
//* Derived from: __IndicationRelated
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [Association: DisableOverride ToInstance ToSubClass]
//* class __FilterToConsumerBinding : __IndicationRelated
//* {
//* 	[key] __EventFilter ref Filter;
//* 	[key] __EventConsumer ref Consumer;
//* 	uint32 DeliveryQoS;
//* 	[not_null: DisableOverride ToInstance ToSubClass] boolean DeliverSynchronously = FALSE;
//* 	boolean MaintainSecurityContext = FALSE;
//* 	boolean SlowDownProviders = FALSE;
//* 	[read: DisableOverride ToInstance ToSubClass] uint8 CreatorSID[] = {1, 1, 0, 0, 0, 0, 0, 5, 18, 0, 0, 0};
//* };

//**************************************************************************
//* Class: __TimerNextFiring
//* Derived from: __IndicationRelated
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __TimerNextFiring : __IndicationRelated
//* {
//* 	[key] string TimerId;
//* 	[not_null: DisableOverride ToInstance ToSubClass] sint64 NextEvent64BitTime;
//* };

//**************************************************************************
//* Class: __EventFilter
//* Derived from: __IndicationRelated
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __EventFilter : __IndicationRelated
//* {
//* 	[key] string Name;
//* 	[read: DisableOverride ToInstance ToSubClass] uint8 CreatorSID[] = {1, 1, 0, 0, 0, 0, 0, 5, 18, 0, 0, 0};
//* 	string QueryLanguage;
//* 	string Query;
//* 	string EventNamespace;
//* 	string EventAccess;
//* };

//**************************************************************************
//* Class: __ProviderRegistration
//* Derived from: __SystemClass
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __ProviderRegistration : __SystemClass
//* {
//* 	__Provider ref provider;
//* };

//**************************************************************************
//* Class: __EventProviderRegistration
//* Derived from: __ProviderRegistration
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __EventProviderRegistration : __ProviderRegistration
//* {
//* 	[key] __Provider ref provider;
//* 	string EventQueryList[];
//* };

//**************************************************************************
//* Class: __EventConsumerProviderRegistration
//* Derived from: __ProviderRegistration
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __EventConsumerProviderRegistration : __ProviderRegistration
//* {
//* 	[key] __Provider ref provider;
//* 	string ConsumerClassNames[];
//* };

//**************************************************************************
//* Class: __PropertyProviderRegistration
//* Derived from: __ProviderRegistration
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __PropertyProviderRegistration : __ProviderRegistration
//* {
//* 	[key] __Provider ref provider;
//* 	boolean SupportsPut = FALSE;
//* 	boolean SupportsGet = FALSE;
//* };

//**************************************************************************
//* Class: __ObjectProviderRegistration
//* Derived from: __ProviderRegistration
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* [abstract]
//* class __ObjectProviderRegistration : __ProviderRegistration
//* {
//* 	boolean SupportsPut = FALSE;
//* 	boolean SupportsGet = FALSE;
//* 	boolean SupportsDelete = FALSE;
//* 	boolean SupportsEnumeration = FALSE;
//* 	[ValueMap{"WQL:UnarySelect", "WQL:References", "WQL:Associators", "WQL:V1ProviderDefined"}: ToSubClass] string QuerySupportLevels[];
//* 	[Values{"Pull", "Push", "PushVerify"}: ToSubClass] sint32 InteractionType = 0;
//* 	boolean SupportsBatching;
//* 	boolean SupportsTransactions;
//* };

//**************************************************************************
//* Class: __InstanceProviderRegistration
//* Derived from: __ObjectProviderRegistration
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __InstanceProviderRegistration : __ObjectProviderRegistration
//* {
//* 	[key] __Provider ref provider;
//* };

//**************************************************************************
//* Class: __ClassProviderRegistration
//* Derived from: __ObjectProviderRegistration
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __ClassProviderRegistration : __ObjectProviderRegistration
//* {
//* 	[key] __Provider ref provider;
//* 	uint32 Version;
//* 	string ResultSetQueries[];
//* 	string ReferencedSetQueries[];
//* 	string UnsupportedQueries[];
//* 	[SUBTYPE("interval"): ToInstance ToSubClass] datetime CacheRefreshInterval;
//* 	boolean PerUserSchema;
//* 	boolean ReSynchroniseOnNamespaceOpen;
//* };

//**************************************************************************
//* Class: __MethodProviderRegistration
//* Derived from: __ProviderRegistration
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __MethodProviderRegistration : __ProviderRegistration
//* {
//* 	[key] __Provider ref provider;
//* };

//**************************************************************************
//* Class: __NAMESPACE
//* Derived from: __SystemClass
//* Informational only:  A system class definition will not compile.
//**************************************************************************
//* class __NAMESPACE : __SystemClass
//* {
//* 	[key] string Name;
//* };

//**************************************************************************
//* Class: CIM_ProductParentChild
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{3E24D5A6-DB2B-11d2-85FC-0000F8102E5F}"): ToInstance, Aggregation: ToSubClass, Association: DisableOverride ToInstance ToSubClass]
class CIM_ProductParentChild
{
	[read: ToSubClass] CIM_Product ref Child;
	[read: ToSubClass, Aggregate: ToSubClass] CIM_Product ref Parent;
};

//**************************************************************************
//* Class: Win32_ShareToDirectory
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C511-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_ShareToDirectory
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_Share"}: ToSubClass] Win32_Share ref Share;
	[read: ToSubClass, key, MappingStrings{"CIM|CIM_Directory"}: ToSubClass] CIM_Directory ref SharedElement;
};

//**************************************************************************
//* Class: CIM_LogicalIdentity
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, Association: DisableOverride ToInstance ToSubClass, Abstract]
class CIM_LogicalIdentity
{
	[key] CIM_LogicalElement ref SystemElement;
	[key] CIM_LogicalElement ref SameElement;
};

//**************************************************************************
//* Class: Win32_ActiveRoute
//* Derived from: CIM_LogicalIdentity
//**************************************************************************
[dynamic: ToInstance, provider("RouteProvider"): ToInstance, Locale(1033): ToInstance, UUID("{7BA1437A-C51C-421B-A359-2906AF2BDD9F}"): ToInstance]
class Win32_ActiveRoute : CIM_LogicalIdentity
{
	[read: ToSubClass, Override("SystemElement"): ToSubClass, MappingStrings{""}: ToSubClass] Win32_IP4RouteTable ref SystemElement = NULL;
	[read: ToSubClass, Override("SameElement"): ToSubClass, MappingStrings{""}: ToSubClass] Win32_IP4PersistedRouteTable ref SameElement = NULL;
};

//**************************************************************************
//* Class: MSFT_WmiCoreObject
//* Derived from: 
//**************************************************************************
class MSFT_WmiCoreObject
{
};

//**************************************************************************
//* Class: MSFT_WmiCoreUser
//* Derived from: MSFT_WmiCoreObject
//**************************************************************************
class MSFT_WmiCoreUser : MSFT_WmiCoreObject
{
	[subtype("SID")] uint32 UserSid[];
	datetime TimeOfLastRequest;
};

//**************************************************************************
//* Class: MSFT_WmiCoreStatus
//* Derived from: MSFT_WmiCoreObject
//**************************************************************************
[singleton: DisableOverride ToInstance ToSubClass]
class MSFT_WmiCoreStatus : MSFT_WmiCoreObject
{
	uint32 Users;
	uint32 Connections;
	uint32 Tasks;
	uint32 TasksExecuted;
	uint32 DeliveryBacklogBytes;
	uint32 TotalApiCallsMade;
	uint32 InternalObjectCount;
	uint32 InternalSinkCount;
};

//**************************************************************************
//* Class: CIM_FRUPhysicalElements
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{977E36CA-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Aggregation: ToSubClass, Association: DisableOverride ToInstance ToSubClass]
class CIM_FRUPhysicalElements
{
	[read: ToSubClass] CIM_PhysicalElement ref Component;
	[read: ToSubClass, Aggregate: ToSubClass, Max(1): ToSubClass] CIM_FRU ref FRU;
};

//**************************************************************************
//* Class: CIM_RelatedStatistics
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{956597A4-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_RelatedStatistics
{
	[read: ToSubClass] CIM_StatisticalInformation ref Stats;
	[read: ToSubClass] CIM_StatisticalInformation ref RelatedStats;
};

//**************************************************************************
//* Class: CIM_InstalledSoftwareElement
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A7B05028-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, Abstract]
class CIM_InstalledSoftwareElement
{
	[Min(0): ToSubClass, Max(FALSE): ToSubClass, read: ToSubClass] CIM_SoftwareElement ref Software;
	[Min(0): ToSubClass, Max(FALSE): ToSubClass, read: ToSubClass] CIM_ComputerSystem ref System;
};

//**************************************************************************
//* Class: Win32_InstalledSoftwareElement
//* Derived from: CIM_InstalledSoftwareElement
//**************************************************************************
[Locale(1033): ToInstance, UUID("{DB91D602-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_InstalledSoftwareElement : CIM_InstalledSoftwareElement
{
	[Min(0): ToSubClass, Max(1): ToSubClass, read: ToSubClass, key] Win32_SoftwareElement ref Software = NULL;
	[Min(0): ToSubClass, Max(1): ToSubClass, read: ToSubClass, key] CIM_ComputerSystem ref System = NULL;
};

//**************************************************************************
//* Class: Win32_PnPDevice
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FE28FD96-C875-11d2-B352-00104BC97924}"): ToInstance]
class Win32_PnPDevice
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_PnPEntity"}: ToSubClass] Win32_PnPEntity ref SystemElement;
	[read: ToSubClass, key, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref SameElement;
};

//**************************************************************************
//* Class: CIM_ProductProductDependency
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{65878E68-DB2B-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_ProductProductDependency
{
	[read: ToSubClass] CIM_Product ref DependentProduct;
	[read: ToSubClass] CIM_Product ref RequiredProduct;
	[read: ToSubClass] UINT16 TypeOfDependency;
};

//**************************************************************************
//* Class: Msft_WmiProvider_Counters
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("Msft_ProviderSubSystem"), Singleton: DisableOverride ToInstance ToSubClass, Description("ThMsft_WmiProvider_Counters class exposes approximate internal operation call count information accross all providers.")]
class Msft_WmiProvider_Counters
{
	[Description("The ProviderOperation_GetObjectAsync property indicates the number of calls to IWbemServices :: GetObjectAsync.")] Uint64 ProviderOperation_GetObjectAsync;
	[Description("The ProviderOperation_PutClassAsync property indicates the number of calls to IWbemServices :: PutClassAsync.")] Uint64 ProviderOperation_PutClassAsync;
	[Description("The ProviderOperation_DeleteClassAsync property indicates the number of calls to IWbemServices :: DeleteClassAsync.")] Uint64 ProviderOperation_DeleteClassAsync;
	[Description("The ProviderOperation_CreateClassEnumAsync property indicates the number of calls to IWbemServices :: CreateClassEnumAsync.")] Uint64 ProviderOperation_CreateClassEnumAsync;
	[Description("The ProviderOperation_PutInstanceAsync property indicates the number of calls to IWbemServices :: PutInstanceAsync.")] Uint64 ProviderOperation_PutInstanceAsync;
	[Description("The ProviderOperation_DeleteInstanceAsync property indicates the number of calls to IWbemServices :: DeleteInstanceAsync.")] Uint64 ProviderOperation_DeleteInstanceAsync;
	[Description("The ProviderOperation_CreateInstanceEnumAsync property indicates the number of calls to IWbemServices :: CreateInstanceEnumAsync.")] Uint64 ProviderOperation_CreateInstanceEnumAsync;
	[Description("The ProviderOperation_ExecQueryAsync property indicates the number of calls to IWbemServices :: ExecQueryAsync.")] Uint64 ProviderOperation_ExecQueryAsync;
	[Description("The ProviderOperation_ExecMethodAsync property indicates the number of calls to IWbemServices :: ExecMethodAsync.")] Uint64 ProviderOperation_ExecMethodAsync;
	[Description("The ProviderOperation_QueryInstances property indicates the number of calls to IWbemHiPerfProvider :: QueryInstances.")] Uint64 ProviderOperation_QueryInstances;
	[Description("The ProviderOperation_CreateRefresher property indicates the number of calls to IWbemHiPerfProvider :: CreateRefresher.")] Uint64 ProviderOperation_CreateRefresher;
	[Description("The ProviderOperation_CreateRefreshableObject property indicates the number of calls to IWbemHiPerfProvider :: CreateRefreshableObject.")] Uint64 ProviderOperation_CreateRefreshableObject;
	[Description("The ProviderOperation_StopRefreshing property indicates the number of calls to IWbemHiPerfProvider :: StopRefreshing.")] Uint64 ProviderOperation_StopRefreshing;
	[Description("The ProviderOperation_CreateRefreshableEnum property indicates the number of calls to IWbemHiPerfProvider :: CreateRefreshableEnum.")] Uint64 ProviderOperation_CreateRefreshableEnum;
	[Description("The ProviderOperation_GetObjects property indicates the number of calls to IWbemHiPerfProvider :: GetObjects.")] Uint64 ProviderOperation_GetObjects;
	[Description("The ProviderOperation_GetProperty property indicates the number of calls to IWbemPropertyProvider :: GetProperty.")] Uint64 ProviderOperation_GetProperty;
	[Description("The ProviderOperation_PutProperty property indicates the number of calls to IWbemPropertyProvider :: PutProperty.")] Uint64 ProviderOperation_PutProperty;
	[Description("The ProviderOperation_ProvideEvents property indicates the number of calls to IWbemEventProvider :: ProvideEvents.")] Uint64 ProviderOperation_ProvideEvents;
	[Description("The ProviderOperation_NewQuery property indicates the number of calls to IWbemEventProviderQuerySink :: NewQuery.")] Uint64 ProviderOperation_NewQuery;
	[Description("The ProviderOperation_CancelQuery property indicates the number of calls to IWbemEventProviderQuerySink :: CancelQuery.")] Uint64 ProviderOperation_CancelQuery;
	[Description("The ProviderOperation_AccessCheck property indicates the number of calls to IWbemEventProviderSecurity :: AccessCheck.")] Uint64 ProviderOperation_AccessCheck;
	[Description("The ProviderOperation_SetRegistrationObject ProviderOperation_SetRegistrationObject property is currently not set.")] Uint64 ProviderOperation_SetRegistrationObject;
	[Description("The ProviderOperation_FindConsumer property indicates the number of calls to IWbemEventConsumerProvider :: FindConsumer.")] Uint64 ProviderOperation_FindConsumer;
	[Description("The ProviderOperation_ValidateSubscription property indicates the number of calls to IWbemEventConsumerProviderEx :: ValidateSubscription.")] Uint64 ProviderOperation_ValidateSubscription;
};

//**************************************************************************
//* Class: Win32_ManagedSystemElementResource
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{E40D5488-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, abstract]
class Win32_ManagedSystemElementResource
{
};

//**************************************************************************
//* Class: Win32_SoftwareElementResource
//* Derived from: Win32_ManagedSystemElementResource
//**************************************************************************
[Locale(1033): ToInstance, UUID("{322CE0F0-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareElementResource : Win32_ManagedSystemElementResource
{
	[key, Override("Element"), read: ToSubClass] Win32_SoftwareElement ref Element;
	[key, Override("Setting"), read: ToSubClass] Win32_MSIResource ref Setting;
};

//**************************************************************************
//* Class: CIM_StorageError
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{71312AB6-DB31-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_StorageError
{
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Propagated("CIM_StorageExtent.CreationClassName"): ToSubClass] STRING DeviceCreationClassName;
	[read: ToSubClass, key, MaxLen(64): ToSubClass, Propagated("CIM_StorageExtent.DeviceID"): ToSubClass] STRING DeviceID;
	[read: ToSubClass] UINT64 EndingAddress;
	[read: ToSubClass, key] UINT64 StartingAddress;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Propagated("CIM_StorageExtent.SystemCreationClassName"): ToSubClass] STRING SystemCreationClassName;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Propagated("CIM_StorageExtent.SystemName"): ToSubClass] STRING SystemName;
};

//**************************************************************************
//* Class: CIM_ManagedSystemElement
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C517-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_ManagedSystemElement
{
	[MaxLen(64): ToSubClass, read: ToSubClass] string Caption;
	[read: ToSubClass] string Description;
	[MappingStrings{"MIF.DMTF|ComponentID|001.5"}: ToSubClass, read: ToSubClass] datetime InstallDate;
	[read: ToSubClass] string Name;
	[read: ToSubClass, MaxLen(10): ToSubClass, ValueMap{"OK", "Error", "Degraded", "Unknown", "Pred Fail", "Starting", "Stopping", "Service", "Stressed", "NonRecover", "No Contact", "Lost Comm"}: ToSubClass] string Status;
};

//**************************************************************************
//* Class: CIM_PhysicalElement
//* Derived from: CIM_ManagedSystemElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B61-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalElement : CIM_ManagedSystemElement
{
	[CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string CreationClassName;
	[read: ToSubClass, MaxLen(256): ToSubClass] string Manufacturer;
	[read: ToSubClass, MaxLen(64): ToSubClass] string Model;
	[read: ToSubClass, MaxLen(64): ToSubClass] string SKU;
	[read: ToSubClass, MaxLen(64): ToSubClass] string SerialNumber;
	[CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string Tag;
	[read: ToSubClass, MaxLen(64): ToSubClass] string Version;
	[read: ToSubClass, MaxLen(256): ToSubClass] string PartNumber;
	[read: ToSubClass] string OtherIdentifyingInfo;
	[read: ToSubClass] boolean PoweredOn;
};

//**************************************************************************
//* Class: CIM_PhysicalComponent
//* Derived from: CIM_PhysicalElement
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B78-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalComponent : CIM_PhysicalElement
{
	[read: ToSubClass] boolean Removable;
	[read: ToSubClass] boolean Replaceable;
	[read: ToSubClass] boolean HotSwappable;
};

//**************************************************************************
//* Class: Win32_OnBoardDevice
//* Derived from: CIM_PhysicalComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{AEECF151-D0EA-11d2-ABFC-00805F538618}"): ToInstance]
class Win32_OnBoardDevice : CIM_PhysicalComponent
{
	[read: ToSubClass, Override("Description"): ToSubClass, MappingStrings{"SMBIOS|Type 10|Description"}: ToSubClass] string Description = NULL;
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Tag = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 10|Device Type n"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7"}: ToSubClass] uint16 DeviceType;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 10|Device Status n"}: ToSubClass] boolean Enabled;
};

//**************************************************************************
//* Class: CIM_PhysicalMedia
//* Derived from: CIM_PhysicalComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B7D-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalMedia : CIM_PhysicalComponent
{
	[Units("Bytes"): ToSubClass, read: ToSubClass] uint64 Capacity;
	[ModelCorrespondence{"CIM_PhysicalMedia.MediaDescription"}: ToSubClass, read: ToSubClass] uint16 MediaType;
	[ModelCorrespondence{"CIM_PhysicalMedia.MediaType"}: ToSubClass, read: ToSubClass] string MediaDescription;
	[read: ToSubClass] boolean WriteProtectOn;
	[read: ToSubClass] boolean CleanerMedia;
};

//**************************************************************************
//* Class: Win32_PhysicalMedia
//* Derived from: CIM_PhysicalMedia
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance, UUID("{BF253431-1E4D-4F57-00E7-64B2CACC801E}"): ToInstance]
class Win32_PhysicalMedia : CIM_PhysicalMedia
{
	[read: ToSubClass, Override("SerialNumber"): ToSubClass, MappingStrings{""}: ToSubClass] string SerialNumber = NULL;
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{""}: ToSubClass] string Tag = NULL;
};

//**************************************************************************
//* Class: CIM_Chip
//* Derived from: CIM_PhysicalComponent
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B7A-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Chip : CIM_PhysicalComponent
{
	[read: ToSubClass] uint16 FormFactor;
};

//**************************************************************************
//* Class: CIM_PhysicalMemory
//* Derived from: CIM_Chip
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B7B-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalMemory : CIM_Chip
{
	[read: ToSubClass, Override("FormFactor"), MappingStrings{"MIF.DMTF|Memory Device|002.6"}: ToSubClass] uint16 FormFactor = NULL;
	[MappingStrings{"MIF.DMTF|Memory Device|002.9"}: ToSubClass, read: ToSubClass] uint16 MemoryType;
	[Units("Bits"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.7"}: ToSubClass, read: ToSubClass] uint16 TotalWidth;
	[Units("Bits"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.8"}: ToSubClass, read: ToSubClass] uint16 DataWidth;
	[Units("NanoSeconds"): ToSubClass, read: ToSubClass] uint32 Speed;
	[Units("Bytes"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.5"}: ToSubClass, read: ToSubClass] uint64 Capacity;
	[MaxLen(64): ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.4"}: ToSubClass, read: ToSubClass] string BankLabel;
	[MappingStrings{"MIF.DMTF|Memory Device Mapped Addresses|001.6"}: ToSubClass, read: ToSubClass] uint32 PositionInRow;
	[MappingStrings{"MIF.DMTF|Memory Device Mapped Addresses|001.7"}: ToSubClass, read: ToSubClass] uint32 InterleavePosition;
};

//**************************************************************************
//* Class: Win32_PhysicalMemory
//* Derived from: CIM_PhysicalMemory
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B93-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_PhysicalMemory : CIM_PhysicalMemory
{
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Tag = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 17|Device Locator"}: ToSubClass] string DeviceLocator;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 17|Type Detail"}: ToSubClass] uint16 TypeDetail;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 20|Interleaved Data Depth"}: ToSubClass] uint16 InterleaveDataDepth;
};

//**************************************************************************
//* Class: CIM_PhysicalLink
//* Derived from: CIM_PhysicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B82-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalLink : CIM_PhysicalElement
{
	[Units("Feet"): ToSubClass, read: ToSubClass] real64 MaxLength;
	[Units("Feet"): ToSubClass, read: ToSubClass] real64 Length;
	[read: ToSubClass] boolean Wired;
	[read: ToSubClass] uint16 MediaType;
};

//**************************************************************************
//* Class: CIM_PhysicalConnector
//* Derived from: CIM_PhysicalElement
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B84-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalConnector : CIM_PhysicalElement
{
	[read: ToSubClass] string ConnectorPinout;
	[read: ToSubClass] uint16 ConnectorType[];
};

//**************************************************************************
//* Class: CIM_Slot
//* Derived from: CIM_PhysicalConnector
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B86-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Slot : CIM_PhysicalConnector
{
	[read: ToSubClass, Override("ConnectorType"), MappingStrings{"MIF.DMTF|System Slot|004.2"}: ToSubClass] uint16 ConnectorType[] = NULL;
	[read: ToSubClass] boolean SupportsHotPlug;
	[Units("Inches"): ToSubClass, read: ToSubClass] real32 HeightAllowed;
	[Units("Inches"): ToSubClass, read: ToSubClass] real32 LengthAllowed;
	[Units("Bits"): ToSubClass, MappingStrings{"MIF.DMTF|System Slot|004.3"}: ToSubClass, read: ToSubClass] uint16 MaxDataWidth;
	[MappingStrings{"MIF.DMTF|System Slot|004.9"}: ToSubClass, read: ToSubClass] uint16 VccMixedVoltageSupport[];
	[MappingStrings{"MIF.DMTF|System Slot|004.10"}: ToSubClass, read: ToSubClass] uint16 VppMixedVoltageSupport[];
	[Units("MilliWatts"): ToSubClass, MappingStrings{"MIF.DMTF|System Slot|004.11"}: ToSubClass, read: ToSubClass] uint32 ThermalRating;
	[ModelCorrespondence{"CIM_Slot.PurposeDescription"}: ToSubClass, read: ToSubClass] boolean SpecialPurpose;
	[ModelCorrespondence{"CIM_Slot.SpecialPurpose"}: ToSubClass, read: ToSubClass] string PurposeDescription;
	[read: ToSubClass] uint16 Number;
};

//**************************************************************************
//* Class: Win32_SystemSlot
//* Derived from: CIM_Slot
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B91-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_SystemSlot : CIM_Slot
{
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Tag = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 9|Slot Type"}: ToSubClass, Override("ConnectorType"): ToSubClass] uint16 ConnectorType[] = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 9|Slot Designation"}: ToSubClass] string SlotDesignation;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 9|Current Usage"}: ToSubClass] uint16 CurrentUsage;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 9|Slot Characteristics 2"}: ToSubClass] boolean PMESignal;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 9|Slot Characteristics 1"}: ToSubClass] boolean Shared;
};

//**************************************************************************
//* Class: Win32_PortConnector
//* Derived from: CIM_PhysicalConnector
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B92-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_PortConnector : CIM_PhysicalConnector
{
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Tag = NULL;
	[read: ToSubClass, Override("ConnectorType"): ToSubClass, MappingStrings{"SMBIOS|Type 8|Internal/External Connector Type"}: ToSubClass] uint16 ConnectorType[] = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 8|Internal Reference Designator"}: ToSubClass] string InternalReferenceDesignator;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 8|External Reference Designator"}: ToSubClass] string ExternalReferenceDesignator;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 8|Port Type"}: ToSubClass] uint16 PortType;
};

//**************************************************************************
//* Class: CIM_PhysicalPackage
//* Derived from: CIM_PhysicalElement
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B6E-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalPackage : CIM_PhysicalElement
{
	[read: ToSubClass] boolean Removable;
	[read: ToSubClass] boolean Replaceable;
	[read: ToSubClass] boolean HotSwappable;
	[Units("Inches"): ToSubClass, read: ToSubClass] real32 Height;
	[Units("Inches"): ToSubClass, read: ToSubClass] real32 Depth;
	[Units("Inches"): ToSubClass, read: ToSubClass] real32 Width;
	[Units("Pounds"): ToSubClass, read: ToSubClass] real32 Weight;
	 uint32 IsCompatible([IN] CIM_PhysicalElement ref ElementToCheck);
};

//**************************************************************************
//* Class: CIM_Card
//* Derived from: CIM_PhysicalPackage
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B76-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Card : CIM_PhysicalPackage
{
	[read: ToSubClass] boolean HostingBoard;
	[read: ToSubClass] string SlotLayout;
	[read: ToSubClass] boolean RequiresDaughterBoard;
	[ModelCorrespondence{"CIM_Card.RequirementsDescription"}: ToSubClass, read: ToSubClass] boolean SpecialRequirements;
	[ModelCorrespondence{"CIM_Card.SpecialRequirements"}: ToSubClass, read: ToSubClass] string RequirementsDescription;
};

//**************************************************************************
//* Class: Win32_BaseBoard
//* Derived from: CIM_Card
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B95-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_BaseBoard : CIM_Card
{
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Tag = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 2|Product"}: ToSubClass] string Product;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 12|Configuration Options Strings"}: ToSubClass] string ConfigOptions[];
};

//**************************************************************************
//* Class: Win32_PhysicalMemoryArray
//* Derived from: CIM_PhysicalPackage
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B99-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_PhysicalMemoryArray : CIM_PhysicalPackage
{
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Tag = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 16|Location"}: ToSubClass] uint16 Location;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 16|Use"}: ToSubClass] uint16 Use;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 16|Memory Error Correction"}: ToSubClass] uint16 MemoryErrorCorrection;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"SMBIOS|Type 16|Maximum Capacity"}: ToSubClass] uint32 MaxCapacity;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 16|Number of Memory Devices"}: ToSubClass] uint16 MemoryDevices;
};

//**************************************************************************
//* Class: CIM_PhysicalFrame
//* Derived from: CIM_PhysicalPackage
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B70-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalFrame : CIM_PhysicalPackage
{
	[read: ToSubClass] string CableManagementStrategy;
	[ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_PhysicalFrame.ServiceDescriptions"}: ToSubClass, read: ToSubClass] uint16 ServicePhilosophy[];
	[ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_PhysicalFrame.ServicePhilosophy"}: ToSubClass, read: ToSubClass] string ServiceDescriptions[];
	[read: ToSubClass] boolean LockPresent;
	[read: ToSubClass] boolean AudibleAlarm;
	[read: ToSubClass] boolean VisibleAlarm;
	[ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|Physical Container Global Table|002.12"}: ToSubClass, ModelCorrespondence{"CIM_PhysicalFrame.BreachDescription"}: ToSubClass, read: ToSubClass] uint16 SecurityBreach;
	[ModelCorrespondence{"CIM_PhysicalFrame.SecurityBreach"}: ToSubClass, read: ToSubClass] string BreachDescription;
};

//**************************************************************************
//* Class: CIM_Rack
//* Derived from: CIM_PhysicalFrame
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B71-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Rack : CIM_PhysicalFrame
{
	[Units("Us"): ToSubClass, read: ToSubClass, Override("Height")] real32 Height = NULL;
	[ModelCorrespondence{"CIM_Rack.CountryDesignation"}: ToSubClass, read: ToSubClass] uint16 TypeOfRack;
	[ModelCorrespondence{"CIM_Rack.TypeOfRack"}: ToSubClass, read: ToSubClass] string CountryDesignation;
};

//**************************************************************************
//* Class: CIM_Chassis
//* Derived from: CIM_PhysicalFrame
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B72-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Chassis : CIM_PhysicalFrame
{
	[read: ToSubClass] uint16 NumberOfPowerCords;
	[Units("Amps at 120 Volts"): ToSubClass, read: ToSubClass] sint16 CurrentRequiredOrProduced;
	[Units("BTU per Hour"): ToSubClass, read: ToSubClass] uint16 HeatGeneration;
	[ArrayType("Indexed"): ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"}: ToSubClass, MappingStrings{"MIF.DMTF|Physical Container Global Table|002.1"}: ToSubClass, ModelCorrespondence{"CIM_Chassis.TypeDescriptions"}: ToSubClass, read: ToSubClass] uint16 ChassisTypes[];
	[ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_Chassis.ChassisTypes"}: ToSubClass, read: ToSubClass] string TypeDescriptions[];
};

//**************************************************************************
//* Class: Win32_SystemEnclosure
//* Derived from: CIM_Chassis
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B94-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_SystemEnclosure : CIM_Chassis
{
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Tag"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Tag = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 3|Asset Tag"}: ToSubClass] string SMBIOSAssetTag;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"SMBIOS|Type 3|Security Status"}: ToSubClass] uint16 SecurityStatus;
};

//**************************************************************************
//* Class: CIM_LogicalElement
//* Derived from: CIM_ManagedSystemElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C518-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_LogicalElement : CIM_ManagedSystemElement
{
};

//**************************************************************************
//* Class: Win32_PageFileUsage
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Privileges{"SeCreatePagefileNamePrivilege"}: ToSubClass, Locale(1033): ToInstance, UUID("{9B3AC16A-EEE5-11d2-B13B-00105A1F77A1}"): ToInstance]
class Win32_PageFileUsage : CIM_LogicalElement
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, units("Megabytes"): ToSubClass, MappingStrings{"Win32API|MEMORYSTATUS|dwTotalPageFile"}: ToSubClass] uint32 AllocatedBaseSize;
	[read: ToSubClass, units("Megabytes"): ToSubClass, MappingStrings{"Win32API|MEMORYSTATUS"}: ToSubClass] uint32 CurrentUsage;
	[read: ToSubClass, units("Megabytes"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 PeakUsage;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|TempPageFile"}: ToSubClass] boolean TempPageFile;
};

//**************************************************************************
//* Class: Win32_Registry
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C4D7-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Registry : CIM_LogicalElement
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, Units("Megabytes"): ToSubClass, MappingStrings{"Win32API|NTDLL.DLL|NtQuerySystemInformation|SystemRegistryQuotaInformation"}: ToSubClass] uint32 CurrentSize;
	[read: ToSubClass, write: ToSubClass, Units("Megabytes"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control|RegistrySizeLimit"}: ToSubClass] uint32 ProposedSize;
	[read: ToSubClass, Units("Megabytes"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control|RegistrySizeLimit"}: ToSubClass] uint32 MaximumSize;
};

//**************************************************************************
//* Class: CIM_SoftwareFeature
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Locale(1033): ToInstance, UUID("{E527D7F2-E3D4-11d2-8601-0000F8102E5F}"): ToInstance, abstract]
class CIM_SoftwareFeature : CIM_LogicalElement
{
	[read: ToSubClass, key, override("Name"), Maxlen(256): ToSubClass] string Name = NULL;
	[Propagated("CIM_Product.IdentifyingNumber"): ToSubClass, key, Maxlen(64): ToSubClass, read: ToSubClass, MappingStrings{"DMTF|ComponentID|001.4"}: ToSubClass] string IdentifyingNumber;
	[Propagated("CIM_Product.Name"): ToSubClass, key, Maxlen(256): ToSubClass, read: ToSubClass, MappingStrings{"DMTF|ComponentID|001.2"}: ToSubClass] string ProductName;
	[Propagated("CIM_Product.Vendor"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass, Maxlen(256): ToSubClass, MappingStrings{"DMTF|ComponentID|001.1"}: ToSubClass] string Vendor;
	[Propagated("CIM_Product.Version"): ToSubClass, key, Maxlen(64): ToSubClass, MappingStrings{"DMTF|ComponentID|001.3"}: ToSubClass, read: ToSubClass] string Version;
};

//**************************************************************************
//* Class: CIM_BIOSFeature
//* Derived from: CIM_SoftwareFeature
//**************************************************************************
[Locale(1033): ToInstance, UUID("{7D33100E-E3D3-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_BIOSFeature : CIM_SoftwareFeature
{
	[ArrayType("Indexed"): ToSubClass, MappingStrings{"MIF.DMTF|BIOS Characteristic|003.4"}: ToSubClass, ModelCorrespondence{"CIM_BIOSFeature.Characteristics"}: ToSubClass, read: ToSubClass] STRING CharacteristicDescriptions[];
	[ArrayType("Indexed"): ToSubClass, MappingStrings{"MIF.DMTF|BIOS Characteristic|003.3"}: ToSubClass, ModelCorrespondence{"CIM_BIOSFeature.CharacteristicDescriptions"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "910", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "160"}: ToSubClass, read: ToSubClass] UINT16 Characteristics[];
};

//**************************************************************************
//* Class: CIM_VideoBIOSFeature
//* Derived from: CIM_SoftwareFeature
//**************************************************************************
[Locale(1033): ToInstance, UUID("{BAE20634-E3D4-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_VideoBIOSFeature : CIM_SoftwareFeature
{
	[ArrayType("Indexed"): ToSubClass, MappingStrings{"MIF.DMTF|Video BIOS Characteristic|001.4"}: ToSubClass, ModelCorrespondence{"CIM_VideoBIOSFeature.Characteristics"}: ToSubClass, read: ToSubClass] STRING CharacteristicDescriptions[];
	[ArrayType("Indexed"): ToSubClass, MappingStrings{"MIF.DMTF|Video BIOS Characteristic|001.3"}: ToSubClass, ModelCorrespondence{"CIM_VideoBIOSFeature.CharacteristicDescriptions"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9"}: ToSubClass, read: ToSubClass] UINT16 Characteristics[];
};

//**************************************************************************
//* Class: Win32_SoftwareFeature
//* Derived from: CIM_SoftwareFeature
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A7A5AEBA-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareFeature : CIM_SoftwareFeature
{
	[read: ToSubClass] uint16 Attributes;
	[read: ToSubClass, ValueMap{"-6", "-2", "-1", "1", "2", "3", "4"}: ToSubClass] sint16 InstallState;
	[read: ToSubClass] uint16 Accesses;
	[read: ToSubClass] datetime LastUse;
	[Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Reinstall([in, Valuemap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}: ToSubClass] uint16 ReinstallMode = 1);
	[Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Configure([in, Valuemap{"1", "2", "3", "4", "5"}: ToSubClass] uint16 InstallState = 1);
};

//**************************************************************************
//* Class: CIM_Process
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C566-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Process : CIM_LogicalElement
{
	[Propagated("CIM_OperatingSystem.CSCreationClassName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string CSCreationClassName;
	[Propagated("CIM_OperatingSystem.CSName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string CSName;
	[CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string CreationClassName;
	[Fixed: ToSubClass, read: ToSubClass] datetime CreationDate;
	[key, read: ToSubClass, MaxLen(256): ToSubClass] string Handle;
	[Units("Milliseconds"): ToSubClass, read: ToSubClass] uint64 KernelModeTime;
	[Propagated("CIM_OperatingSystem.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string OSCreationClassName;
	[Propagated("CIM_OperatingSystem.Name"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string OSName;
	[read: ToSubClass] uint32 Priority;
	[read: ToSubClass] uint16 ExecutionState;
	[read: ToSubClass] datetime TerminationDate;
	[Units("Milliseconds"): ToSubClass, read: ToSubClass] uint64 UserModeTime;
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint64 WorkingSetSize;
};

//**************************************************************************
//* Class: Win32_Process
//* Derived from: CIM_Process
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsCreate, CreateBy("Create"), SupportsDelete, DeleteBy("DeleteInstance"), Locale(1033): ToInstance, UUID("{8502C4DC-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Process : CIM_Process
{
	[Units("100ns"): ToSubClass, Override("KernelModeTime")] uint64 KernelModeTime = NULL;
	[read: ToSubClass, Override("Priority"): ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|BasePriority"}: ToSubClass] uint32 Priority = NULL;
	[Units("100ns"): ToSubClass, Override("UserModeTime")] uint64 UserModeTime = NULL;
	[read: ToSubClass, Privileges{"SeDebugPrivilege"}: ToSubClass, MappingStrings{"Win32API|Tool Help Structures|MODULEENTRY32|szExePath"}: ToSubClass] string ExecutablePath;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, Privileges{"SeDebugPrivilege"}: ToSubClass, MappingStrings{"Win32|WINNT.H|QUOTA_LIMITS|MaximumWorkingSetSize"}: ToSubClass] uint32 MaximumWorkingSetSize;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, Privileges{"SeDebugPrivilege"}: ToSubClass, MappingStrings{"Win32|WINNT.H|QUOTA_LIMITS|MinimumWorkingSetSize"}: ToSubClass] uint32 MinimumWorkingSetSize;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PageFaultCount"}: ToSubClass] uint32 PageFaults;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PagefileUsage"}: ToSubClass] uint32 PageFileUsage;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PeakPagefileUsage"}: ToSubClass] uint32 PeakPageFileUsage;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PeakWorkingSetSize"}: ToSubClass] uint32 PeakWorkingSetSize;
	[read: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|PROCESS_INFORMATION|dwProcessId "}: ToSubClass] uint32 ProcessId;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaNonPagedPoolUsage"}: ToSubClass] uint32 QuotaNonPagedPoolUsage;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaPagedPoolUsage"}: ToSubClass] uint32 QuotaPagedPoolUsage;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaPeakNonPagedPoolUsage"}: ToSubClass] uint32 QuotaPeakNonPagedPoolUsage;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaPeakPagedPoolUsage"}: ToSubClass] uint32 QuotaPeakPagedPoolUsage;
	[read: ToSubClass, MappingStrings{"Win32API|Process and Thread Functions|GetProcessVersion"}: ToSubClass] string WindowsVersion;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|NumberOfThreads"}: ToSubClass] uint32 ThreadCount;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|HandleCount"}: ToSubClass] uint32 HandleCount;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|InheritedFromUniqueProcessId"}: ToSubClass] uint32 ParentProcessId;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|SessionId"}: ToSubClass] uint32 SessionId;
	[read: ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PrivatePageCount"}: ToSubClass] uint64 PrivatePageCount;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PeakVirtualSize"}: ToSubClass] uint64 PeakVirtualSize;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|VirtualSize"}: ToSubClass] uint64 VirtualSize;
	[read: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|ReadOperationCount"}: ToSubClass] uint64 ReadOperationCount;
	[read: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|WriteOperationCount"}: ToSubClass] uint64 WriteOperationCount;
	[read: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|OtherOperationCount"}: ToSubClass] uint64 OtherOperationCount;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|ReadTransferCount"}: ToSubClass] uint64 ReadTransferCount;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|WriteTransferCount"}: ToSubClass] uint64 WriteTransferCount;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|OtherTransferCount"}: ToSubClass] uint64 OtherTransferCount;
	[read: ToSubClass] string CommandLine;
	[Constructor, Static, Implemented, Privileges{"SeAssignPrimaryTokenPrivilege", "SeIncreaseQuotaPrivilege"}: ToSubClass, ValueMap{"0", "2", "3", "8", "9", "21", ".."}: ToSubClass, MappingStrings{"Win32API|Process and Thread Functions|CreateProcess"}: ToSubClass] uint32 Create([In, MappingStrings{"Win32API|Process and Thread Functions|lpCommandLine "}: ToSubClass] string CommandLine, [In, MappingStrings{"Win32API|Process and Thread Functions|CreateProcess|lpCurrentDirectory "}: ToSubClass] string CurrentDirectory, [In, MappingStrings{"WMI|Win32_ProcessStartup"}: ToSubClass] Win32_ProcessStartup ProcessStartupInformation, [Out, MappingStrings{"Win32API|Process and Thread Functions|CreateProcess|lpProcessInformation|dwProcessId"}: ToSubClass] uint32 ProcessId);
	[Destructor, Implemented, ValueMap{"0", "2", "3", "8", "9", "21", ".."}: ToSubClass, MappingStrings{"Win32API|Process and Thread Functions|TerminateProcess"}: ToSubClass] uint32 Terminate([In, MappingStrings{"Win32API|Process and Thread Functions|TerminateProcess|uExitCode "}: ToSubClass] uint32 Reason);
	[Implemented, ValueMap{"0", "2", "3", "8", "9", "21", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 GetOwner([Out, MappingStrings{"WMI"}: ToSubClass] string User, [Out, MappingStrings{"WMI"}: ToSubClass] string Domain);
	[Implemented, ValueMap{"0", "2", "3", "8", "9", "21", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 GetOwnerSid([Out, MappingStrings{"WMI"}: ToSubClass] string Sid);
	[Implemented, ValueMap{"0", "2", "3", "8", "9", "21", ".."}: ToSubClass, MappingStrings{"Win32API|Process and Thread Functions|SetPriorityClass"}: ToSubClass] uint32 SetPriority([in, MappingStrings{"Win32API|Process and Thread Functions|SetPriorityClass|dwPriorityClass"}: ToSubClass, ValueMap{"0x00000040", "0x00004000", "0x00000020", "0x00008000", "0x00000080", "0x00000100"}: ToSubClass] sint32 Priority);
	[ValueMap{"0", "2", "3", "8", "9", "21", ".."}: ToSubClass, Implemented] uint32 AttachDebugger();
};

//**************************************************************************
//* Class: CIM_RedundancyGroup
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{4C3A040A-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_RedundancyGroup : CIM_LogicalElement
{
	[read: ToSubClass, key, MaxLen(256): ToSubClass] STRING CreationClassName;
	[read: ToSubClass] UINT16 RedundancyStatus;
};

//**************************************************************************
//* Class: CIM_SpareGroup
//* Derived from: CIM_RedundancyGroup
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{64B86CA6-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_SpareGroup : CIM_RedundancyGroup
{
};

//**************************************************************************
//* Class: CIM_ExtraCapacityGroup
//* Derived from: CIM_RedundancyGroup
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{570ED2E8-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ExtraCapacityGroup : CIM_RedundancyGroup
{
	[read: ToSubClass] UINT32 MinNumberNeeded;
};

//**************************************************************************
//* Class: CIM_StorageRedundancyGroup
//* Derived from: CIM_RedundancyGroup
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{6D477DBC-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_StorageRedundancyGroup : CIM_RedundancyGroup
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Redundancy Group|001.2"}: ToSubClass] UINT16 TypeOfAlgorithm;
};

//**************************************************************************
//* Class: Win32_QuickFixEngineering
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0827250D-BA3E-11d2-B361-00105A1F77A1}"): ToInstance]
class Win32_QuickFixEngineering : CIM_LogicalElement
{
	[read: ToSubClass, key, MaxLen(260): ToSubClass, MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"}: ToSubClass] string HotFixID;
	[read: ToSubClass, key, MaxLen(260): ToSubClass, MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"}: ToSubClass] string ServicePackInEffect;
	[read: ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass, Propagated("CIM_ComputerSystem.Name"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string CSName;
	[read: ToSubClass, MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"}: ToSubClass] string FixComments;
	[read: ToSubClass, MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"}: ToSubClass] string InstalledBy;
	[read: ToSubClass, MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"}: ToSubClass] string InstalledOn;
};

//**************************************************************************
//* Class: CIM_SystemResource
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C519-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_SystemResource : CIM_LogicalElement
{
};

//**************************************************************************
//* Class: CIM_MemoryMappedIO
//* Derived from: CIM_SystemResource
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C51B-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_MemoryMappedIO : CIM_SystemResource
{
	[read: ToSubClass, Propagated("CIM_ComputerSystem.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass] string CSCreationClassName;
	[read: ToSubClass, Propagated("CIM_ComputerSystem.Name"): ToSubClass, MaxLen(256): ToSubClass, CIM_Key: ToSubClass] string CSName;
	[read: ToSubClass, MaxLen(256): ToSubClass, CIM_Key: ToSubClass] string CreationClassName;
	[read: ToSubClass, CIM_Key: ToSubClass, MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.1"}: ToSubClass] uint64 StartingAddress;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.2"}: ToSubClass] uint64 EndingAddress;
};

//**************************************************************************
//* Class: Win32_SystemMemoryResource
//* Derived from: CIM_MemoryMappedIO
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C4CE-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemMemoryResource : CIM_MemoryMappedIO
{
};

//**************************************************************************
//* Class: Win32_PortResource
//* Derived from: Win32_SystemMemoryResource
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D0-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_PortResource : Win32_SystemMemoryResource
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.1"}: ToSubClass, Override("StartingAddress"), key] uint64 StartingAddress = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Configuration Manager Structures|IO_INFO"}: ToSubClass] boolean Alias;
};

//**************************************************************************
//* Class: Win32_DeviceMemoryAddress
//* Derived from: Win32_SystemMemoryResource
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4CF-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DeviceMemoryAddress : Win32_SystemMemoryResource
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.1"}: ToSubClass, Override("StartingAddress"), key] uint64 StartingAddress = NULL;
	[read: ToSubClass, ValueMap{"ReadWrite", "ReadOnly", "WriteOnly", "Prefetchable"}: ToSubClass, MappingStrings{"Win32API|SystemStructures|CM_PARTIAL_RESOURCE_DESCRIPTOR|Flags"}: ToSubClass] string MemoryType;
};

//**************************************************************************
//* Class: CIM_DMA
//* Derived from: CIM_SystemResource
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C523-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_DMA : CIM_SystemResource
{
	[read: ToSubClass, Propagated("CIM_ComputerSystem.CreationClassName"): ToSubClass, MaxLen(256): ToSubClass, CIM_Key: ToSubClass] string CSCreationClassName;
	[read: ToSubClass, Propagated("CIM_ComputerSystem.Name"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass] string CSName;
	[read: ToSubClass, MaxLen(256): ToSubClass, CIM_Key: ToSubClass] string CreationClassName;
	[read: ToSubClass, key, MappingStrings{"MIF.DMTF|DMA|001.1"}: ToSubClass] uint32 DMAChannel;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|DMA|001.2"}: ToSubClass] uint16 Availability;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|DMA|001.3"}: ToSubClass] boolean BurstMode;
	[read: ToSubClass, Units("Bits"): ToSubClass, MappingStrings{"MIF.DMTF|System Resource DMA Info|001.2"}: ToSubClass, ValueMap{"0", "8", "16", "32", "64", "128"}: ToSubClass] uint16 TransferWidths[];
	[read: ToSubClass, Units("Bits"): ToSubClass, ValueMap{"0", "8", "16", "32", "64"}: ToSubClass, MappingStrings{"MIF.DMTF|System Resource DMA Info|001.3"}: ToSubClass] uint16 AddressSize;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"MIF.DMTF|System Resource DMA Info|001.4"}: ToSubClass] uint32 MaxTransferSize;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass, MappingStrings{"MIF.DMTF|System Resource DMA Info|001.7"}: ToSubClass] uint16 ByteMode;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass, MappingStrings{"MIF.DMTF|System Resource DMA Info|001.8"}: ToSubClass] uint16 WordMode;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass, MappingStrings{"MIF.DMTF|System Resource DMA Info|001.9"}: ToSubClass] uint16 ChannelTiming;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|System Resource DMA Info|001.10"}: ToSubClass] uint16 TypeCTiming;
};

//**************************************************************************
//* Class: Win32_DMAChannel
//* Derived from: CIM_DMA
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D1-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DMAChannel : CIM_DMA
{
	[read: ToSubClass, MappingStrings{"Win32API|System Structures|CM_PARTIAL_RESOURCE_DESCRIPTOR|Dma|Port"}: ToSubClass] uint32 Port;
};

//**************************************************************************
//* Class: CIM_IRQ
//* Derived from: CIM_SystemResource
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C51A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_IRQ : CIM_SystemResource
{
	[read: ToSubClass, Propagated("CIM_ComputerSystem.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass] string CSCreationClassName;
	[read: ToSubClass, Propagated("CIM_ComputerSystem.Name"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass] string CSName;
	[read: ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass] string CreationClassName;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|IRQ|001.1"}: ToSubClass, key] uint32 IRQNumber;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|IRQ|001.2"}: ToSubClass] uint16 Availability;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass, MappingStrings{"MIF.DMTF|IRQ|001.3", "MIF.DMTF|System Resource IRQ Info|001.2"}: ToSubClass] uint16 TriggerType;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass, MappingStrings{"MIF.DMTF|System Resource IRQ Info|001.3"}: ToSubClass] uint16 TriggerLevel;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|IRQ|001.4"}: ToSubClass] boolean Shareable;
};

//**************************************************************************
//* Class: Win32_IRQResource
//* Derived from: CIM_IRQ
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D3-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_IRQResource : CIM_IRQ
{
	[read: ToSubClass, MappingStrings{"Win32API|System Structures|CM_PARTIAL_RESOURCE_DESCRIPTOR|Interrupt|Level"}: ToSubClass] uint32 Vector;
	[read: ToSubClass, MappingStrings{"Win32API|System Structures|RESOURCE_DESCRIPTOR|InterfaceType"}: ToSubClass] boolean Hardware;
};

//**************************************************************************
//* Class: Win32_Environment
//* Derived from: CIM_SystemResource
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D2-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance"), SupportsUpdate]
class Win32_Environment : CIM_SystemResource
{
	[read: ToSubClass, write: ToSubClass, Override("Name"): ToSubClass, key, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"}: ToSubClass] boolean SystemVariable;
	[read: ToSubClass, key, MaxLen(260): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"}: ToSubClass] string UserName;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"}: ToSubClass] string VariableValue;
};

//**************************************************************************
//* Class: Win32_NetworkClient
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D5-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NetworkClient : CIM_LogicalElement
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\NetworkProvider|Name"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\NetworkProvider|Mfg"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_SoftwareElement
//* Derived from: CIM_LogicalElement
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{8502C561-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_SoftwareElement : CIM_LogicalElement
{
	[read: ToSubClass, key, maxlen(256): ToSubClass, override("Name")] string Name = NULL;
	[read: ToSubClass, key, Maxlen(64): ToSubClass, Mappingstrings{"MIF.DMTF|ComponentID|001.3"}: ToSubClass] string Version;
	[read: ToSubClass, key] uint16 SoftwareElementState;
	[read: ToSubClass, key, maxlen(256): ToSubClass] string SoftwareElementID;
	[read: ToSubClass, key, Mappingstrings{"MIF.DMTF|Software Component Information|002.5"}: ToSubClass, ModelCorrespondence("CIM_OperatingSystem.OSType"): ToSubClass] uint16 TargetOperatingSystem;
	[read: ToSubClass, Maxlen(64): ToSubClass, ModelCorrespondence("CIM_OperatingSystem.OtherTypeDescription"): ToSubClass] string OtherTargetOS;
	[read: ToSubClass, Maxlen(256): ToSubClass, Mappingstrings{"MIF.DMTF|ComponentID|001.1"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, Maxlen(64): ToSubClass, Mappingstrings{"MIF.DMTF|Software Component Information|002.4"}: ToSubClass] string BuildNumber;
	[read: ToSubClass, Maxlen(64): ToSubClass, Mappingstrings{"MIF.DMTF|ComponentID|001.4"}: ToSubClass] string SerialNumber;
	[read: ToSubClass, Maxlen(64): ToSubClass] string CodeSet;
	[read: ToSubClass, Maxlen(64): ToSubClass, Mappingstrings{"MIF.DMTF|Software Component Information|002.7"}: ToSubClass] string IdentificationCode;
	[read: ToSubClass, Maxlen(32): ToSubClass, Mappingstrings{"MIF.DMTF|Software Component Information|002.6"}: ToSubClass] string LanguageEdition;
};

//**************************************************************************
//* Class: CIM_BIOSElement
//* Derived from: CIM_SoftwareElement
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{8502C562-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_BIOSElement : CIM_SoftwareElement
{
	[read: ToSubClass, Mappingstrings{"MIF.DMTF|System BIOS|001.3"}: ToSubClass, Override("Version")] string Version = NULL;
	[read: ToSubClass, Mappingstrings{"MIF.DMTF|System BIOS|001.2"}: ToSubClass, Override("Manufacturer")] string Manufacturer = NULL;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|System BIOS|001.9"}: ToSubClass] boolean PrimaryBIOS;
};

//**************************************************************************
//* Class: Win32_BIOS
//* Derived from: CIM_BIOSElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E1-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_BIOS : CIM_BIOSElement
{
	[read: ToSubClass, Mappingstrings{"Win32Registry|HARDWARE\\Description\\System|SystemBiosVersion"}: ToSubClass, Override("Version"): ToSubClass] string Version = NULL;
	[read: ToSubClass] datetime ReleaseDate;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 0|BIOS Characteristics"}: ToSubClass] uint16 BiosCharacteristics[];
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 13|Installable Languages"}: ToSubClass] uint16 InstallableLanguages;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 13|Language Strings"}: ToSubClass] string ListOfLanguages[];
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 13|Current Language"}: ToSubClass] string CurrentLanguage;
	[read: ToSubClass, MappingStrings{"SMBIOS|CSMBios|Init"}: ToSubClass] boolean SMBIOSPresent;
	[read: ToSubClass, MappingStrings{"SMBIOS|CSMBios|GetVersion"}: ToSubClass] uint16 SMBIOSMajorVersion;
	[read: ToSubClass, MappingStrings{"SMBIOS|CSMBios|GetVersion"}: ToSubClass] uint16 SMBIOSMinorVersion;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 0|BIOS Version"}: ToSubClass] string SMBIOSBIOSVersion;
	[read: ToSubClass] string BIOSVersion[];
};

//**************************************************************************
//* Class: Win32_SoftwareElement
//* Derived from: CIM_SoftwareElement
//**************************************************************************
[Locale(1033): ToInstance, UUID("{92ECDE80-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareElement : CIM_SoftwareElement
{
	[read: ToSubClass] uint16 Attributes;
	[read: ToSubClass] string Path;
	[read: ToSubClass, valuemap{"-7", "-6", "-4", "-1", "2", "3", "4"}: ToSubClass] sint16 InstallState;
};

//**************************************************************************
//* Class: Win32_DriverVXD
//* Derived from: CIM_SoftwareElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4C8-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DriverVXD : CIM_SoftwareElement
{
	[read: ToSubClass, Mappingstrings{"Win32DDK|Virtual Devices|Device Descriptor Block|DDB_Dev_Major_Version,DDB_Dev_Minor_Version"}: ToSubClass, Override("Version"): ToSubClass] string Version = NULL;
	[read: ToSubClass, MappingStrings{"Win32DDK|Virtual Devices|Device Control Procedure"}: ToSubClass] string Control;
	[read: ToSubClass, MappingStrings{"Win32DDK|Virtual Devices|Device Descriptor Block"}: ToSubClass] string DeviceDescriptorBlock;
	[read: ToSubClass, MappingStrings{"Win32DDK|Virtual Devices|Device Descriptor Block|PM_API"}: ToSubClass] string PM_API;
	[read: ToSubClass, MappingStrings{"Win32DDK|Virtual Devices|Device Descriptor Block|ServiceTableSize"}: ToSubClass] uint32 ServiceTableSize;
	[read: ToSubClass, MappingStrings{"Win32DDK|Virtual Devices|Device Descriptor Block|V86_API"}: ToSubClass] string V86_API;
};

//**************************************************************************
//* Class: CIM_VideoBIOSElement
//* Derived from: CIM_SoftwareElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{76148BF6-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_VideoBIOSElement : CIM_SoftwareElement
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Video BIOS|001.5"}: ToSubClass] BOOLEAN IsShadowed;
};

//**************************************************************************
//* Class: Win32_Session
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance]
class Win32_Session : CIM_LogicalElement
{
	DateTime StartTime;
};

//**************************************************************************
//* Class: Win32_LogonSession
//* Derived from: Win32_Session
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{9083C21E-7D58-4e0e-BC30-0BC8922AFB8B}"): ToInstance]
class Win32_LogonSession : Win32_Session
{
	[key] String LogonId;
	String AuthenticationPackage;
	[ValueMap{"2", "3", "4", "5", "7", "8", "9"}: ToSubClass] uint32 LogonType;
};

//**************************************************************************
//* Class: Win32_ServerConnection
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("SessionProvider"): ToInstance, Locale(1033): ToInstance]
class Win32_ServerConnection : CIM_LogicalElement
{
	uint32 ConnectionID;
	[key] string ComputerName;
	[key] string UserName;
	[key] string ShareName;
	uint32 NumberOfFiles;
	[Units("Seconds"): ToSubClass] uint32 ActiveTime;
	uint32 NumberOfUsers;
};

//**************************************************************************
//* Class: Win32_ServerSession
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("SessionProvider"): ToInstance, Locale(1033): ToInstance]
class Win32_ServerSession : CIM_LogicalElement
{
	[read: ToSubClass, key] String ComputerName;
	[key] String UserName;
	[Units("Seconds"): ToSubClass] uint32 ActiveTime;
	[read: ToSubClass, Units("Seconds"): ToSubClass] uint32 IdleTime;
	uint32 ResourcesOpened;
	[ValueMap{"0", "1", "2"}: ToSubClass] uint32 SessionType;
	String ClientType;
	String TransportName;
};

//**************************************************************************
//* Class: Win32_ComponentCategory
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED5A-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_ComponentCategory : CIM_LogicalElement
{
	[read: ToSubClass, Override("Name"): ToSubClass, MappingStrings{"Win32API|Component Categories|CATEGORYINFO|szDescription"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, key, MaxLen(16): ToSubClass, MappingStrings{"Win32API|Component Categories|CATEGORYINFO|catid"}: ToSubClass] string CategoryId;
};

//**************************************************************************
//* Class: CIM_JobDestination
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{673E0A2C-E3D0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_JobDestination : CIM_LogicalElement
{
	[read: ToSubClass, key, MaxLen(256): ToSubClass] STRING CreationClassName;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Propagated("CIM_System.CreationClassName"): ToSubClass] STRING SystemCreationClassName;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Propagated("CIM_System.Name"): ToSubClass] STRING SystemName;
};

//**************************************************************************
//* Class: Win32_NetworkProtocol
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D8-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NetworkProtocol : CIM_LogicalElement
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|lpProtocol"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP1_CONNECTIONLESS"}: ToSubClass] boolean ConnectionlessService;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_GUARANTEED_DELIVERY"}: ToSubClass] boolean GuaranteesDelivery;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_GUARANTEED_ORDER"}: ToSubClass] boolean GuaranteesSequencing;
	[read: ToSubClass, units("Characters"): ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|iMaxSockAddr"}: ToSubClass] uint32 MaximumAddressSize;
	[read: ToSubClass, units("Characters"): ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwMessageSize"}: ToSubClass] uint32 MaximumMessageSize;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_MESSAGE_ORIENTED"}: ToSubClass] boolean MessageOriented;
	[read: ToSubClass, units("Characters"): ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|iMinSockAddr "}: ToSubClass] uint32 MinimumAddressSize;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_PSEUDO_STREAM"}: ToSubClass] boolean PseudoStreamOriented;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_SUPPORTS_BROADCAST"}: ToSubClass] boolean SupportsBroadcasting;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_CONNECT_DATA"}: ToSubClass] boolean SupportsConnectData;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_DISCONNECT_DATA"}: ToSubClass] boolean SupportsDisconnectData;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_ENCRYPTS"}: ToSubClass] boolean SupportsEncryption;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_EXPEDITED_DATA"}: ToSubClass] boolean SupportsExpeditedData;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_FRAGMENTATION"}: ToSubClass] boolean SupportsFragmentation;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_GRACEFUL_CLOSE"}: ToSubClass] boolean SupportsGracefulClosing;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_BANDWIDTH_ALLOCATION"}: ToSubClass] boolean SupportsGuaranteedBandwidth;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_SUPPORTS_MULTICAST"}: ToSubClass] boolean SupportsMulticasting;
	[read: ToSubClass, MappingStrings{"Win32_API|Windows Sockets Structures|WSAPROTOCOL_INFO|dwServiceFlags1|XP1_QOS_SUPPORTED"}: ToSubClass] boolean SupportsQualityofService;
};

//**************************************************************************
//* Class: CIM_System
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C524-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_System : CIM_LogicalElement
{
	[read: ToSubClass, Override("Name"), key] string Name = NULL;
	[CIM_Key: ToSubClass, read: ToSubClass] string CreationClassName;
	[read: ToSubClass] string NameFormat;
	[read: ToSubClass] string PrimaryOwnerContact;
	[MaxLen(64): ToSubClass, read: ToSubClass] string PrimaryOwnerName;
	[read: ToSubClass, write: ToSubClass] string Roles[];
};

//**************************************************************************
//* Class: Win32_NTDomain
//* Derived from: CIM_System
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance, UUID("78F4FA18-EE46-4D4C-AB9B-8CC0D42B7038"): ToInstance]
class Win32_NTDomain : CIM_System
{
	[read: ToSubClass] string DomainControllerName;
	[read: ToSubClass] string DomainControllerAddress;
	[read: ToSubClass, ValueMap{"1", "2"}: ToSubClass] sint32 DomainControllerAddressType;
	[read: ToSubClass] string DomainGuid;
	[read: ToSubClass] string DomainName;
	[read: ToSubClass] string DnsForestName;
	[read: ToSubClass] boolean DSPrimaryDomainControllerFlag;
	[read: ToSubClass] boolean DSWritableFlag;
	[read: ToSubClass] boolean DSGlobalCatalogFlag;
	[read: ToSubClass] boolean DSDirectoryServiceFlag;
	[read: ToSubClass] boolean DSKerberosDistributionCenterFlag;
	[read: ToSubClass] boolean DSTimeServiceFlag;
	[read: ToSubClass] boolean DSDnsControllerFlag;
	[read: ToSubClass] boolean DSDnsDomainFlag;
	[read: ToSubClass] boolean DSDnsForestFlag;
	[read: ToSubClass] string DcSiteName;
	[read: ToSubClass] string ClientSiteName;
};

//**************************************************************************
//* Class: CIM_ApplicationSystem
//* Derived from: CIM_System
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{120BB700-DB2B-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_ApplicationSystem : CIM_System
{
};

//**************************************************************************
//* Class: CIM_ComputerSystem
//* Derived from: CIM_System
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C525-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_ComputerSystem : CIM_System
{
	[read: ToSubClass, Override("NameFormat"), ValueMap{"IP", "Dial", "HID", "NWA", "HWA", "X25", "ISDN", "IPX", "DCC", "ICD", "E.164", "SNA", "OID/OSI", "Other"}: ToSubClass] string NameFormat = NULL;
};

//**************************************************************************
//* Class: CIM_UnitaryComputerSystem
//* Derived from: CIM_ComputerSystem
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C526-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_UnitaryComputerSystem : CIM_ComputerSystem
{
	[read: ToSubClass] string InitialLoadInfo[];
	[read: ToSubClass] string LastLoadInfo;
	[read: ToSubClass] boolean PowerManagementSupported;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|System Power Controls|001.2"}: ToSubClass] uint16 PowerManagementCapabilities[];
	[read: ToSubClass] uint16 PowerState;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|System Hardware Security|001.4"}: ToSubClass] uint16 ResetCapability;
	 uint32 SetPowerState([IN, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"}: ToSubClass] uint16 PowerState, [IN] datetime Time);
};

//**************************************************************************
//* Class: Win32_ComputerSystem
//* Derived from: CIM_UnitaryComputerSystem
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C4B0-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_ComputerSystem : CIM_UnitaryComputerSystem
{
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CrashControl|AutoReboot"}: ToSubClass] boolean AutomaticResetBootOption;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean AutomaticResetCapability;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean BootROMSupported;
	[read: ToSubClass, MappingStrings{"Win32API|GetSystemMetrics|SM_CLEANBOOT"}: ToSubClass] string BootupState;
	[read: ToSubClass, write: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|Bias"}: ToSubClass] sint16 CurrentTimeZone;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|WKSTA_INFO_100|wki100_langroup"}: ToSubClass] string Domain;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean InfraredSupported;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 1|System Information|Manufacturer"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 1|System Information|Product Name"}: ToSubClass] string Model;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SERVER_INFO_101|sv101_type|SV_TYPE_SERVER"}: ToSubClass] boolean NetworkServerModeEnabled;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint8 OEMLogoBitmap[];
	[read: ToSubClass, MappingStrings{"Win32API|GetPrivateProfileString|Support Information"}: ToSubClass] string SupportContactDescription[];
	[read: ToSubClass, write: ToSubClass, units("Seconds"): ToSubClass, Privileges{"SeSystemEnvironmentNamePrivilege"}: ToSubClass, MappingStrings{"Win32API|GetPrivateProfileInt|Boot Loader|timeout"}: ToSubClass] uint16 SystemStartupDelay;
	[read: ToSubClass, write: ToSubClass, Privileges{"SeSystemEnvironmentNamePrivilege"}: ToSubClass, MappingStrings{"Win32API|GetPrivateProfileSection|Operating Systems"}: ToSubClass] string SystemStartupOptions[];
	[read: ToSubClass, write: ToSubClass, Privileges{"SeSystemEnvironmentNamePrivilege"}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint8 SystemStartupSetting;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Structures|SYSTEM_INFO|wProcessorArchitecture"}: ToSubClass, ValueMap{"X86-based PC", "MIPS-based PC", "Alpha-based PC", "Power PC", "SH-x PC", "StrongARM PC", "64-bit Intel PC", "64-bit Alpha PC", "Unknown", "X86-Nec98 PC"}: ToSubClass] string SystemType;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Functions|GetUserName"}: ToSubClass] string UserName;
	[read: ToSubClass, MappingStrings{"Win32API|Directory Service (Ds) Structures| DSROLE_PRIMARY_DOMAIN_INFO_BASIC|DSROLE_MACHINE_ROLE| MachineRole"}: ToSubClass] uint16 DomainRole;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 1|System Information|Wake-up Type"}: ToSubClass] uint16 WakeUpType;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 11|OEM Strings"}: ToSubClass] string OEMStringArray[];
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 23|Capabilites|Boot Option on Limit"}: ToSubClass] uint16 BootOptionOnLimit;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 23|Capabilities|Boot Option"}: ToSubClass] uint16 BootOptionOnWatchDog;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 23|System Reset|Reset Count"}: ToSubClass] sint16 ResetCount;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 23|System Reset| Reset Limit"}: ToSubClass] sint16 ResetLimit;
	[read: ToSubClass, Units("Milliseconds"): ToSubClass, MappingStrings{"SMBIOS|Type 23|Timeout"}: ToSubClass] sint64 PauseAfterReset;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|PowerOnPasswordStatus"}: ToSubClass] uint16 PowerOnPasswordStatus;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|KeyboardPasswordStatus"}: ToSubClass] uint16 KeyboardPasswordStatus;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|AdminPasswordStatus"}: ToSubClass] uint16 AdminPasswordStatus;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|FrontPanelResetStatus"}: ToSubClass] uint16 FrontPanelResetStatus;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 3|Bootup State"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass] uint16 ChassisBootupState;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 3|System Enclosure or Chassis|Power Supply State"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass] uint16 PowerSupplyState;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 3|System Enclosure or Chassis|Thermal State"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass] uint16 ThermalState;
	[read: ToSubClass, MappingStrings{"Win32API|Time Functions|GetTimeZoneInformation"}: ToSubClass] boolean DaylightInEffect;
	[write: ToSubClass] boolean EnableDaylightSavingsTime;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Structures|SYSTEM_INFO|dwNumberOfProcessors"}: ToSubClass] uint32 NumberOfProcessors;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUS|dwTotalPhys"}: ToSubClass] uint64 TotalPhysicalMemory;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] boolean PartOfDomain;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] string Workgroup;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 NumberOfLogicalProcessors;
	[Implemented, ValueMap{"0", ".."}: ToSubClass] uint32 Rename([In] string Name, [In] string Password, [In] string UserName);
	[Implemented, ValueMap{"0", ".."}: ToSubClass] uint32 JoinDomainOrWorkgroup([In] string Name, [In] string Password, [In] string UserName, [In] string AccountOU, [In, BitMap{"0", "1", "2", "4", "5", "6", "7", "8", "18"}: ToSubClass] uint32 FJoinOptions = 0);
	[Implemented, ValueMap{"0", ".."}: ToSubClass] uint32 UnjoinDomainOrWorkgroup([In] string Password, [In] string UserName, [In, BitMap{"2"}: ToSubClass] uint32 FUnjoinOptions = 0);
};

//**************************************************************************
//* Class: CIM_ServiceAccessPoint
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Locale(1033): ToInstance, UUID("{F126ACC2-E3D4-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_ServiceAccessPoint : CIM_LogicalElement
{
	[read: ToSubClass, Override("Name"), key, MaxLen(256): ToSubClass] string Name = NULL;
	[CIM_Key: ToSubClass, MaxLen(256): ToSubClass, read: ToSubClass] string CreationClassName;
	[Propagated("CIM_System.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass, read: ToSubClass] string SystemCreationClassName;
	[Propagated("CIM_System.Name"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass, read: ToSubClass] string SystemName;
	[read: ToSubClass, Schema("Win32"): ToInstance ToSubClass] uint32 Type;
};

//**************************************************************************
//* Class: CIM_BootSAP
//* Derived from: CIM_ServiceAccessPoint
//**************************************************************************
[Locale(1033): ToInstance, UUID("{F6FEF20A-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_BootSAP : CIM_ServiceAccessPoint
{
};

//**************************************************************************
//* Class: Win32_CommandLineAccess
//* Derived from: CIM_ServiceAccessPoint
//**************************************************************************
[Locale(1033): ToInstance, UUID("{656E1F1E-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_CommandLineAccess : CIM_ServiceAccessPoint
{
	[read: ToSubClass] string CommandLine;
};

//**************************************************************************
//* Class: CIM_ClusteringSAP
//* Derived from: CIM_ServiceAccessPoint
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{2bb2b772-ffed-4aa6-b1b3-3d0cb74fc613}"): ToInstance]
class CIM_ClusteringSAP : CIM_ServiceAccessPoint
{
};

//**************************************************************************
//* Class: Win32_TCPIPPrinterPort
//* Derived from: CIM_ServiceAccessPoint
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{553644e9-f998-48c3-b037-26e5909f4333}"): ToInstance, SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance"), SupportsUpdate]
class Win32_TCPIPPrinterPort : CIM_ServiceAccessPoint
{
	[read: ToSubClass, MappingStrings{""}: ToSubClass] uint32 Protocol;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string HostAddress;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string SNMPCommunity;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] boolean ByteCount;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string Queue;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] uint32 PortNumber;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] boolean SNMPEnabled;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] uint32 SNMPDevIndex;
};

//**************************************************************************
//* Class: Win32_IP4PersistedRouteTable
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("RouteProvider"): ToInstance, Locale(1033): ToInstance, UUID("{2CAF4666-AC9B-45AB-00A6-AF8C537794C2}"): ToInstance, SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance")]
class Win32_IP4PersistedRouteTable : CIM_LogicalElement
{
	[read: ToSubClass, write: ToSubClass, key] string Destination;
	[read: ToSubClass, write: ToSubClass, key] string Mask;
	[read: ToSubClass, write: ToSubClass, key] string NextHop;
	[read: ToSubClass, write: ToSubClass, key] sint32 Metric1;
};

//**************************************************************************
//* Class: Win32_LoadOrderGroup
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D4-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LoadOrderGroup : CIM_LogicalElement
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\GroupOrderList"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\GroupOrderList"}: ToSubClass] uint32 GroupOrder;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\GroupOrderList"}: ToSubClass] boolean DriverEnabled;
};

//**************************************************************************
//* Class: CIM_Service
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C527-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Service : CIM_LogicalElement
{
	[read: ToSubClass, Override("Name"), key] string Name = NULL;
	[CIM_Key: ToSubClass, read: ToSubClass] string CreationClassName;
	[ValueMap{"Automatic", "Manual"}: ToSubClass, read: ToSubClass] string StartMode;
	[read: ToSubClass] boolean Started;
	[Propagated("CIM_System.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string SystemCreationClassName;
	[Propagated("CIM_System.Name"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string SystemName;
	 uint32 StartService();
	 uint32 StopService();
};

//**************************************************************************
//* Class: Win32_PnPSignedDriver
//* Derived from: CIM_Service
//**************************************************************************
[provider("WhqlProvider"): ToInstance ToSubClass, dynamic: ToInstance ToSubClass, Description("The Win32_PnPSignedDriver class provides digital signature information about drivers "): ToSubClass]
class Win32_PnPSignedDriver : CIM_Service
{
	[read: ToInstance ToSubClass, Decription("The Description property is the Description of the driver e.g. Volume Manager "): ToSubClass] String Description = NULL;
	[read: ToInstance ToSubClass, Decription("The DeviceID property is the DeviceID of the device e.g. ROOT\\FTDISK\\0000 "): ToSubClass] String DeviceID;
	[read: ToInstance ToSubClass, Decription("The ClassGUID  property is the ClassGUID of the device e.g. {71A27CDD-812A-11D0-BEC7-08002BE2092F}"): ToSubClass] String ClassGuid;
	[Decription("The IsSigned property is the signature status of driver that is it represents whether the driver is signed or not")] Boolean IsSigned;
	[read: ToInstance ToSubClass, Decription("The Signer property is the signer of driver if it is signed e.g. ntbuild "): ToSubClass] String Signer;
	[read: ToInstance ToSubClass, Decription("The InfName property is the name of the Inf file which installed this device e.g. machine.inf "): ToSubClass] String InfName;
	[read: ToInstance ToSubClass, Decription("The DriverVersion property is the version of the driver e.g. 5.1.2427.1 "): ToSubClass] String DriverVersion;
	[read: ToInstance ToSubClass, Decription("The DriverDate property is the Date of the driver e.g 1-25-2001 "): ToSubClass] datetime DriverDate;
	[read: ToInstance ToSubClass, Decription("The ProviderName property is the Provider of the driver e.g. Microsoft "): ToSubClass] String DriverProviderName;
	[read: ToInstance ToSubClass, Decription("The HardwareID property is the HardwareID of the driver e.g. ROOT\\FTDISK "): ToSubClass] String HardWareID;
	[read: ToInstance ToSubClass, Decription("The DeviceName property is the name of the device"): ToSubClass] String DeviceName;
	[read: ToInstance ToSubClass, Decription("The DeviceClass property is DeviceClass of the driver e.g. SYSTEM "): ToSubClass] String DeviceClass;
	[read: ToInstance ToSubClass, Decription("The CompatID property is the CompatID for the driver e.g. DETECTEDInternal\\ftdisk "): ToSubClass] String CompatID;
	[read: ToInstance ToSubClass, Decription("The Location property is the Location of the driver "): ToSubClass] String Location;
	[read: ToInstance ToSubClass, Decription("The PDO property represents Physical Device Object e.g \\Device\\00000002 PDOs represent individual devices on a bus to a bus driverA bus driver creates a PDO for each device that it enumerates on its bus.The PDO represents the device to the bus driver. Other drivers for a device attach device objects on top of the PDO--the PDO is always at the bottom of the device stack"): ToSubClass] String PDO;
	[read: ToInstance ToSubClass, Decription("The Manufacturer property is the Manufacturer of the driver e.g. Microsoft"): ToSubClass] String Manufacturer;
	[read: ToInstance ToSubClass, Decription("The FriendlyName property is the array of FriendlyName/Caption of the driver e.g. Communications Port (COM2)"): ToSubClass] String FriendlyName;
	[read: ToInstance ToSubClass, Decription("The DevLoader property is the Device Loader for the device"): ToSubClass] String DevLoader;
	[read: ToInstance ToSubClass, Decription("The DriverName of the driver "): ToSubClass] String DriverName;
};

//**************************************************************************
//* Class: Win32_BaseService
//* Derived from: CIM_Service
//**************************************************************************
[SupportsCreate, CreateBy("Create"), SupportsDelete, DeleteBy("DeleteInstance"), Abstract, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4C4-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_BaseService : CIM_Service
{
	[ValueMap{"Boot", "System", "Auto", "Manual", "Disabled"}: ToSubClass, read: ToSubClass, Override("StartMode"): ToSubClass] string StartMode = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwControlsAccepted|SERVICE_ACCEPT_PAUSE_CONTINUE"}: ToSubClass] boolean AcceptPause;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwControlsAccepted|SERVICE_ACCEPT_STOP"}: ToSubClass] boolean AcceptStop;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType|SERVICE_INTERACTIVE_PROCESS"}: ToSubClass] boolean DesktopInteract;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDisplayName"}: ToSubClass] string DisplayName;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwErrorControl"}: ToSubClass, ValueMap{"Ignore", "Normal", "Severe", "Critical", "Unknown"}: ToSubClass] string ErrorControl;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpBinaryPathName"}: ToSubClass] string PathName;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType"}: ToSubClass, ValueMap{"Kernel Driver", "File System Driver", "Adapter", "Recognizer Driver", "Own Process", "Share Process", "Interactive Process"}: ToSubClass] string ServiceType;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpServiceStartName"}: ToSubClass] string StartName;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwCurrentState "}: ToSubClass, ValueMap{"Stopped", "Start Pending", "Stop Pending", "Running", "Continue Pending", "Pause Pending", "Paused", "Unknown"}: ToSubClass] string State;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwTagId"}: ToSubClass] uint32 TagId;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwWin32ExitCode"}: ToSubClass] uint32 ExitCode;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwServiceSpecificExitCode"}: ToSubClass] uint32 ServiceSpecificExitCode;
	[Override("StartService"): ToSubClass, Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|StartService"}: ToSubClass] uint32 StartService();
	[Override("StopService"): ToSubClass, Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_STOP"}: ToSubClass] uint32 StopService();
	[Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_PAUSE"}: ToSubClass] uint32 PauseService();
	[Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_CONTINUE"}: ToSubClass] uint32 ResumeService();
	[Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_INTERROGATE"}: ToSubClass] uint32 InterrogateService();
	[Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|CreateService|dwDesiredAccess|SERVICE_USER_DEFINED_CONTROL"}: ToSubClass] uint32 UserControlService([In, MappingStrings{"Win32API|Service Functions|ControlService|dwControl"}: ToSubClass] uint8 ControlCode);
	[Constructor, Implemented, Static, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|CreateService"}: ToSubClass] uint32 Create([In, MappingStrings{"Win32API|Service Functions|CreateServicelpServiceName"}: ToSubClass] string Name, [In, MappingStrings{"Win32API|Service Functions|CreateServicelpDisplayName"}: ToSubClass] string DisplayName, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpBinaryPathName "}: ToSubClass] string PathName, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType"}: ToSubClass, BitMap{"0", "1", "2", "3", "4", "5", "8"}: ToSubClass] uint8 ServiceType, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwErrorControl"}: ToSubClass] uint8 ErrorControl, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwStartType"}: ToSubClass, ValueMap{"Boot", "System", "Automatic", "Manual", "Disabled"}: ToSubClass] string StartMode, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType|SERVICE_INTERACTIVE_PROCESS"}: ToSubClass] boolean DesktopInteract, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpServiceStartName"}: ToSubClass] string StartName, [In, MappingStrings{"Win32API|Service Functions|CreateService|lpPassword"}: ToSubClass] string StartPassword, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpLoadOrderGroup"}: ToSubClass] string LoadOrderGroup, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"}: ToSubClass] string LoadOrderGroupDependencies[], [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"}: ToSubClass] string ServiceDependencies[]);
	[Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|ChangeServiceConfig"}: ToSubClass] uint32 Change([In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDisplayName"}: ToSubClass] string DisplayName, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpBinaryPathName"}: ToSubClass] string PathName, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType"}: ToSubClass, BitMap{"0", "1", "2", "3", "4", "5", "8"}: ToSubClass] uint8 ServiceType, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwErrorControl"}: ToSubClass] uint8 ErrorControl, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwStartType"}: ToSubClass, ValueMap{"Boot", "System", "Automatic", "Manual", "Disabled"}: ToSubClass] string StartMode, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType|SERVICE_INTERACTIVE_PROCESS"}: ToSubClass] boolean DesktopInteract, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpServiceStartName"}: ToSubClass] string StartName, [In, MappingStrings{"Win32API|Service Functions|CreateService|lpPassword"}: ToSubClass] string StartPassword, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpLoadOrderGroup"}: ToSubClass] string LoadOrderGroup, [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"}: ToSubClass] string LoadOrderGroupDependencies[], [In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"}: ToSubClass] string ServiceDependencies[]);
	[Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Service Functions|ChangeServiceConfig|dwStartType"}: ToSubClass] uint32 ChangeStartMode([In, MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwStartType"}: ToSubClass, ValueMap{"Boot", "System", "Automatic", "Manual", "Disabled"}: ToSubClass] string StartMode = "Automatic");
	[Destructor, Implemented, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."}: ToSubClass, MappingStrings{"Win32API|Service Functions|ChangeServiceConfig|DeleteService"}: ToSubClass] uint32 Delete();
};

//**************************************************************************
//* Class: Win32_SystemDriver
//* Derived from: Win32_BaseService
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C4C5-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemDriver : Win32_BaseService
{
};

//**************************************************************************
//* Class: Win32_Service
//* Derived from: Win32_BaseService
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C4D9-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Service : Win32_BaseService
{
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwCheckPoint"}: ToSubClass] uint32 CheckPoint;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwWaitHint"}: ToSubClass] uint32 WaitHint;
	[read: ToSubClass, MappingStrings{"Win32API|Service Structures|SERVICE_STATUS_PROCESS|dwProcessId"}: ToSubClass] uint32 ProcessId;
};

//**************************************************************************
//* Class: Win32_TerminalService
//* Derived from: Win32_Service
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TERMINALSERVICE_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer")]
class Win32_TerminalService : Win32_Service
{
	[read] uint32 TotalSessions;
	[read] uint32 DisconnectedSessions;
	[read] uint32 EstimatedSessionCapacity;
	[read, ValueMap{"0", "1", "2", "3", "4", "5"}] string ResourceConstraint;
	[read] uint32 RawSessionCapacity;
};

//**************************************************************************
//* Class: CIM_ClusteringService
//* Derived from: CIM_Service
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{debac832-6b54-4add-8a62-8d3861b97b1d}"): ToInstance]
class CIM_ClusteringService : CIM_Service
{
	 uint32 AddNode([IN] CIM_ComputerSystem ref CS);
	 uint32 EvictNode([IN] CIM_ComputerSystem ref CS);
};

//**************************************************************************
//* Class: CIM_BootService
//* Derived from: CIM_Service
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{75BCF4FE-DB46-11D2-B4C8-80080C7B6371}"): ToInstance]
class CIM_BootService : CIM_Service
{
};

//**************************************************************************
//* Class: Win32_PrinterDriver
//* Derived from: CIM_Service
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("522E1798-D74F-4516-94F5-C121B0F4A8CB"): ToInstance, SupportsCreate, CreateBy("AddPrinterDriver"), SupportsDelete, DeleteBy("DeleteInstance")]
class Win32_PrinterDriver : CIM_Service
{
	[read: ToSubClass, Override("Name"), MappingStrings{""}: ToSubClass] string Name = NULL;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass, ValueMap{"0", "1", "2", "3"}: ToSubClass] uint16 Version;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] string SupportedPlatform;
	[read: ToSubClass, ModelCorrespondence{"CIM_DataFile.Path"}: ToSubClass, MappingStrings{""}: ToSubClass] string DriverPath;
	[read: ToSubClass, ModelCorrespondence{"CIM_DataFile.FileName"}: ToSubClass, MappingStrings{""}: ToSubClass] string DataFile;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string ConfigFile;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string HelpFile;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string DependentFiles[];
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string MonitorName;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] string DefaultDataType;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] string InfName;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] string FilePath;
	[read: ToSubClass] string OEMUrl;
	[Static, Implemented, Constructor, ValueMap{"0", "5", "1797", ".."}: ToSubClass] uint32 AddPrinterDriver([In, MappingStrings{""}: ToSubClass] Win32_PrinterDriver DriverInfo);
};

//**************************************************************************
//* Class: Win32_ApplicationService
//* Derived from: CIM_Service
//**************************************************************************
[Locale(1033): ToInstance, UUID("{CC78410E-E3D1-11d2-8601-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ApplicationService : CIM_Service
{
};

//**************************************************************************
//* Class: Win32_Share
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4D6-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, SupportsCreate, CreateBy("Create"), SupportsDelete, DeleteBy("DeleteInstance")]
class Win32_Share : CIM_LogicalElement
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_netname"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"}: ToSubClass] boolean AllowMaximum;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"}: ToSubClass] uint32 MaximumAllowed;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_path"}: ToSubClass] string Path;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_type"}: ToSubClass, ValueMap{"0", "1", "2", "3", "2147483648", "2147483649", "2147483650", "2147483651"}: ToSubClass] uint32 Type;
	[read: ToSubClass, DEPRECATED: ToSubClass] uint32 AccessMask;
	[Constructor, Static, Implemented, ValueMap{"0", "2", "8", "9", "10", "21", "22", "23", "24", "25", ".."}: ToSubClass, MappingStrings{"Win32API|Network Management Functions|NetShareAdd"}: ToSubClass] uint32 Create([In, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_path"}: ToSubClass] string Path, [In, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_netname"}: ToSubClass] string Name, [In, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_type"}: ToSubClass, ValueMap{"0", "1", "2", "3", "2147483648", "2147483649", "2147483650", "2147483651"}: ToSubClass] uint32 Type, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"}: ToSubClass] uint32 MaximumAllowed, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_remark"}: ToSubClass] string Description, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_passwd"}: ToSubClass] string Password, [In, Optional: ToSubClass, MappingStrings{"WMI|Win32_SecurityDescriptor"}: ToSubClass] Win32_SecurityDescriptor Access);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "21", "22", "23", "24", "25", ".."}: ToSubClass, MappingStrings{"Win32API|Network Management Functions|NetShareSetInfo"}: ToSubClass] uint32 SetShareInfo([In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"}: ToSubClass] uint32 MaximumAllowed, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_remark"}: ToSubClass] string Description, [In, Optional: ToSubClass, MappingStrings{"WMI|Win32_SecurityDescriptor"}: ToSubClass] Win32_SecurityDescriptor Access);
	[Implemented, MappingStrings{"Win32API|Access Control Functions|GetEffectiveRightsFromAcl"}: ToSubClass, BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "16", "17", "18", "19", "20"}: ToSubClass] uint32 GetAccessMask();
	[Destructor, Implemented, ValueMap{"0", "2", "8", "9", "10", "21", "22", "23", "24", "25", ".."}: ToSubClass, MappingStrings{"Win32API|Network Management Functions|NetShareDel"}: ToSubClass] uint32 Delete();
};

//**************************************************************************
//* Class: Win32_COMApplication
//* Derived from: CIM_LogicalElement
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{0F73ED4F-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_COMApplication : CIM_LogicalElement
{
};

//**************************************************************************
//* Class: Win32_DCOMApplication
//* Derived from: Win32_COMApplication
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED52-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_DCOMApplication : Win32_COMApplication
{
	[read: ToSubClass, key, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[Default]"}: ToSubClass] string AppID;
};

//**************************************************************************
//* Class: Win32_COMClass
//* Derived from: CIM_LogicalElement
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{0F73ED50-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_COMClass : CIM_LogicalElement
{
};

//**************************************************************************
//* Class: Win32_ClassicCOMClass
//* Derived from: Win32_COMClass
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED53-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_ClassicCOMClass : Win32_COMClass
{
	[read: ToSubClass, Fixed: ToSubClass, Override("Name"): ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[Default]"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, key, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[Default]"}: ToSubClass] string ComponentId;
};

//**************************************************************************
//* Class: CIM_OperatingSystem
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C565-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_OperatingSystem : CIM_LogicalElement
{
	[read: ToSubClass, Override("Name"), key] string Name = NULL;
	[Propagated("CIM_ComputerSystem.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string CSCreationClassName;
	[Propagated("CIM_ComputerSystem.Name"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string CSName;
	[CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass] string CreationClassName;
	[read: ToSubClass] boolean Distributed;
	[Units("KiloBytes"): ToSubClass, read: ToSubClass] uint64 FreePhysicalMemory;
	[Units("KiloBytes"): ToSubClass, read: ToSubClass] uint64 FreeVirtualMemory;
	[read: ToSubClass, Units("KiloBytes"): ToSubClass] uint64 MaxProcessMemorySize;
	[read: ToSubClass, ModelCorrespondence{"CIM_OperatingSystem.OtherTypeDescription"}: ToSubClass] uint16 OSType;
	[read: ToSubClass, MaxLen(64): ToSubClass, ModelCorrespondence{"CIM_OperatingSystem.OSType"}: ToSubClass] string OtherTypeDescription;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Operating System|001.3"}: ToSubClass] string Version;
	[read: ToSubClass, MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemDate", "MIF.DMTF|General Information|001.6"}: ToSubClass] datetime LocalDateTime;
	[read: ToSubClass, write: ToSubClass, Units("Minutes"): ToSubClass] sint16 CurrentTimeZone;
	[read: ToSubClass, Units("KiloBytes"): ToSubClass, MappingStrings{"MIF.DMTF|System Memory Settings|001.3"}: ToSubClass] uint64 SizeStoredInPagingFiles;
	[read: ToSubClass, Units("KiloBytes"): ToSubClass, MappingStrings{"MIF.DMTF|System Memory Settings|001.4"}: ToSubClass] uint64 FreeSpaceInPagingFiles;
	[read: ToSubClass] datetime LastBootUpTime;
	[MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemMaxProcesses"}: ToSubClass, read: ToSubClass] uint32 MaxNumberOfProcesses;
	[read: ToSubClass] uint32 NumberOfLicensedUsers;
	[MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemProcesses"}: ToSubClass, read: ToSubClass] uint32 NumberOfProcesses;
	[MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemNumUsers"}: ToSubClass, read: ToSubClass] uint32 NumberOfUsers;
	[Units("KiloBytes"): ToSubClass, read: ToSubClass] uint64 TotalSwapSpaceSize;
	[Units("KiloBytes"): ToSubClass, read: ToSubClass] uint64 TotalVirtualMemorySize;
	[read: ToSubClass, Units("KiloBytes"): ToSubClass] uint64 TotalVisibleMemorySize;
	 uint32 Reboot();
	 uint32 Shutdown();
};

//**************************************************************************
//* Class: Win32_OperatingSystem
//* Derived from: CIM_OperatingSystem
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C4DE-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_OperatingSystem : CIM_OperatingSystem
{
	[read: ToSubClass, write: ToSubClass, Override("Description"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Description = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|dwMajorVersion, dwMinorVersion"}: ToSubClass, Override("Version"): ToSubClass] string Version = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|DRIVE_MAP_INFO|btInt13Unit"}: ToSubClass] string BootDevice;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|dwBuildNumber"}: ToSubClass] string BuildNumber;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows\\CurrentVersion|CurrentType"}: ToSubClass] string BuildType;
	[read: ToSubClass, MaxLen(6): ToSubClass, MappingStrings{"Win32API|National Language Support Functions|GetLocaleInfo|LOCALE_IDEFAULTANSICODEPAGE"}: ToSubClass] string CodeSet;
	[read: ToSubClass, MappingStrings{"Win32API|National Language Support Functions|GetLocaleInfo|LOCALE_ICOUNTRY"}: ToSubClass] string CountryCode;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|szCSDVersion"}: ToSubClass] string CSDVersion;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean DataExecutionPrevention_Available;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean DataExecutionPrevention_32BitApplications;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean DataExecutionPrevention_Drivers;
	[read: ToSubClass, ValueMap{"0", "1", "2", "3"}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint8 DataExecutionPrevention_SupportPolicy;
	[read: ToSubClass, MappingStrings{"Win32API|GetSystemMetrics|SM_DEBUG"}: ToSubClass] boolean Debug;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\PriorityControl|Win32PrioritySeparation"}: ToSubClass] uint8 ForegroundApplicationBoost;
	[read: ToSubClass, MappingStrings{"Win32API|National Language Support Functions|GetLocaleInfo|LOCALE_ILANGUAGE"}: ToSubClass] string Locale;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows\\CurrentVersion|RegisteredOrganization"}: ToSubClass] string Organization;
	[read: ToSubClass, MappingStrings{"Win32Registry|DEFAULT\\Control Panel\\International|Locale"}: ToSubClass] uint32 OSLanguage;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\ProductOptions|ProductSuite"}: ToSubClass] uint32 OSProductSuite;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|Plus! ProductId"}: ToSubClass] string PlusProductID;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|Plus! VersionNumber"}: ToSubClass] string PlusVersionNumber;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean Primary;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\PriorityControl|Win32PrioritySeparation"}: ToSubClass] uint8 QuantumLength;
	[read: ToSubClass, write: ToSubClass] uint8 QuantumType;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|RegisteredOwner"}: ToSubClass] string RegisteredUser;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|ProductId"}: ToSubClass] string SerialNumber;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|wServicePackMajor"}: ToSubClass] uint16 ServicePackMajorVersion;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|wServicePackMinor"}: ToSubClass] uint16 ServicePackMinorVersion;
	[read: ToSubClass, MappingStrings{"Win32API|Registry Functions|GetPrivateProfileString|Paths|TargetDevice"}: ToSubClass] string SystemDevice;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Functions|GetSystemDirectory"}: ToSubClass] string SystemDirectory;
	[read: ToSubClass] string SystemDrive;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Functions|GetWindowsDirectory"}: ToSubClass] string WindowsDirectory;
	[read: ToSubClass] uint32 EncryptionLevel;
	[read: ToSubClass, ValueMap{"0", "1"}: ToSubClass] uint32 LargeSystemCache;
	[read: ToSubClass, BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "30", "31"}: ToSubClass] uint32 SuiteMask;
	[read: ToSubClass, ValueMap{"1", "2", "3"}: ToSubClass] uint32 ProductType;
	[Implemented, Override("Reboot"): ToSubClass, Privileges{"SeShutdownPrivilege"}: ToSubClass, ValueMap{"0", ".."}: ToSubClass, MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx|EWX_REBOOT"}: ToSubClass] uint32 Reboot();
	[Implemented, Override("Shutdown"): ToSubClass, Privileges{"SeShutdownPrivilege"}: ToSubClass, ValueMap{"0", ".."}: ToSubClass, MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx|EWX_SHUTDOWN"}: ToSubClass] uint32 Shutdown();
	[Implemented, Privileges{"SeShutdownPrivilege"}: ToSubClass, ValueMap{"0", ".."}: ToSubClass, MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"}: ToSubClass] uint32 Win32Shutdown([in, MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"}: ToSubClass] sint32 Flags, [in, MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"}: ToSubClass] sint32 Reserved = 0);
	[Implemented, Privileges{"SeSystemTimePrivilege"}: ToSubClass, ValueMap{"0", ".."}: ToSubClass] uint32 SetDateTime([in] DateTime LocalDateTime);
};

//**************************************************************************
//* Class: CIM_FileSystem
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{4DA18760-E3D0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_FileSystem : CIM_LogicalElement
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Partition|002.4"}: ToSubClass, Units("Bytes"): ToSubClass] UINT64 AvailableSpace;
	[read: ToSubClass, Units("Bytes"): ToSubClass] UINT64 BlockSize;
	[read: ToSubClass] BOOLEAN CasePreserved;
	[read: ToSubClass] BOOLEAN CaseSensitive;
	[read: ToSubClass] UINT16 CodeSet[];
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Partition|002.7"}: ToSubClass] STRING CompressionMethod;
	[read: ToSubClass, key, MaxLen(256): ToSubClass] STRING CreationClassName;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Propagated("CIM_ComputerSystem.CreationClassName"): ToSubClass] STRING CSCreationClassName;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Propagated("CIM_ComputerSystem.Name"): ToSubClass] STRING CSName;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Partition|002.8"}: ToSubClass] STRING EncryptionMethod;
	[read: ToSubClass, Units("Bytes"): ToSubClass] UINT64 FileSystemSize;
	[read: ToSubClass] UINT32 MaxFileNameLength;
	[read: ToSubClass, MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrFSAccess"}: ToSubClass] BOOLEAN ReadOnly;
	[read: ToSubClass, MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrFSMountPoint"}: ToSubClass] STRING Root;
};

//**************************************************************************
//* Class: CIM_RemoteFileSystem
//* Derived from: CIM_FileSystem
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{75BCF4F9-DB46-11D2-B4C8-80080C7B6371}"): ToInstance]
class CIM_RemoteFileSystem : CIM_FileSystem
{
};

//**************************************************************************
//* Class: CIM_NFS
//* Derived from: CIM_RemoteFileSystem
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{75BCF4FB-DB46-11D2-B4C8-80080C7B6371}"): ToInstance]
class CIM_NFS : CIM_RemoteFileSystem
{
	[read: ToSubClass] BOOLEAN AttributeCaching;
	[read: ToSubClass, Units("Seconds"): ToSubClass] UINT16 AttributeCachingForDirectoriesMax;
	[read: ToSubClass, Units("Seconds"): ToSubClass] UINT16 AttributeCachingForDirectoriesMin;
	[read: ToSubClass, Units("Seconds"): ToSubClass] UINT16 AttributeCachingForRegularFilesMax;
	[read: ToSubClass, Units("Seconds"): ToSubClass] UINT16 AttributeCachingForRegularFilesMin;
	[read: ToSubClass] BOOLEAN ForegroundMount;
	[read: ToSubClass] BOOLEAN HardMount;
	[read: ToSubClass] BOOLEAN Interrupt;
	[read: ToSubClass] UINT16 MountFailureRetries;
	[read: ToSubClass, Units("Bytes"): ToSubClass] UINT64 ReadBufferSize;
	[read: ToSubClass] UINT16 RetransmissionAttempts;
	[read: ToSubClass, Units("Tenths of Seconds"): ToSubClass] UINT32 RetransmissionTimeout;
	[read: ToSubClass] UINT32 ServerCommunicationPort;
	[read: ToSubClass, Units("Bytes"): ToSubClass] UINT64 WriteBufferSize;
};

//**************************************************************************
//* Class: CIM_LocalFileSystem
//* Derived from: CIM_FileSystem
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{5B6C820A-E3D0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_LocalFileSystem : CIM_FileSystem
{
};

//**************************************************************************
//* Class: CIM_LogicalDevice
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C529-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_LogicalDevice : CIM_LogicalElement
{
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21"}: ToSubClass, MappingStrings{"MIF.DMTF|Operational State|003.5", "MIB.IETF|HOST-RESOURCES-MIB.hrDeviceStatus"}: ToSubClass] uint16 Availability;
	[CIM_Key: ToSubClass, read: ToSubClass] string CreationClassName;
	[read: ToSubClass, Schema("Win32"): ToInstance, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}: ToSubClass] uint32 ConfigManagerErrorCode;
	[read: ToSubClass, Schema("Win32"): ToInstance] boolean ConfigManagerUserConfig;
	[read: ToSubClass, CIM_Key: ToSubClass] string DeviceID;
	[read: ToSubClass] uint16 PowerManagementCapabilities[];
	[read: ToSubClass, Schema("Win32"): ToInstance] string PNPDeviceID;
	[read: ToSubClass] boolean PowerManagementSupported;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|Operational State|003.3"}: ToSubClass] uint16 StatusInfo;
	[Propagated("CIM_System.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string SystemCreationClassName;
	[Propagated("CIM_System.Name"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string SystemName;
	[read: ToSubClass] uint32 LastErrorCode;
	[read: ToSubClass] string ErrorDescription;
	[read: ToSubClass] boolean ErrorCleared;
	 uint32 SetPowerState([IN, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass] uint16 PowerState, [IN] datetime Time);
	 uint32 Reset();
};

//**************************************************************************
//* Class: CIM_CoolingDevice
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9565979A-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_CoolingDevice : CIM_LogicalDevice
{
	[read: ToSubClass] boolean ActiveCooling;
};

//**************************************************************************
//* Class: CIM_Refrigeration
//* Derived from: CIM_CoolingDevice
//**************************************************************************
[Locale(1033): ToInstance, UUID("{F3A5233A-E3D3-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_Refrigeration : CIM_CoolingDevice
{
};

//**************************************************************************
//* Class: Win32_Refrigeration
//* Derived from: CIM_Refrigeration
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{464FFAB6-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class Win32_Refrigeration : CIM_Refrigeration
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_Fan
//* Derived from: CIM_CoolingDevice
//**************************************************************************
[Locale(1033): ToInstance, UUID("{0A59C856-E3D4-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_Fan : CIM_CoolingDevice
{
	[read: ToSubClass] boolean VariableSpeed;
	[Units("Revolutions per Minute"): ToSubClass, read: ToSubClass] uint64 DesiredSpeed;
	 uint32 SetSpeed([IN] uint64 DesiredSpeed);
};

//**************************************************************************
//* Class: Win32_Fan
//* Derived from: CIM_Fan
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{464FFAB5-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class Win32_Fan : CIM_Fan
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_HeatPipe
//* Derived from: CIM_CoolingDevice
//**************************************************************************
[Locale(1033): ToInstance, UUID("{FE5D55E0-E3D3-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_HeatPipe : CIM_CoolingDevice
{
};

//**************************************************************************
//* Class: Win32_HeatPipe
//* Derived from: CIM_HeatPipe
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{464FFAB7-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class Win32_HeatPipe : CIM_HeatPipe
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_Scanner
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{07F12A62-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_Scanner : CIM_LogicalDevice
{
};

//**************************************************************************
//* Class: CIM_PotsModem
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C546-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_PotsModem : CIM_LogicalDevice
{
	[read: ToSubClass] uint16 AnswerMode;
	[read: ToSubClass] uint16 CompressionInfo;
	[read: ToSubClass] string CountriesSupported[];
	[read: ToSubClass] string CountrySelected;
	[read: ToSubClass] string CurrentPasswords[];
	[read: ToSubClass] uint16 DialType;
	[read: ToSubClass] uint16 ErrorControlInfo;
	[read: ToSubClass, Units("Seconds"): ToSubClass] uint32 InactivityTimeout;
	[Units("Bits per second"): ToSubClass, read: ToSubClass] uint32 MaxBaudRateToPhone;
	[Units("Bits per second"): ToSubClass, read: ToSubClass] uint32 MaxBaudRateToSerialPort;
	[read: ToSubClass] uint16 MaxNumberOfPasswords;
	[read: ToSubClass] uint16 ModulationScheme;
	[read: ToSubClass] uint8 RingsBeforeAnswer;
	[read: ToSubClass] uint16 SpeakerVolumeInfo;
	[read: ToSubClass] boolean SupportsCallback;
	[read: ToSubClass] boolean SupportsSynchronousConnect;
	[read: ToSubClass] datetime TimeOfLastReset;
};

//**************************************************************************
//* Class: Win32_POTSModem
//* Derived from: CIM_PotsModem
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4BE-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_POTSModem : CIM_PotsModem
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|AttachedTo"}: ToSubClass] string AttachedTo;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|BlindOff"}: ToSubClass] string BlindOff;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|BlindOn"}: ToSubClass] string BlindOn;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|CompatibilityFlags"}: ToSubClass] string CompatibilityFlags;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Compression_Off"}: ToSubClass] string CompressionOff;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Compression_On"}: ToSubClass] string CompressionOn;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ConfigDialog"}: ToSubClass] string ConfigurationDialog;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB"}: ToSubClass] uint8 DCB[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Default"}: ToSubClass] uint8 Default[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|DevLoader"}: ToSubClass] string DeviceLoader;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|DeviceType"}: ToSubClass, ValueMap{"Null Modem", "Internal Modem", "External Modem", "PCMCIA Modem", "Unknown"}: ToSubClass] string DeviceType;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|DriverDate"}: ToSubClass] datetime DriverDate;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ErrorControl_Forced"}: ToSubClass] string ErrorControlForced;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ErrorControl_Off"}: ToSubClass] string ErrorControlOff;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ErrorControl_On"}: ToSubClass] string ErrorControlOn;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|FlowControl_Hard"}: ToSubClass] string FlowControlHard;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|FlowControl_Soft"}: ToSubClass] string FlowControlSoft;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|FlowControl_Off"}: ToSubClass] string FlowControlOff;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|InactivityScale"}: ToSubClass] string InactivityScale;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Index"}: ToSubClass] uint32 Index;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Model"}: ToSubClass] string Model;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|InfPath"}: ToSubClass] string ModemInfPath;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|InfSection"}: ToSubClass] string ModemInfSection;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Modulation_Bell"}: ToSubClass] string ModulationBell;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Modulation_CCITT"}: ToSubClass] string ModulationCCITT;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|PortSubClass"}: ToSubClass, Value{"Parallel Port", "Serial Port", "Modem"}: ToSubClass, ValueMap{"00", "01", "02"}: ToSubClass] string PortSubClass;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Prefix"}: ToSubClass] string Prefix;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Properties"}: ToSubClass] uint8 Properties[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ProviderName"}: ToSubClass] string ProviderName;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Pulse"}: ToSubClass] string Pulse;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Reset"}: ToSubClass] string Reset;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ResponsesKeyName"}: ToSubClass] string ResponsesKeyName;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeDial"}: ToSubClass] string SpeakerModeDial;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeOff"}: ToSubClass] string SpeakerModeOff;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeOn"}: ToSubClass] string SpeakerModeOn;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeSetup"}: ToSubClass] string SpeakerModeSetup;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerVolume_High"}: ToSubClass] string SpeakerVolumeHigh;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerVolume_Low"}: ToSubClass] string SpeakerVolumeLow;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerVolume_Med"}: ToSubClass] string SpeakerVolumeMed;
	[read: ToSubClass, MappingStrings{"Win32_API|Line Device Structures|LINEDEVCAPS|dwStringFormat"}: ToSubClass] string StringFormat;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Terminator"}: ToSubClass] string Terminator;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Tone"}: ToSubClass] string Tone;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|VoiceSwitchFeature"}: ToSubClass] string VoiceSwitchFeature;
};

//**************************************************************************
//* Class: CIM_StorageExtent
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C538-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_StorageExtent : CIM_LogicalDevice
{
	[read: ToSubClass] uint16 Access;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrStorageAllocationUnits"}: ToSubClass] uint64 BlockSize;
	[read: ToSubClass] string ErrorMethodology;
	[MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrStorageSize"}: ToSubClass] uint64 NumberOfBlocks;
	[read: ToSubClass] string Purpose;
};

//**************************************************************************
//* Class: CIM_VolumeSet
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{35E25AA5-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_VolumeSet : CIM_StorageExtent
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Volume Set|001.5"}: ToSubClass] UINT64 PSExtentInterleaveDepth;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Volume Set|001.4"}: ToSubClass] UINT64 PSExtentStripeLength;
};

//**************************************************************************
//* Class: CIM_AggregatePExtent
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9565979F-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_AggregatePExtent : CIM_StorageExtent
{
	[MappingStrings{"MIF.DMTF|Aggregate Physical Extent|001.2"}: ToSubClass, read: ToSubClass, Override("NumberOfBlocks")] uint64 NumberOfBlocks = NULL;
};

//**************************************************************************
//* Class: CIM_PhysicalExtent
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9565979E-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_PhysicalExtent : CIM_StorageExtent
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Physical Extent|001.4"}: ToSubClass, Override("BlockSize")] uint64 BlockSize = NULL;
	[MappingStrings{"MIF.DMTF|Physical Extent|001.3"}: ToSubClass, read: ToSubClass, Override("NumberOfBlocks")] uint64 NumberOfBlocks = NULL;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"MIF.DMTF|Physical Extent|001.6"}: ToSubClass] uint64 UnitsBeforeCheckDataInterleave;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"MIF.DMTF|Physical Extent|001.7"}: ToSubClass] uint64 UnitsOfCheckData;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"MIF.DMTF|Physical Extent|001.8"}: ToSubClass] uint64 UnitsOfUserData;
};

//**************************************************************************
//* Class: CIM_Memory
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B64-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Memory : CIM_StorageExtent
{
	[read: ToSubClass, Override("ErrorMethodology"), MappingStrings{"MIF.DMTF|Physical Memory Array|001.7"}: ToSubClass] string ErrorMethodology = NULL;
	[Units("KiloBytes"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Array Mapped Addresses|001.3", "MIF.DMTF|Memory Device Mapped Addresses|001.4"}: ToSubClass, read: ToSubClass] uint64 StartingAddress;
	[Units("KiloBytes"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Array Mapped Addresses|001.4", "MIF.DMTF|Memory Device Mapped Addresses|001.5"}: ToSubClass, read: ToSubClass] uint64 EndingAddress;
	[ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"}: ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.12", "MIF.DMTF|Physical Memory Array|001.8"}: ToSubClass, ModelCorrespondence{"CIM_Memory.OtherErrorDescription"}: ToSubClass, read: ToSubClass] uint16 ErrorInfo;
	[ModelCorrespondence{"CIM_Memory.ErrorInfo"}: ToSubClass, read: ToSubClass] string OtherErrorDescription;
	[MappingStrings{"MIF.DMTF|Memory Device|002.12", "MIF.DMTF|Physical Memory Array|001.8"}: ToSubClass, read: ToSubClass] boolean CorrectableError;
	[read: ToSubClass] datetime ErrorTime;
	[ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.15", "MIF.DMTF|Physical Memory Array|001.10"}: ToSubClass, read: ToSubClass] uint16 ErrorAccess;
	[Units("Bits"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.16", "MIF.DMTF|Physical Memory Array|001.11"}: ToSubClass, read: ToSubClass] uint32 ErrorTransferSize;
	[ArrayType("Indexed"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.17", "MIF.DMTF|Physical Memory Array|001.12"}: ToSubClass, read: ToSubClass, MAX(64)] uint8 ErrorData[];
	[read: ToSubClass] uint16 ErrorDataOrder;
	[MappingStrings{"MIF.DMTF|Memory Device|002.19", "MIF.DMTF|Memory Device|002.20", "MIF.DMTF|Physical Memory Array|001.14"}: ToSubClass, read: ToSubClass] uint64 ErrorAddress;
	[read: ToSubClass] boolean SystemLevelAddress;
	[Units("Bytes"): ToSubClass, MappingStrings{"MIF.DMTF|Memory Device|002.21", "MIF.DMTF|Physical Memory Array|001.15"}: ToSubClass, read: ToSubClass] uint64 ErrorResolution;
	[MappingStrings{"MIF.DMTF|Memory Device|002.18", "MIF.DMTF|Physical Memory Array|001.13"}: ToSubClass, read: ToSubClass, MAX(64)] uint8 AdditionalErrorData[];
};

//**************************************************************************
//* Class: CIM_CacheMemory
//* Derived from: CIM_Memory
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B65-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_CacheMemory : CIM_Memory
{
	[ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.2"}: ToSubClass, read: ToSubClass] uint16 Level;
	[ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.5"}: ToSubClass, read: ToSubClass] uint16 WritePolicy;
	[ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.9"}: ToSubClass, read: ToSubClass] uint16 CacheType;
	[Units("Bytes"): ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.10"}: ToSubClass, read: ToSubClass] uint32 LineSize;
	[ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"}: ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.12"}: ToSubClass, read: ToSubClass] uint16 ReplacementPolicy;
	[ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.13"}: ToSubClass, read: ToSubClass] uint16 ReadPolicy;
	[Units("Seconds"): ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.14"}: ToSubClass, read: ToSubClass] uint32 FlushTimer;
	[ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"}: ToSubClass, MappingStrings{"MIF.DMTF|System Cache|003.15"}: ToSubClass, read: ToSubClass] uint16 Associativity;
};

//**************************************************************************
//* Class: Win32_CacheMemory
//* Derived from: CIM_CacheMemory
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B97-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_CacheMemory : CIM_CacheMemory
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 7|Location"}: ToSubClass] uint16 Location;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"SMBIOS|Type 7|Maximum Cache Size"}: ToSubClass] uint32 MaxCacheSize;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"SMBIOS|Type 7|Installed Size"}: ToSubClass] uint32 InstalledSize;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 7|Supported SRAM Type"}: ToSubClass] uint16 SupportedSRAM[];
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 7|Current SRAM Type"}: ToSubClass] uint16 CurrentSRAM[];
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 7|Error Correction Type"}: ToSubClass] uint16 ErrorCorrectType;
	[read: ToSubClass, Units("NanoSeconds"): ToSubClass, MappingStrings{"SMBIOS|Type 7|Cache Speed"}: ToSubClass] uint32 CacheSpeed;
};

//**************************************************************************
//* Class: CIM_NonVolatileStorage
//* Derived from: CIM_Memory
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{18074AFA-F0FE-11d2-8617-0000F8102E5F}"): ToInstance]
class CIM_NonVolatileStorage : CIM_Memory
{
	[read: ToSubClass] boolean IsWriteable;
};

//**************************************************************************
//* Class: CIM_VolatileStorage
//* Derived from: CIM_Memory
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{36851DFE-F0FE-11d2-8617-0000F8102E5F}"): ToInstance]
class CIM_VolatileStorage : CIM_Memory
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|System Resource Memory Info|001.5"}: ToSubClass] boolean Cacheable;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|System Resource Memory Info|001.6"}: ToSubClass] uint16 CacheType;
};

//**************************************************************************
//* Class: CIM_LogicalDisk
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C539-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_LogicalDisk : CIM_StorageExtent
{
	[read: ToSubClass, units("Bytes"): ToSubClass] uint64 FreeSpace;
	[read: ToSubClass, units("Bytes"): ToSubClass] uint64 Size;
};

//**************************************************************************
//* Class: Win32_MappedLogicalDisk
//* Derived from: CIM_LogicalDisk
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{BCF02FFE-5560-4de2-B419-272918693426}"): ToInstance]
class Win32_MappedLogicalDisk : CIM_LogicalDisk
{
	[read: ToSubClass, key, Override("DeviceId"), MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[key] string SessionID;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_VOL_IS_COMPRESSED"}: ToSubClass] boolean Compressed;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string FileSystem;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] uint32 MaximumComponentLength;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_FILE_COMPRESSION"}: ToSubClass] boolean SupportsFileBasedCompression;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string VolumeName;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string VolumeSerialNumber;
	[read: ToSubClass] boolean SupportsDiskQuotas;
	[read: ToSubClass, write: ToSubClass] boolean QuotasDisabled;
	[read: ToSubClass] boolean QuotasIncomplete;
	[read: ToSubClass] boolean QuotasRebuilding;
	[MappingStrings{"Win32API|Windows Networking Functions|WNetGetConnection"}: ToSubClass] string ProviderName;
};

//**************************************************************************
//* Class: Win32_LogicalDisk
//* Derived from: CIM_LogicalDisk
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C4B7-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalDisk : CIM_LogicalDisk
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_VOL_IS_COMPRESSED"}: ToSubClass] boolean Compressed;
	[read: ToSubClass, MappingStrings{"Win32API|FileFunctions|GetDriveType"}: ToSubClass] uint32 DriveType;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string FileSystem;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] uint32 MaximumComponentLength;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Functions|WNetGetConnection"}: ToSubClass] string ProviderName;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_FILE_COMPRESSION"}: ToSubClass] boolean SupportsFileBasedCompression;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string VolumeName;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string VolumeSerialNumber;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] uint32 MediaType;
	[read: ToSubClass] boolean SupportsDiskQuotas;
	[read: ToSubClass, write: ToSubClass] boolean QuotasDisabled;
	[read: ToSubClass] boolean QuotasIncomplete;
	[read: ToSubClass] boolean QuotasRebuilding;
	[read: ToSubClass, MappingStrings{"FSCTL_IS_VOLUME_DIRTY"}: ToSubClass] boolean VolumeDirty;
	[Implemented, MappingStrings{"Fmifs.dll | Method ChkDskExRoutine"}: ToSubClass] uint32 Chkdsk([in] boolean FixErrors = FALSE, [in] boolean VigorousIndexCheck = TRUE, [in] boolean SkipFolderCycle = TRUE, [in] boolean ForceDismount = FALSE, [in] boolean RecoverBadSectors = FALSE, [in] boolean OkToRunAtBootUp = FALSE);
	[Static, Implemented, MappingStrings{"Chkntfs.exe"}: ToSubClass] uint32 ScheduleAutoChk([in] string LogicalDisk[]);
	[Static, Implemented, MappingStrings{"Chkntfs.exe"}: ToSubClass] uint32 ExcludeFromAutochk([in] string LogicalDisk[]);
};

//**************************************************************************
//* Class: CIM_ProtectedSpaceExtent
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{35E25AA4-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ProtectedSpaceExtent : CIM_StorageExtent
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Protected Space Extent|001.6"}: ToSubClass, Units("Bytes"): ToSubClass] UINT64 UserDataStripeDepth;
};

//**************************************************************************
//* Class: Win32_SMBIOSMemory
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FECB095B-F0FA-11d2-8617-0000F8102E5F}"): ToInstance]
class Win32_SMBIOSMemory : CIM_StorageExtent
{
	[read: ToSubClass, Override("ErrorMethodology"): ToSubClass, MappingStrings{"SMBIOS|Type 16|Physical Memory Array|Memory Error Correction"}: ToSubClass, ValueMap{"Other", "Unknown", "None", "Parity", "Single-bit ECC", "Multi-bit ECC", "CRC"}: ToSubClass] string ErrorMethodology = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 19|Memory Device Mapped Addresses|Starting Address"}: ToSubClass] uint64 StartingAddress;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 19|Memory Device Mapped Addresses|Ending Address"}: ToSubClass] uint64 EndingAddress;
	[read: ToSubClass, ModelCorrespondence{"CIM_Memory.OtherErrorDescription"}: ToSubClass, MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Type"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"}: ToSubClass] uint16 ErrorInfo;
	[read: ToSubClass, ModelCorrespondence{"CIM_Memory.ErrorInfo"}: ToSubClass, MappingStrings{"SMBIOS"}: ToSubClass] string OtherErrorDescription;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Type"}: ToSubClass] boolean CorrectableError;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] datetime ErrorTime;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Operation"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass] uint16 ErrorAccess;
	[read: ToSubClass, Units("Bits"): ToSubClass, MappingStrings{"SMBIOS"}: ToSubClass] uint32 ErrorTransferSize;
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, MappingStrings{"SMBIOS"}: ToSubClass, MAX(64)] uint8 ErrorData[];
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint16 ErrorDataOrder;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Address"}: ToSubClass] uint64 ErrorAddress;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Address"}: ToSubClass] boolean SystemLevelAddress;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Resolution"}: ToSubClass] uint64 ErrorResolution;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Vendor Syndrome"}: ToSubClass, MAX(64)] uint8 AdditionalErrorData[];
};

//**************************************************************************
//* Class: Win32_MemoryDevice
//* Derived from: Win32_SMBIOSMemory
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B9B-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_MemoryDevice : Win32_SMBIOSMemory
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 18|Error Granularity"}: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass] uint16 ErrorGranularity;
};

//**************************************************************************
//* Class: Win32_MemoryArray
//* Derived from: Win32_SMBIOSMemory
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B9A-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_MemoryArray : Win32_SMBIOSMemory
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 18|Error Granularity"}: ToSubClass, ValueMap{"Other", "Unknown", "Device level", "Memory partition level"}: ToSubClass] uint16 ErrorGranularity;
};

//**************************************************************************
//* Class: CIM_DiskPartition
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C541-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_DiskPartition : CIM_StorageExtent
{
	[read: ToSubClass] boolean Bootable;
	[read: ToSubClass] boolean PrimaryPartition;
};

//**************************************************************************
//* Class: Win32_DiskPartition
//* Derived from: CIM_DiskPartition
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B8-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DiskPartition : CIM_DiskPartition
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|ReadFile"}: ToSubClass] boolean BootPartition;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|ReadFile"}: ToSubClass] uint32 DiskIndex;
	[read: ToSubClass, MappingStrings{"Win32API"}: ToSubClass] uint32 HiddenSectors;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 Index;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|PARTITION_INFORMATION|RewritePartition"}: ToSubClass] boolean RewritePartition;
	[read: ToSubClass, units("Bytes"): ToSubClass, MappingStrings{"Win32API|File Functions|ReadFile"}: ToSubClass] uint64 Size;
	[read: ToSubClass, units("Bytes"): ToSubClass, MappingStrings{"Win32API|File Functions|ReadFile"}: ToSubClass] uint64 StartingOffset;
	[read: ToSubClass, MappingStrings{"Win32API|PartitionRecord|dwPartitionType"}: ToSubClass] string Type;
};

//**************************************************************************
//* Class: CIM_AggregatePSExtent
//* Derived from: CIM_StorageExtent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{2D0E255C-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_AggregatePSExtent : CIM_StorageExtent
{
};

//**************************************************************************
//* Class: CIM_NetworkAdapter
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C532-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_NetworkAdapter : CIM_LogicalDevice
{
	[read: ToSubClass, MaxLen(64): ToSubClass, MappingStrings{"MIF.DMTF|Network Adapter 802 Port|001.2"}: ToSubClass] string PermanentAddress;
	[read: ToSubClass, MaxLen(64): ToSubClass, MappingStrings{"MIF.DMTF|Network Adapter 802 Port|001.3"}: ToSubClass] string NetworkAddresses[];
	[read: ToSubClass, Units("Bits per Second"): ToSubClass, MappingStrings{"MIB.IETF|RFC1213-MIB.ifSpeed", "MIF.DMTF|Network Adapter 802 Port|001.5"}: ToSubClass] uint64 Speed;
	[read: ToSubClass, Units("Bits per Second"): ToSubClass] uint64 MaxSpeed;
	[read: ToSubClass] boolean AutoSense;
};

//**************************************************************************
//* Class: Win32_NetworkAdapter
//* Derived from: CIM_NetworkAdapter
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4C0-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NetworkAdapter : CIM_NetworkAdapter
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Net"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|ServiceName"}: ToSubClass] string ProductName;
	[read: ToSubClass, MappingStrings{"DeviceIoControl::OID_GEN_MEDIA_IN_USE"}: ToSubClass, ValueMap{"Ethernet 802.3", "Token Ring 802.5", "Fiber Distributed Data Interface (FDDI)", "Wide Area Network (WAN)", "LocalTalk", "Ethernet using DIX header format", "ARCNET", "ARCNET (878.2)", "ATM", "Wireless", "Infrared Wireless", "Bpc", "CoWan", "1394"}: ToSubClass] string AdapterType;
	[read: ToSubClass, MappingStrings{"DeviceIoControl::OID_GEN_MEDIA_IN_USE"}: ToSubClass] uint16 AdapterTypeId;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] string MACAddress;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|ProductName"}: ToSubClass] string ServiceName;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|Manufacturer"}: ToSubClass] string Manufacturer;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|DriverDate"}: ToSubClass] boolean Installed;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards"}: ToSubClass] uint32 Index;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Bus Port|001.9|Maximum Number of Attachments"}: ToSubClass] uint32 MaxNumberControlled;
	[read: ToSubClass, MappingStrings{"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Perflib\\009|System Up Time"}: ToSubClass] datetime TimeOfLastReset;
	[read: ToSubClass] string NetConnectionID;
	[read: ToSubClass, ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}: ToSubClass] uint16 NetConnectionStatus;
};

//**************************************************************************
//* Class: Win32_MotherboardDevice
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4BA-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_MotherboardDevice : CIM_LogicalDevice
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\MultifunctionAdapter|Identifier"}: ToSubClass] string PrimaryBusType;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System"}: ToSubClass] string RevisionNumber;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\MultifunctionAdapter|Identifier"}: ToSubClass] string SecondaryBusType;
};

//**************************************************************************
//* Class: CIM_UserDevice
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C533-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_UserDevice : CIM_LogicalDevice
{
	[read: ToSubClass] boolean IsLocked;
};

//**************************************************************************
//* Class: CIM_PointingDevice
//* Derived from: CIM_UserDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C535-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_PointingDevice : CIM_UserDevice
{
	[read: ToSubClass] uint16 Handedness;
	[read: ToSubClass] uint8 NumberOfButtons;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9"}: ToSubClass, MappingStrings{"MIF.DMTF|Pointing Device|001.1"}: ToSubClass] uint16 PointingType;
	[read: ToSubClass, Units("Counts per Inch"): ToSubClass] uint32 Resolution;
};

//**************************************************************************
//* Class: Win32_PointingDevice
//* Derived from: CIM_PointingDevice
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B4-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_PointingDevice : CIM_PointingDevice
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class|DriverDesc"}: ToSubClass] string HardwareType;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class|InfPath"}: ToSubClass] string InfFileName;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class|InfSection"}: ToSubClass] string InfSection;
	[read: ToSubClass, Units("Hertz"): ToSubClass, MappingStrings{"Win32Registry|SampleRate"}: ToSubClass] uint32 SampleRate;
	[read: ToSubClass, Units("100 Nanoseconds"): ToSubClass, MappingStrings{"Win32Registry|MouseSynchIn100ns"}: ToSubClass] uint32 Synch;
	[read: ToSubClass, Units("Mickeys"): ToSubClass, MappingStrings{"Win32API|System Information Functions|SystemParametersInfo"}: ToSubClass] uint32 DoubleSpeedThreshold;
	[read: ToSubClass, Units("Mickeys"): ToSubClass, MappingStrings{"Win32API|System Information Functions|SystemParametersInfo"}: ToSubClass] uint32 QuadSpeedThreshold;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 21|Interface"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "160", "161", "162"}: ToSubClass] uint16 DeviceInterface;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_Keyboard
//* Derived from: CIM_UserDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C534-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Keyboard : CIM_UserDevice
{
	[read: ToSubClass] string Layout;
	[read: ToSubClass] uint16 NumberOfFunctionKeys;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, MappingStrings{"MIF.DMTF|System Hardware Security|001.2"}: ToSubClass] uint16 Password;
};

//**************************************************************************
//* Class: Win32_Keyboard
//* Derived from: CIM_Keyboard
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B5-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Keyboard : CIM_Keyboard
{
	[read: ToSubClass, Override("DeviceId"), key] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_Display
//* Derived from: CIM_UserDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCE7-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_Display : CIM_UserDevice
{
};

//**************************************************************************
//* Class: CIM_DesktopMonitor
//* Derived from: CIM_Display
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCE8-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_DesktopMonitor : CIM_Display
{
	[read: ToSubClass] uint16 DisplayType;
	[read: ToSubClass, Units("MegaHertz"): ToSubClass] uint32 Bandwidth;
	[read: ToSubClass] uint32 ScreenHeight;
	[read: ToSubClass] uint32 ScreenWidth;
};

//**************************************************************************
//* Class: Win32_DesktopMonitor
//* Derived from: CIM_DesktopMonitor
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{1008CCF0-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class Win32_DesktopMonitor : CIM_DesktopMonitor
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32API|Windows GDI|HMONITOR"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string MonitorManufacturer;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string MonitorType;
	[read: ToSubClass, Units("Pixels per Logical Inch"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"}: ToSubClass] uint32 PixelsPerXLogicalInch;
	[read: ToSubClass, Units("Pixels per Logical Inch"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"}: ToSubClass] uint32 PixelsPerYLogicalInch;
};

//**************************************************************************
//* Class: CIM_FlatPanel
//* Derived from: CIM_Display
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCE9-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_FlatPanel : CIM_Display
{
	[read: ToSubClass, Units("Pixels"): ToSubClass] uint32 HorizontalResolution;
	[read: ToSubClass, Units("Pixels"): ToSubClass] uint32 VerticalResolution;
	[read: ToSubClass] uint16 ScanMode;
	[read: ToSubClass] uint16 DisplayType;
	[read: ToSubClass] uint16 LightSource;
	[read: ToSubClass] boolean SupportsColor;
};

//**************************************************************************
//* Class: CIM_Sensor
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9565979B-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_Sensor : CIM_LogicalDevice
{
};

//**************************************************************************
//* Class: CIM_NumericSensor
//* Derived from: CIM_Sensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9565979C-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_NumericSensor : CIM_Sensor
{
	[read: ToSubClass] sint32 CurrentReading;
	[read: ToSubClass] sint32 NominalReading;
	[read: ToSubClass] sint32 NormalMax;
	[read: ToSubClass] sint32 NormalMin;
	[read: ToSubClass] sint32 MaxReadable;
	[read: ToSubClass] sint32 MinReadable;
	[read: ToSubClass] uint32 Resolution;
	[read: ToSubClass] sint32 Tolerance;
	[Units("Hundredths of Percent"): ToSubClass, read: ToSubClass] sint32 Accuracy;
	[read: ToSubClass] boolean IsLinear;
	[read: ToSubClass] sint32 LowerThresholdNonCritical;
	[read: ToSubClass] sint32 UpperThresholdNonCritical;
	[read: ToSubClass] sint32 LowerThresholdCritical;
	[read: ToSubClass] sint32 UpperThresholdCritical;
	[read: ToSubClass] sint32 LowerThresholdFatal;
	[read: ToSubClass] sint32 UpperThresholdFatal;
};

//**************************************************************************
//* Class: CIM_VoltageSensor
//* Derived from: CIM_NumericSensor
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A998F9B4-E3D4-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_VoltageSensor : CIM_NumericSensor
{
	[read: ToSubClass, Override("CurrentReading"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.5"}: ToSubClass] sint32 CurrentReading = NULL;
	[read: ToSubClass, Override("NominalReading"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.6"}: ToSubClass] sint32 NominalReading = NULL;
	[read: ToSubClass, Override("NormalMax"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.7"}: ToSubClass] sint32 NormalMax = NULL;
	[read: ToSubClass, Override("NormalMin"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.8"}: ToSubClass] sint32 NormalMin = NULL;
	[read: ToSubClass, Override("MaxReadable"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.9"}: ToSubClass] sint32 MaxReadable = NULL;
	[read: ToSubClass, Override("MinReadable"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.10"}: ToSubClass] sint32 MinReadable = NULL;
	[read: ToSubClass, Override("Resolution"), Units("Tenths of Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.17"}: ToSubClass] uint32 Resolution = NULL;
	[read: ToSubClass, Override("Tolerance"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.18"}: ToSubClass] sint32 Tolerance = NULL;
	[read: ToSubClass, Override("Accuracy"), MappingStrings{"MIF.DMTF|Voltage Probe|001.19"}: ToSubClass] sint32 Accuracy = NULL;
	[read: ToSubClass, Override("LowerThresholdNonCritical"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.11"}: ToSubClass] sint32 LowerThresholdNonCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdNonCritical"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.12"}: ToSubClass] sint32 UpperThresholdNonCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdCritical"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.13"}: ToSubClass] sint32 LowerThresholdCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdCritical"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.14"}: ToSubClass] sint32 UpperThresholdCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdFatal"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.15"}: ToSubClass] sint32 LowerThresholdFatal = NULL;
	[read: ToSubClass, Override("UpperThresholdFatal"), Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Voltage Probe|001.16"}: ToSubClass] sint32 UpperThresholdFatal = NULL;
};

//**************************************************************************
//* Class: Win32_VoltageProbe
//* Derived from: CIM_VoltageSensor
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{464FFAB8-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class Win32_VoltageProbe : CIM_VoltageSensor
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_TemperatureSensor
//* Derived from: CIM_NumericSensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9565979D-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_TemperatureSensor : CIM_NumericSensor
{
	[read: ToSubClass, Override("CurrentReading"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.5"}: ToSubClass] sint32 CurrentReading = NULL;
	[read: ToSubClass, Override("NominalReading"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.6"}: ToSubClass] sint32 NominalReading = NULL;
	[read: ToSubClass, Override("NormalMax"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.7"}: ToSubClass] sint32 NormalMax = NULL;
	[read: ToSubClass, Override("NormalMin"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.8"}: ToSubClass] sint32 NormalMin = NULL;
	[read: ToSubClass, Override("MaxReadable"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.9"}: ToSubClass] sint32 MaxReadable = NULL;
	[read: ToSubClass, Override("MinReadable"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.10"}: ToSubClass] sint32 MinReadable = NULL;
	[read: ToSubClass, Override("Resolution"), Units("Hundredths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.17"}: ToSubClass] uint32 Resolution = NULL;
	[read: ToSubClass, Override("Tolerance"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.18"}: ToSubClass] sint32 Tolerance = NULL;
	[read: ToSubClass, Override("Accuracy"), MappingStrings{"MIF.DMTF|Temperature Probe|001.19"}: ToSubClass] sint32 Accuracy = NULL;
	[read: ToSubClass, Override("LowerThresholdNonCritical"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.11"}: ToSubClass] sint32 LowerThresholdNonCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdNonCritical"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.12"}: ToSubClass] sint32 UpperThresholdNonCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdCritical"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.13"}: ToSubClass] sint32 LowerThresholdCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdCritical"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.14"}: ToSubClass] sint32 UpperThresholdCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdFatal"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.15"}: ToSubClass] sint32 LowerThresholdFatal = NULL;
	[read: ToSubClass, Override("UpperThresholdFatal"), Units("Tenths of degrees Centigrade"): ToSubClass, MappingStrings{"MIF.DMTF|Temperature Probe|001.16"}: ToSubClass] sint32 UpperThresholdFatal = NULL;
};

//**************************************************************************
//* Class: Win32_TemperatureProbe
//* Derived from: CIM_TemperatureSensor
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{464FFABB-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class Win32_TemperatureProbe : CIM_TemperatureSensor
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_Tachometer
//* Derived from: CIM_NumericSensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{237D964F-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_Tachometer : CIM_NumericSensor
{
	[read: ToSubClass, Override("CurrentReading"), Units("Revolutions per Minute"): ToSubClass] sint32 CurrentReading = NULL;
	[read: ToSubClass, Override("NominalReading"), Units("Revolutions per Minute"): ToSubClass] sint32 NominalReading = NULL;
	[read: ToSubClass, Override("NormalMax"), Units("Revolutions per Minute"): ToSubClass] sint32 NormalMax = NULL;
	[read: ToSubClass, Override("NormalMin"), Units("Revolutions per Minute"): ToSubClass] sint32 NormalMin = NULL;
	[read: ToSubClass, Override("MaxReadable"), Units("Revolutions per Minute"): ToSubClass] sint32 MaxReadable = NULL;
	[read: ToSubClass, Override("MinReadable"), Units("Revolutions per Minute"): ToSubClass] sint32 MinReadable = NULL;
	[read: ToSubClass, Override("Resolution"), Units("Tenths of Revolutions per Minute"): ToSubClass] uint32 Resolution = NULL;
	[read: ToSubClass, Override("Tolerance"), Units("Revolutions per Minute"): ToSubClass] sint32 Tolerance = NULL;
	[read: ToSubClass, Override("LowerThresholdNonCritical"), Units("Revolutions per Minute"): ToSubClass] sint32 LowerThresholdNonCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdNonCritical"), Units("Revolutions per Minute"): ToSubClass] sint32 UpperThresholdNonCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdCritical"), Units("Revolutions per Minute"): ToSubClass] sint32 LowerThresholdCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdCritical"), Units("Revolutions per Minute"): ToSubClass] sint32 UpperThresholdCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdFatal"), Units("Revolutions per Minute"): ToSubClass] sint32 LowerThresholdFatal = NULL;
	[read: ToSubClass, Override("UpperThresholdFatal"), Units("Revolutions per Minute"): ToSubClass] sint32 UpperThresholdFatal = NULL;
};

//**************************************************************************
//* Class: CIM_CurrentSensor
//* Derived from: CIM_NumericSensor
//**************************************************************************
[Locale(1033): ToInstance, UUID("{DCA1D084-E3D3-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_CurrentSensor : CIM_NumericSensor
{
	[read: ToSubClass, Override("CurrentReading"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.5"}: ToSubClass] sint32 CurrentReading = NULL;
	[read: ToSubClass, Override("NominalReading"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.6"}: ToSubClass] sint32 NominalReading = NULL;
	[read: ToSubClass, Override("NormalMax"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.7"}: ToSubClass] sint32 NormalMax = NULL;
	[read: ToSubClass, Override("NormalMin"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.8"}: ToSubClass] sint32 NormalMin = NULL;
	[read: ToSubClass, Override("MaxReadable"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.9"}: ToSubClass] sint32 MaxReadable = NULL;
	[read: ToSubClass, Override("MinReadable"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.10"}: ToSubClass] sint32 MinReadable = NULL;
	[read: ToSubClass, Override("Resolution"), Units("Tenths of Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.17"}: ToSubClass] uint32 Resolution = NULL;
	[read: ToSubClass, Override("Tolerance"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.18"}: ToSubClass] sint32 Tolerance = NULL;
	[read: ToSubClass, Override("Accuracy"), MappingStrings{"MIF.DMTF|Electrical Current Probe|001.19"}: ToSubClass] sint32 Accuracy = NULL;
	[read: ToSubClass, Override("LowerThresholdNonCritical"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.11"}: ToSubClass] sint32 LowerThresholdNonCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdNonCritical"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.12"}: ToSubClass] sint32 UpperThresholdNonCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdCritical"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.13"}: ToSubClass] sint32 LowerThresholdCritical = NULL;
	[read: ToSubClass, Override("UpperThresholdCritical"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.14"}: ToSubClass] sint32 UpperThresholdCritical = NULL;
	[read: ToSubClass, Override("LowerThresholdFatal"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.15"}: ToSubClass] sint32 LowerThresholdFatal = NULL;
	[read: ToSubClass, Override("UpperThresholdFatal"), Units("Milliamps"): ToSubClass, MappingStrings{"MIF.DMTF|Electrical Current Probe|001.16"}: ToSubClass] sint32 UpperThresholdFatal = NULL;
};

//**************************************************************************
//* Class: Win32_CurrentProbe
//* Derived from: CIM_CurrentSensor
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{464FFABA-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class Win32_CurrentProbe : CIM_CurrentSensor
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_MultiStateSensor
//* Derived from: CIM_Sensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{237D964E-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_MultiStateSensor : CIM_Sensor
{
};

//**************************************************************************
//* Class: CIM_DiscreteSensor
//* Derived from: CIM_Sensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1BF00330-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_DiscreteSensor : CIM_Sensor
{
	[read: ToSubClass, MaxLen(64): ToSubClass] STRING AcceptableValues[];
	[read: ToSubClass, MaxLen(64): ToSubClass] STRING CurrentReading;
	[read: ToSubClass, MaxLen(64): ToSubClass] STRING PossibleValues[];
};

//**************************************************************************
//* Class: CIM_BinarySensor
//* Derived from: CIM_Sensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{11140D44-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_BinarySensor : CIM_Sensor
{
	[read: ToSubClass] BOOLEAN CurrentReading;
	[read: ToSubClass] BOOLEAN ExpectedReading;
	[read: ToSubClass, MaxLen(64): ToSubClass] STRING InterpretationOfFalse;
	[read: ToSubClass, MaxLen(64): ToSubClass] STRING InterpretationOfTrue;
};

//**************************************************************************
//* Class: CIM_Controller
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C531-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Controller : CIM_LogicalDevice
{
	[MappingStrings{"MIF.DMTF|Bus Port|001.9"}: ToSubClass, read: ToSubClass] uint32 MaxNumberControlled;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47"}: ToSubClass, MappingStrings{"MIF.DMTF|Bus Port|001.2", "MIF.DMTF|Disks|003.3"}: ToSubClass] uint16 ProtocolSupported;
	[read: ToSubClass] datetime TimeOfLastReset;
};

//**************************************************************************
//* Class: CIM_PCMCIAController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B5A-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PCMCIAController : CIM_Controller
{
	[read: ToSubClass, Schema("Win32"): ToInstance] string Manufacturer;
};

//**************************************************************************
//* Class: Win32_PCMCIAController
//* Derived from: CIM_PCMCIAController
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{98C7E2C6-D592-11d2-B355-00105A0A323A}"): ToInstance]
class Win32_PCMCIAController : CIM_PCMCIAController
{
	[read: ToSubClass, Override("DeviceId"): ToSubClass, key, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_SCSIController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C553-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_SCSIController : CIM_Controller
{
	[read: ToSubClass] uint32 ControllerTimeouts;
	[Units("Bits"): ToSubClass, read: ToSubClass] uint32 MaxDataWidth;
	[Units("Bits per Second"): ToSubClass, read: ToSubClass] uint64 MaxTransferRate;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass, MappingStrings{"MIF.DMTF|Storage Controller|001.3"}: ToSubClass] uint16 ProtectionManagement;
};

//**************************************************************************
//* Class: Win32_SCSIController
//* Derived from: CIM_SCSIController
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4C1-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SCSIController : CIM_SCSIController
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32Registry|Hardware\\DeviceMap\\Scsi"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|Hardware\\DeviceMap\\Scsi|ScsiPort"}: ToSubClass] uint32 Index;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|PortDriver"}: ToSubClass] string DriverName;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|Hardware\\DeviceMap\\Scsi|ScsiPort"}: ToSubClass] string DeviceMap;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Enum\\Root|HWRevision"}: ToSubClass] string HardwareVersion;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Enum\\Root|Mfg"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_USBController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B5B-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_USBController : CIM_Controller
{
	[read: ToSubClass, Schema("Win32"): ToInstance] string Manufacturer;
};

//**************************************************************************
//* Class: Win32_USBController
//* Derived from: CIM_USBController
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{98C7E2C7-D592-11d2-B355-00105A0A323A}"): ToInstance]
class Win32_USBController : CIM_USBController
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_ManagementController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{7250D62E-E3D0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ManagementController : CIM_Controller
{
};

//**************************************************************************
//* Class: Win32_FloppyController
//* Derived from: CIM_Controller
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{2A7DC003-BAEF-11d2-85E5-0000F8102E5F}"): ToInstance]
class Win32_FloppyController : CIM_Controller
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_SerialController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C554-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_SerialController : CIM_Controller
{
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "160", "161"}: ToSubClass, MappingStrings{"MIF.DMTF|Serial Ports|004.7"}: ToSubClass, ModelCorrespondence{"CIM_SerialController.CapabilityDescriptions"}: ToSubClass] uint16 Capabilities[];
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_SerialController.Capabilities"}: ToSubClass] string CapabilityDescriptions[];
	[Units("Bits per Second"): ToSubClass, MappingStrings{"MIF.DMTF|Serial Ports|004.6"}: ToSubClass, read: ToSubClass] uint32 MaxBaudRate;
};

//**************************************************************************
//* Class: Win32_SerialPort
//* Derived from: CIM_SerialController
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4BF-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SerialPort : CIM_SerialController
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32Registry|Hardware\\DeviceMap\\SerialComm"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fBinary"}: ToSubClass] boolean Binary;
	[read: ToSubClass, units("Bytes"): ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwMaxRxQueue"}: ToSubClass] uint32 MaximumInputBufferSize;
	[read: ToSubClass, units("Bytes"): ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwMaxTxQueue"}: ToSubClass] uint32 MaximumOutputBufferSize;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvSubType"}: ToSubClass] string ProviderType;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_BAUD"}: ToSubClass] boolean SettableBaudRate;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_DATABITS"}: ToSubClass] boolean SettableDataBits;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_HANDSHAKING"}: ToSubClass] boolean SettableFlowControl;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_PARITY"}: ToSubClass] boolean SettableParity;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_PARITY_CHECK"}: ToSubClass] boolean SettableParityCheck;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_RLSD"}: ToSubClass] boolean SettableRLSD;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_STOPBITS"}: ToSubClass] boolean SettableStopBits;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_16BITMODE"}: ToSubClass] boolean Supports16BitMode;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_DTRDSR"}: ToSubClass] boolean SupportsDTRDSR;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_TOTALTIMEOUTS"}: ToSubClass] boolean SupportsElapsedTimeouts;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_INTTIMEOUTS"}: ToSubClass] boolean SupportsIntTimeouts;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_PARITY_CHECK"}: ToSubClass] boolean SupportsParityCheck;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_RLSD"}: ToSubClass] boolean SupportsRLSD;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_RTSCTS"}: ToSubClass] boolean SupportsRTSCTS;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_SPECIALCHARS"}: ToSubClass] boolean SupportsSpecialCharacters;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_XONXOFF"}: ToSubClass] boolean SupportsXOnXOff;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_SETXCHAR"}: ToSubClass] boolean SupportsXOnXOffSet;
	[read: ToSubClass, MappingStrings{"Win32Registry|HARDWARE\\DESCRIPTION\\SYSTEM\\MultifunctionAdapter"}: ToSubClass] boolean OSAutoDiscovered;
};

//**************************************************************************
//* Class: Win32_IDEController
//* Derived from: CIM_Controller
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{9ABA5122-C7A1-11d2-911D-0060081A46FD}"): ToInstance]
class Win32_IDEController : CIM_Controller
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_VideoController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCE5-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_VideoController : CIM_Controller
{
	[read: ToSubClass] string VideoProcessor;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"}: ToSubClass, MappingStrings{"MIF.DMTF|Video|003.6"}: ToSubClass] uint16 VideoMemoryType;
	[read: ToSubClass] uint32 NumberOfVideoPages;
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint32 MaxMemorySupported;
	[read: ToSubClass, ModelCorrespondence{"CIM_VideoController.CapabilityDescriptions"}: ToSubClass] uint16 AcceleratorCapabilities[];
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_VideoController.AcceleratorCapabilities"}: ToSubClass] string CapabilityDescriptions[];
	[read: ToSubClass, Units("Bits"): ToSubClass, MappingStrings{"MIF.DMTF|Video|003.12"}: ToSubClass] uint32 CurrentBitsPerPixel;
	[read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"MIF.DMTF|Video|003.11"}: ToSubClass] uint32 CurrentHorizontalResolution;
	[read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"MIF.DMTF|Video|003.10"}: ToSubClass] uint32 CurrentVerticalResolution;
	[read: ToSubClass, Units("Hertz"): ToSubClass, MappingStrings{"MIF.DMTF|Video|003.5"}: ToSubClass] uint32 MaxRefreshRate;
	[read: ToSubClass, Units("Hertz"): ToSubClass, MappingStrings{"MIF.DMTF|Video|003.4"}: ToSubClass] uint32 MinRefreshRate;
	[read: ToSubClass, Units("Hertz"): ToSubClass, MappingStrings{"MIF.DMTF|Video|003.15"}: ToSubClass] uint32 CurrentRefreshRate;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass, MappingStrings{"MIF.DMTF|Video|003.8"}: ToSubClass] uint16 CurrentScanMode;
	[read: ToSubClass] uint64 CurrentNumberOfColors;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Video|003.13"}: ToSubClass] uint32 CurrentNumberOfRows;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Video|003.14"}: ToSubClass] uint32 CurrentNumberOfColumns;
};

//**************************************************************************
//* Class: CIM_PCVideoController
//* Derived from: CIM_VideoController
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCE6-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_PCVideoController : CIM_VideoController
{
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "160"}: ToSubClass, MappingStrings{"MIF.DMTF|Video|003.2"}: ToSubClass] uint16 VideoArchitecture;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Video|003.3"}: ToSubClass] uint16 VideoMode;
	[read: ToSubClass] uint16 NumberOfColorPlanes;
};

//**************************************************************************
//* Class: Win32_VideoController
//* Derived from: CIM_PCVideoController
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{1008CCF1-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class Win32_VideoController : CIM_PCVideoController
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, Units("Hertz"): ToSubClass, MappingStrings{"Win32Registry|HardwareInformation."}: ToSubClass, Override("CurrentRefreshRate"): ToSubClass] uint32 CurrentRefreshRate = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string AdapterCompatibility;
	[read: ToSubClass, MappingStrings{"Win32Registry|HardwareInformation.DACType"}: ToSubClass] string AdapterDACType;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|HardwareInformation.MemorySize"}: ToSubClass] uint32 AdapterRAM;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean Monochrome;
	[read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|EnumDisplaySettings"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass] uint32 DitherType;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000"}: ToSubClass] string InfFilename;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000"}: ToSubClass] string InfSection;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\"}: ToSubClass] string InstalledDisplayDrivers;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\"}: ToSubClass] datetime DriverDate;
	[read: ToSubClass, MappingStrings{"Win32API|File Installation Library Functions|GetFileVersionInfo"}: ToSubClass] string DriverVersion;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DevMode|dmICMIntent"}: ToSubClass, ValueMap{"1", "2", "3"}: ToSubClass] uint32 ICMIntent;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DevMode|dmICMMethod"}: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass] uint32 ICMMethod;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DevMode|dmSpecVersion"}: ToSubClass] uint32 SpecificationVersion;
	[read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"}: ToSubClass] uint32 ColorTableEntries;
	[read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"}: ToSubClass] uint32 DeviceSpecificPens;
	[read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"}: ToSubClass] uint32 ReservedSystemPaletteEntries;
	[read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"}: ToSubClass] uint32 SystemPaletteEntries;
	[read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"}: ToSubClass] string VideoModeDescription;
};

//**************************************************************************
//* Class: Win32_1394Controller
//* Derived from: CIM_Controller
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{2A7DC003-BAEF-11d2-85E5-0000F8102E5F}"): ToInstance]
class Win32_1394Controller : CIM_Controller
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_PCIController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{7BB67AE8-E3D0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_PCIController : CIM_Controller
{
};

//**************************************************************************
//* Class: CIM_InfraredController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{EDCE42F9-0991-11d3-910A-00105AA630BE}"): ToInstance]
class CIM_InfraredController : CIM_Controller
{
};

//**************************************************************************
//* Class: Win32_InfraredDevice
//* Derived from: CIM_InfraredController
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{67F74295-BA42-11d2-85E5-0000F8102E5F}"): ToInstance]
class Win32_InfraredDevice : CIM_InfraredController
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_ParallelController
//* Derived from: CIM_Controller
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C552-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_ParallelController : CIM_Controller
{
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, MappingStrings{"MIF.DMTF|Parallel Ports|003.8"}: ToSubClass, ModelCorrespondence{"CIM_ParallelController.CapabilityDescriptions"}: ToSubClass] uint16 Capabilities[];
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_ParallelController.Capabilities"}: ToSubClass] string CapabilityDescriptions[];
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Parallel Ports|003.7"}: ToSubClass] boolean DMASupport;
};

//**************************************************************************
//* Class: Win32_ParallelPort
//* Derived from: CIM_ParallelController
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4C2-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_ParallelPort : CIM_ParallelController
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean OSAutoDiscovered;
};

//**************************************************************************
//* Class: CIM_USBDevice
//* Derived from: CIM_LogicalDevice
//**************************************************************************
class CIM_USBDevice : CIM_LogicalDevice
{
	uint16 USBVersion;
	uint8 ClassCode;
	uint8 SubclassCode;
	uint8 ProtocolCode;
	uint8 NumberOfConfigs;
	[ModelCorrespondence{"CIM_USBDevice.CurrentAlternateSettings"}: ToSubClass] uint8 CurrentConfigValue;
	[ModelCorrespondence{"CIM_USBDevice.CurrentConfigValue"}: ToSubClass] uint8 CurrentAlternateSettings[];
	 uint32 GetDescriptor([IN] uint8 RequestType, [IN] uint16 RequestValue, [IN] uint16 RequestIndex, [in,out] uint16 RequestLength, [OUT] uint8 Buffer[]);
};

//**************************************************************************
//* Class: CIM_USBHub
//* Derived from: CIM_USBDevice
//**************************************************************************
class CIM_USBHub : CIM_USBDevice
{
	boolean GangSwitched;
	uint8 NumberOfPorts;
};

//**************************************************************************
//* Class: Win32_USBHub
//* Derived from: CIM_USBHub
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance, UUID("{52E56374-B17E-41DC-00EC-FC3E6E8D8783}"): ToInstance]
class Win32_USBHub : CIM_USBHub
{
	[read: ToSubClass, Override("Name"): ToSubClass, MappingStrings{""}: ToSubClass] string Name = NULL;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, Override("DeviceID"): ToSubClass, MappingStrings{""}: ToSubClass] string DeviceID = NULL;
};

//**************************************************************************
//* Class: CIM_AlarmDevice
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B66-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_AlarmDevice : CIM_LogicalDevice
{
	[read: ToSubClass] boolean AudibleAlarm;
	[read: ToSubClass] boolean VisibleAlarm;
	[read: ToSubClass] uint16 Urgency;
	 uint32 SetUrgency([IN] uint16 RequestedUrgency);
};

//**************************************************************************
//* Class: Win32_PnPEntity
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FE28FD98-C875-11d2-B352-00104BC97924}"): ToInstance]
class Win32_PnPEntity : CIM_LogicalDevice
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Service;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string ClassGuid;
};

//**************************************************************************
//* Class: Win32_SoundDevice
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C50C-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SoundDevice : CIM_LogicalDevice
{
	[read: ToSubClass, Override("DeviceId"), key, MaxLen(260): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\control\\MediaResources\\wave|DeviceID"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint16 DMABufferSize;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 MPU401Address;
	[read: ToSubClass, MappingStrings{"Win32API|Multimedia Structures|WAVEOUTCAPS|szPname"}: ToSubClass] string ProductName;
};

//**************************************************************************
//* Class: CIM_Processor
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C54B-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Processor : CIM_LogicalDevice
{
	[Units("Bits"): ToSubClass, read: ToSubClass] uint16 AddressWidth;
	[Units("MegaHertz"): ToSubClass, MappingStrings{"MIF.DMTF|Processor|006.6"}: ToSubClass, read: ToSubClass] uint32 CurrentClockSpeed;
	[Units("Bits"): ToSubClass, read: ToSubClass] uint16 DataWidth;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "25", "26", "27", "28", "29", "32", "33", "34", "35", "36", "48", "64", "80", "96", "97", "98", "99", "100", "101", "112", "128", "131", "132", "144", "160", "176", "180", "185", "200", "203", "204", "250", "251", "260", "261", "280", "281", "300", "301", "302", "320"}: ToSubClass, MappingStrings{"SMBIOS|Processor Information|Type 4|Processor Family"}: ToSubClass, ModelCorrespondence{"CIM_Processor.OtherFamilyDescription"}: ToSubClass] uint16 Family;
	[read: ToSubClass, MaxLen(64): ToSubClass, ModelCorrespondence{"CIM_Processor.Family"}: ToSubClass] string OtherFamilyDescription;
	[read: ToSubClass, Units("Percent"): ToSubClass, MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrProcessorLoad"}: ToSubClass] uint16 LoadPercentage;
	[Units("MegaHertz"): ToSubClass, MappingStrings{"MIF.DMTF|Processor|006.5"}: ToSubClass, read: ToSubClass] uint32 MaxClockSpeed;
	[read: ToSubClass] string Role;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}: ToSubClass, MappingStrings{"MIF.DMTF|Processor|006.7"}: ToSubClass] uint16 UpgradeMethod;
	[ModelCorrespondence{"CIM_Processor.Family"}: ToSubClass, read: ToSubClass] string Stepping;
	[read: ToSubClass] string UniqueId;
};

//**************************************************************************
//* Class: Win32_Processor
//* Derived from: CIM_Processor
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4BB-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Processor : CIM_Processor
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32API|System Information Structures|SYSTEM_INFO|dwNumberOfProcessors"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, Units("Percent"): ToSubClass, MappingStrings{"Win32API|Performance Data"}: ToSubClass, Override("LoadPercentage"): ToSubClass] uint16 LoadPercentage = NULL;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Version;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 L2CacheSize;
	[read: ToSubClass, Units("MegaHertz"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 L2CacheSpeed;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass, ValueMap{"0", "1", "2", "3", "6"}: ToSubClass] uint16 Architecture;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint16 Level;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint16 Revision;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 4|Processor Information|Status"}: ToSubClass] uint16 CpuStatus;
	[read: ToSubClass, Units("tenth-Volts"): ToSubClass, MappingStrings{"SMBIOS|Type 4|Processor Information|Voltage"}: ToSubClass] uint16 CurrentVoltage;
	[read: ToSubClass, Units("MegaHertz"): ToSubClass, MappingStrings{"SMBIOS|Type 4|Processor Information|External Clock"}: ToSubClass] uint32 ExtClock;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 4|Processor Information|Processor ID"}: ToSubClass] string ProcessorId;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 4|Processor Information|Processor Type"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass] uint16 ProcessorType;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 4|Processor Information|Socket Designation"}: ToSubClass] string SocketDesignation;
	[read: ToSubClass, Units("Volts"): ToSubClass, MappingStrings{"SMBIOS|Type 4|Processor Information|Voltage"}: ToSubClass] uint32 VoltageCaps;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 NumberOfLogicalProcessors;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 NumberOfCores;
};

//**************************************************************************
//* Class: CIM_Battery
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C548-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Battery : CIM_LogicalDevice
{
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"}: ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.14"}: ToSubClass] uint16 BatteryStatus;
	[read: ToSubClass, Units("Seconds"): ToSubClass] uint32 TimeOnBattery;
	[read: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.15"}: ToSubClass] uint32 EstimatedRunTime;
	[read: ToSubClass, Units("Percent"): ToSubClass] uint16 EstimatedChargeRemaining;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"}: ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.7"}: ToSubClass] uint16 Chemistry;
	[read: ToSubClass, Units("Milliwatt-Hours"): ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.8"}: ToSubClass] uint32 DesignCapacity;
	[read: ToSubClass, Units("Milliwatt-Hours"): ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.11"}: ToSubClass] uint32 FullChargeCapacity;
	[read: ToSubClass, Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.9"}: ToSubClass] uint64 DesignVoltage;
	[read: ToSubClass, MaxLen(64): ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.10"}: ToSubClass] string SmartBatteryVersion;
	[read: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"MIF.DMTF|Portable Battery|002.16"}: ToSubClass] uint32 TimeToFullCharge;
	[read: ToSubClass, Units("Minutes"): ToSubClass] uint32 ExpectedLife;
	[read: ToSubClass, Units("Minutes"): ToSubClass] uint32 MaxRechargeTime;
};

//**************************************************************************
//* Class: Win32_PortableBattery
//* Derived from: CIM_Battery
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B9E-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_PortableBattery : CIM_Battery
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 22|Location"}: ToSubClass] string Location;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 22|Manufacture Date"}: ToSubClass] string ManufactureDate;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 22|Manufacturer"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, Units("Percent"): ToSubClass, MappingStrings{"SMBIOS|Type 22|Maximum Error in Battery Data"}: ToSubClass] uint16 MaxBatteryError;
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 22|Design Capacity Multiplier"}: ToSubClass] uint16 CapacityMultiplier;
};

//**************************************************************************
//* Class: Win32_Battery
//* Derived from: CIM_Battery
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B9-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Battery : CIM_Battery
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, DEPRECATED: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services|BatteryLife"}: ToSubClass] uint32 ExpectedBatteryLife;
	[read: ToSubClass, DEPRECATED: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services|RechargeRate"}: ToSubClass] uint32 BatteryRechargeTime;
};

//**************************************************************************
//* Class: CIM_MediaAccessDevice
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C52A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_MediaAccessDevice : CIM_LogicalDevice
{
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, MappingStrings{"MIF.DMTF|Storage Devices|001.9", "MIF.DMTF|Storage Devices|001.11", "MIF.DMTF|Storage Devices|001.12", "MIF.DMTF|Disks|003.7"}: ToSubClass, ModelCorrespondence{"CIM_MediaAccessDevice.CapabilityDescriptions"}: ToSubClass] uint16 Capabilities[];
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_MediaAccessDevice.Capabilities"}: ToSubClass] string CapabilityDescriptions[];
	[read: ToSubClass] string CompressionMethod;
	[read: ToSubClass] string ErrorMethodology;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"MIF.DMTF|Sequential Access Devices|001.2"}: ToSubClass] uint64 MaxMediaSize;
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint64 DefaultBlockSize;
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint64 MaxBlockSize;
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint64 MinBlockSize;
	[read: ToSubClass] uint32 NumberOfMediaSupported;
	[read: ToSubClass] boolean NeedsCleaning;
};

//**************************************************************************
//* Class: CIM_TapeDrive
//* Derived from: CIM_MediaAccessDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C52D-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_TapeDrive : CIM_MediaAccessDevice
{
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint32 EOTWarningZoneSize;
	[read: ToSubClass] uint32 MaxPartitionCount;
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint32 Padding;
};

//**************************************************************************
//* Class: Win32_TapeDrive
//* Derived from: CIM_TapeDrive
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B1-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_TapeDrive : CIM_TapeDrive
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32API|File Functions|CreateFile"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|Compression"}: ToSubClass] uint32 Compression;
	[read: ToSubClass, MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|ECC"}: ToSubClass] uint32 ECC;
	[read: ToSubClass, MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|FeaturesHigh"}: ToSubClass] uint32 FeaturesHigh;
	[read: ToSubClass, MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|FeaturesLow"}: ToSubClass] uint32 FeaturesLow;
	[read: ToSubClass, MappingStrings{"Win32_TapeDrive|MediaType|Tape Drive"}: ToSubClass] string MediaType;
	[read: ToSubClass, MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|ReportSetmarks"}: ToSubClass] uint32 ReportSetMarks;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions"}: ToSubClass] string Id;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_CDROMDrive
//* Derived from: CIM_MediaAccessDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C52B-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_CDROMDrive : CIM_MediaAccessDevice
{
};

//**************************************************************************
//* Class: Win32_CDROMDrive
//* Derived from: CIM_CDROMDrive
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B3-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_CDROMDrive : CIM_CDROMDrive
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32API|File Functions|GetLogicalDriveStrings"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|GetDriveType"}: ToSubClass] string Drive;
	[read: ToSubClass, DEPRECATED: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] uint16 FileSystemFlags;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass, BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "14", "15", "16", "17", "18"}: ToSubClass] uint32 FileSystemFlagsEx;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|GetDriveType"}: ToSubClass] string Id;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] uint32 MaximumComponentLength;
	[read: ToSubClass, MappingStrings{"Win32API|GetDriveType"}: ToSubClass] string MediaType;
	[read: ToSubClass, MappingStrings{"Win32Registry|RevisionLevel"}: ToSubClass] string RevisionLevel;
	[read: ToSubClass, MappingStrings{"Win2000DDK|KernelModeDrivers|STORAGE_DEVICE_DESCRIPTOR|ProductRevisionOffset"}: ToSubClass] string MfrAssignedRevisionLevel;
	[read: ToSubClass, MappingStrings{"Win32API|DeviceIoControl|IOCTL_SCSI_GET_ADDRESS"}: ToSubClass] uint16 SCSITargetId;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string VolumeName;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] string VolumeSerialNumber;
	[read: ToSubClass, Units("KiloBytes per Second"): ToSubClass, MappingStrings{"Win32API|File Reference and Time Reference"}: ToSubClass] Real64 TransferRate;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean DriveIntegrity;
	[read: ToSubClass, MappingStrings{"Win32API|File System Functions|GetVolumeInformation"}: ToSubClass] boolean MediaLoaded;
	[read: ToSubClass, MappingStrings{"Win32API|SCSI Structures|SCSI_REQUEST_BLOCK|PathId"}: ToSubClass] uint32 SCSIBus;
	[read: ToSubClass, MappingStrings{"Win32API|SCSI Structures|SCSI_REQUEST_BLOCK|Lun"}: ToSubClass] uint16 SCSILogicalUnit;
	[read: ToSubClass, MappingStrings{"Win32API|SCSI Structures|SCSI_REQUEST_BLOCK|ScsiStatus"}: ToSubClass] uint16 SCSIPort;
	[read: ToSubClass, units("Bytes"): ToSubClass, MappingStrings{"Win32API|File Functions|GetDiskFreeSpace"}: ToSubClass] uint64 Size;
};

//**************************************************************************
//* Class: CIM_DiskDrive
//* Derived from: CIM_MediaAccessDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C52C-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_DiskDrive : CIM_MediaAccessDevice
{
};

//**************************************************************************
//* Class: Win32_DiskDrive
//* Derived from: CIM_DiskDrive
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B2-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DiskDrive : CIM_DiskDrive
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, units("Bytes"): ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|BytesPerSector"}: ToSubClass] uint32 BytesPerSector;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] string InterfaceType;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|PARTITION_INFORMATION|RecognizedPartition"}: ToSubClass] uint32 Partitions;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|SectorsPerTrack"}: ToSubClass] uint32 SectorsPerTrack;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|Cylinders"}: ToSubClass] uint64 TotalCylinders;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|TracksPerCylinder"}: ToSubClass] uint32 TotalHeads;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|SectorsPerTrack"}: ToSubClass] uint64 TotalSectors;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|TracksPerCylinder"}: ToSubClass] uint64 TotalTracks;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|TracksPerCylinder"}: ToSubClass] uint32 TracksPerCylinder;
	[read: ToSubClass, MappingStrings{"Win32API|Windows 95/98 Functions|DRIVE_MAP_INFObtInt13Unit"}: ToSubClass] uint32 Index;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port\\Scsi Bus\\Target Id\\Logical Unit Id\\Identifier", "Win32Registry|Manufacturer"}: ToSubClass] string Manufacturer;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|MediaType|FixedMedia"}: ToSubClass] boolean MediaLoaded;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|MediaType"}: ToSubClass, ValueMap{"Removable media other than floppy", "Fixed hard disk media", "Format is unknown"}: ToSubClass] string MediaType;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port\\Scsi Bus\\Target Id\\Logical Unit Id\\Identifier", "Win32Registry|ProductId"}: ToSubClass] string Model;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|PathId"}: ToSubClass] uint32 SCSIBus;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|Lun"}: ToSubClass] uint16 SCSILogicalUnit;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|PortNumber"}: ToSubClass] uint16 SCSIPort;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|TargetId"}: ToSubClass] uint16 SCSITargetId;
	[read: ToSubClass, units("Bytes"): ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY"}: ToSubClass] uint64 Size;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Structures|DRIVE_LAYOUT_INFORMATION|Signature"}: ToSubClass] uint32 Signature;
};

//**************************************************************************
//* Class: CIM_MagnetoOpticalDrive
//* Derived from: CIM_MediaAccessDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{F62037D8-E3D0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_MagnetoOpticalDrive : CIM_MediaAccessDevice
{
};

//**************************************************************************
//* Class: CIM_DisketteDrive
//* Derived from: CIM_MediaAccessDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{F27851CD-BBAC-11d2-85E5-0000F8102E5F}"): ToInstance]
class CIM_DisketteDrive : CIM_MediaAccessDevice
{
};

//**************************************************************************
//* Class: Win32_FloppyDrive
//* Derived from: CIM_DisketteDrive
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FB1F3A64-BBAC-11d2-85E5-0000F8102E5F}"): ToInstance]
class Win32_FloppyDrive : CIM_DisketteDrive
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry"}: ToSubClass] string Manufacturer;
};

//**************************************************************************
//* Class: CIM_WORMDrive
//* Derived from: CIM_MediaAccessDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FFB58B9A-E3D0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_WORMDrive : CIM_MediaAccessDevice
{
};

//**************************************************************************
//* Class: Win32_Bus
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C50E-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Bus : CIM_LogicalDevice
{
	[read: ToSubClass, key, Override("DeviceId"), MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 BusNum;
	[read: ToSubClass, MappingStrings{"Win32API|cHwRes|INTERFACE_TYPE"}: ToSubClass, ValueMap{"-1", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16"}: ToSubClass] uint32 BusType;
};

//**************************************************************************
//* Class: CIM_Printer
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C54A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Printer : CIM_LogicalDevice
{
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.hrPrinterStatus"}: ToSubClass] uint16 PrinterStatus;
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.ErrorInformation"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.hrPrinterDetectedErrorState"}: ToSubClass] uint16 DetectedErrorState;
	[read: ToSubClass, write: ToSubClass, ModelCorrespondence{"CIM_Printer.DetectedErrorState"}: ToSubClass] string ErrorInformation[];
	[read: ToSubClass] uint16 PaperSizesSupported[];
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_PrintJob.RequiredPaperType", "CIM_PrintService.PaperTypesAvailable"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.prtInputMediaName"}: ToSubClass] string PaperTypesAvailable[];
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.PaperTypesAvailable"}: ToSubClass] string DefaultPaperType;
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.PaperTypesAvailable"}: ToSubClass] string CurrentPaperType;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.prtInterpreterLangFamily"}: ToSubClass, ModelCorrespondence{"CIM_Printer.MimeTypesSupported", "CIM_PrintJob.Language", "CIM_PrintService.LanguagesSupported"}: ToSubClass] uint16 LanguagesSupported[];
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.LanguagesSupported", "CIM_PrintJob.MimeTypes", "CIM_PrintService.MimeTypesSupported"}: ToSubClass] string MimeTypesSupported[];
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47"}: ToSubClass, ModelCorrespondence{"CIM_Printer.LanguagesSupported", "CIM_Printer.CurrentMimeType"}: ToSubClass] uint16 CurrentLanguage;
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.CurrentLanguage"}: ToSubClass] string CurrentMimeType;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47"}: ToSubClass, ModelCorrespondence{"CIM_Printer.LanguagesSupported", "CIM_Printer.DefaultMimeType"}: ToSubClass] uint16 DefaultLanguage;
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.DefaultLanguage"}: ToSubClass] string DefaultMimeType;
	[read: ToSubClass, Counter] uint32 JobCountSinceLastReset;
	[read: ToSubClass] datetime TimeOfLastReset;
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_Printer.CapabilityDescriptions", "CIM_PrintJob.Finishing", "CIM_PrintService.Capabilities"}: ToSubClass] uint16 Capabilities[];
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_Printer.Capabilities"}: ToSubClass] string CapabilityDescriptions[];
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.Capabilities"}: ToSubClass] uint16 DefaultCapabilities[];
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.Capabilities"}: ToSubClass] uint16 CurrentCapabilities[];
	[read: ToSubClass, ModelCorrespondence{"CIM_PrintJob.Copies"}: ToSubClass] uint32 MaxCopies;
	[read: ToSubClass] uint32 DefaultCopies;
	[read: ToSubClass, ModelCorrespondence{"CIM_PrintJob.NumberUp"}: ToSubClass] uint32 MaxNumberUp;
	[read: ToSubClass] uint32 DefaultNumberUp;
	[read: ToSubClass, Units("Pixels per Inch"): ToSubClass, ModelCorrespondence{"CIM_PrintJob.HorizontalResolution"}: ToSubClass] uint32 HorizontalResolution;
	[read: ToSubClass, Units("Pixels per Inch"): ToSubClass, ModelCorrespondence{"CIM_PrintJob.HorizontalResolution"}: ToSubClass] uint32 VerticalResolution;
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, ModelCorrespondence{"CIM_PrintJob.CharSet"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.prtLocalizationCharacterSet"}: ToSubClass] string CharSetsSupported[];
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.CharSetsSupported"}: ToSubClass] string CurrentCharSet;
	[read: ToSubClass, ArrayType("Indexed"): ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.prtLocalizationLanguage"}: ToSubClass, ModelCorrespondence{"CIM_PrintJob.NaturalLanguage"}: ToSubClass] string NaturalLanguagesSupported[];
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.NaturalLanguagesSupported"}: ToSubClass] string CurrentNaturalLanguage;
	[read: ToSubClass, Units("KiloBytes"): ToSubClass, ModelCorrespondence{"CIM_PrintJob.JobSize"}: ToSubClass] uint32 MaxSizeSupported;
	[read: ToSubClass, ModelCorrespondence{"CIM_PrintJob.RequiredJobSheets"}: ToSubClass] string AvailableJobSheets[];
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.prtMarkerMarkTech"}: ToSubClass] uint16 MarkingTechnology;
};

//**************************************************************************
//* Class: Win32_Printer
//* Derived from: CIM_Printer
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4BC-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, SupportsCreate, CreateBy("AddPrinterDriver"), SupportsDelete, DeleteBy("DeleteInstance"), SupportsUpdate]
class Win32_Printer : CIM_Printer
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_4|sPrinterName"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|Attributes"}: ToSubClass] uint32 Attributes;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API"}: ToSubClass] boolean Queued;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API"}: ToSubClass] boolean Direct;
	[read: ToSubClass, MappingStrings{""}: ToSubClass] boolean Default;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean Shared;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean Network;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean Local;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean Hidden;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean EnableDevQueryPrint;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean KeepPrintedJobs;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean DoCompleteFirst;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean WorkOffline;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean EnableBIDI;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean RawOnly;
	[read: ToSubClass, write: ToSubClass, MappingStrings{""}: ToSubClass] boolean Published;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pDriverName"}: ToSubClass] string DriverName;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pComment"}: ToSubClass] string Comment;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pLocation"}: ToSubClass] string Location;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pParameters"}: ToSubClass] string Parameters;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DeviceCapabilities|DC_PAPERNAMES"}: ToSubClass] string PrinterPaperNames[];
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pPortName"}: ToSubClass] string PortName;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pDataType"}: ToSubClass] string PrintJobDataType;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_6|dwStatus"}: ToSubClass] uint32 PrinterState;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.hrPrinterStatus"}: ToSubClass] uint16 ExtendedPrinterStatus;
	[read: ToSubClass, ModelCorrespondence{"CIM_Printer.ErrorInformation"}: ToSubClass, MappingStrings{"MIB.IETF|Printer-MIB.hrPrinterDetectedErrorState"}: ToSubClass] uint16 ExtendedDetectedErrorState;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pSepFile"}: ToSubClass] string SeparatorFile;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pServerName"}: ToSubClass] string ServerName;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pShareName"}: ToSubClass] string ShareName;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|StartTime"}: ToSubClass] datetime StartTime;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|UntilTime"}: ToSubClass] datetime UntilTime;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|DefaultPriority"}: ToSubClass] uint32 DefaultPriority;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|DefaultPriority"}: ToSubClass] uint32 Priority;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|AveragePPM"}: ToSubClass] uint32 AveragePagesPerMinute;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|pPrintProcessor"}: ToSubClass] string PrintProcessor;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_2|Attributes"}: ToSubClass] boolean SpoolEnabled;
	[Implemented, ValueMap{"0", "5", ".."}: ToSubClass] uint32 Pause();
	[Implemented, ValueMap{"0", "5", ".."}: ToSubClass] uint32 Resume();
	[Implemented, ValueMap{"0", "5", ".."}: ToSubClass] uint32 CancelAllJobs();
	[Static, Implemented, ValueMap{"0", "5", "1801", "1930", ".."}: ToSubClass] uint32 AddPrinterConnection([In, MappingStrings{""}: ToSubClass] string Name);
	[Implemented, ValueMap{"0", "5", "1801", ".."}: ToSubClass] uint32 RenamePrinter([In, MappingStrings{""}: ToSubClass] string NewPrinterName);
	[Implemented, ValueMap{"0", "5", ".."}: ToSubClass] uint32 PrintTestPage();
	[Implemented, ValueMap{"0", ".."}: ToSubClass] uint32 SetDefaultPrinter();
};

//**************************************************************************
//* Class: CIM_PowerSupply
//* Derived from: CIM_LogicalDevice
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C547-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_PowerSupply : CIM_LogicalDevice
{
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.15"}: ToSubClass] uint16 ActiveInputVoltage;
	[read: ToSubClass] boolean IsSwitchingSupply;
	[Units("Hertz"): ToSubClass, read: ToSubClass] uint32 Range1InputFrequencyHigh;
	[Units("Hertz"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.17"}: ToSubClass, read: ToSubClass] uint32 Range1InputFrequencyLow;
	[Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.8"}: ToSubClass, read: ToSubClass] uint32 Range1InputVoltageHigh;
	[Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.7"}: ToSubClass, read: ToSubClass] uint32 Range1InputVoltageLow;
	[Units("Hertz"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.20"}: ToSubClass, read: ToSubClass] uint32 Range2InputFrequencyHigh;
	[Units("Hertz"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.19"}: ToSubClass, read: ToSubClass] uint32 Range2InputFrequencyLow;
	[Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.12"}: ToSubClass, read: ToSubClass] uint32 Range2InputVoltageHigh;
	[Units("Millivolts"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.11"}: ToSubClass, read: ToSubClass] uint32 Range2InputVoltageLow;
	[Units("Milliwatts"): ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.21"}: ToSubClass, read: ToSubClass] uint32 TotalOutputPower;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass, MappingStrings{"MIF.DMTF|Power Supply|002.16"}: ToSubClass] uint16 TypeOfRangeSwitching;
};

//**************************************************************************
//* Class: CIM_UninterruptiblePowerSupply
//* Derived from: CIM_PowerSupply
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C54F-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_UninterruptiblePowerSupply : CIM_PowerSupply
{
	[Units("Millivolts"): ToSubClass, read: ToSubClass, Override("Range1InputVoltageHigh")] uint32 Range1InputVoltageHigh = NULL;
	[Units("Millivolts"): ToSubClass, read: ToSubClass, Override("Range1InputVoltageLow")] uint32 Range1InputVoltageLow = NULL;
	[Units("Millivolts"): ToSubClass, read: ToSubClass, Override("Range2InputVoltageHigh")] uint32 Range2InputVoltageHigh = NULL;
	[Units("Millivolts"): ToSubClass, read: ToSubClass, Override("Range2InputVoltageLow")] uint32 Range2InputVoltageLow = NULL;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass, MappingStrings{"MIF.DMTF|UPS Battery|001.1"}: ToSubClass] uint16 RemainingCapacityStatus;
	[read: ToSubClass, Units("Seconds"): ToSubClass, MappingStrings{"MIF.DMTF|UPS Battery|001.2"}: ToSubClass] uint32 TimeOnBackup;
	[read: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"MIF.DMTF|UPS Battery|001.3"}: ToSubClass] uint32 EstimatedRunTime;
	[read: ToSubClass, Units("Percent"): ToSubClass, MappingStrings{"MIF.DMTF|UPS Battery|001.4"}: ToSubClass] uint16 EstimatedChargeRemaining;
};

//**************************************************************************
//* Class: Win32_UninterruptiblePowerSupply
//* Derived from: CIM_UninterruptiblePowerSupply
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4BD-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_UninterruptiblePowerSupply : CIM_UninterruptiblePowerSupply
{
	[read: ToSubClass, key, Override("DeviceId"): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceID = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|Options"}: ToSubClass] boolean BatteryInstalled;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|Options"}: ToSubClass] boolean CanTurnOffRemotely;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|CommandFile"}: ToSubClass] string CommandFile;
	[read: ToSubClass, Units("Seconds"): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|FirstMessageDelay"}: ToSubClass] uint32 FirstMessageDelay;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|Options"}: ToSubClass] boolean LowBatterySignal;
	[read: ToSubClass, Units("Seconds"): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|MessageInterval"}: ToSubClass] uint32 MessageInterval;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|Options"}: ToSubClass] boolean PowerFailSignal;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\UPS|Port"}: ToSubClass] string UPSPort;
};

//**************************************************************************
//* Class: CIM_Job
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C564-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Job : CIM_LogicalElement
{
	[read: ToSubClass] datetime ElapsedTime;
	[read: ToSubClass] string Notify;
	[read: ToSubClass] string Owner;
	[read: ToSubClass] uint32 Priority;
	[read: ToSubClass] datetime StartTime;
	[read: ToSubClass] string JobStatus;
	[read: ToSubClass] datetime TimeSubmitted;
	[read: ToSubClass] datetime UntilTime;
};

//**************************************************************************
//* Class: Win32_ScheduledJob
//* Derived from: CIM_Job
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E0-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, SupportsCreate, CreateBy("Create"), SupportsDelete, DeleteBy("Delete")]
class Win32_ScheduledJob : CIM_Job
{
	[read: ToSubClass, Override("StartTime"): ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobTime"}: ToSubClass] datetime StartTime = NULL;
	[read: ToSubClass, Override("JobStatus"): ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_ENUM|Flags|JOB_EXEC_ERROR"}: ToSubClass] string JobStatus = NULL;
	[read: ToSubClass, key, MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobId"}: ToSubClass] uint32 JobId;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|Command"}: ToSubClass] string Command;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_RUN_PERIODICALLY"}: ToSubClass] boolean RunRepeatedly;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_NONINTERACTIVE"}: ToSubClass] boolean InteractWithDesktop;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfWeek"}: ToSubClass] uint32 DaysOfWeek;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfMonth"}: ToSubClass] uint32 DaysOfMonth;
	[Constructor, Static: ToSubClass, Implemented, ValueMap{"0", "1", "2", "8", "9", "21", "22", ".."}: ToSubClass, MappingStrings{"Win32API|Network Management Functions|NetScheduleJobAdd"}: ToSubClass] uint32 Create([In, MappingStrings{"Win32API|Network Management Structures|AT_INFO|Command"}: ToSubClass] string Command, [In, MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobTime"}: ToSubClass] datetime StartTime, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_RUN_PERIODICALLY"}: ToSubClass] boolean RunRepeatedly, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfWeek"}: ToSubClass] uint32 DaysOfWeek, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfMonth"}: ToSubClass] uint32 DaysOfMonth, [In, Optional: ToSubClass, MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_NONINTERACTIVE"}: ToSubClass] boolean InteractWithDesktop, [Out, MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobId"}: ToSubClass] uint32 JobId);
	[Destructor, Implemented, ValueMap{"0", "1", "2", "8", "9", "21", "22", ".."}: ToSubClass, MappingStrings{"Win32API|Network Management Functions|NetScheduleJobDel"}: ToSubClass] uint32 Delete();
};

//**************************************************************************
//* Class: Win32_PrintJob
//* Derived from: CIM_Job
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsDelete, DeleteBy("DeleteInstance"), Locale(1033): ToInstance, UUID("{8502C4DF-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_PrintJob : CIM_Job
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|pPrinterName"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, Override("Notify"): ToSubClass] string Notify = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|pDatatype"}: ToSubClass] string DataType;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|pDocument"}: ToSubClass] string Document;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|pDriverName"}: ToSubClass] string DriverName;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|pMachineName"}: ToSubClass] string HostPrintQueue;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|JobId"}: ToSubClass] uint32 JobId;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|PagesPrinted"}: ToSubClass] uint32 PagesPrinted;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|pParameters "}: ToSubClass] string Parameters;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|pPrintProcessor"}: ToSubClass] string PrintProcessor;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|Size"}: ToSubClass] uint32 Size;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|Status"}: ToSubClass] uint32 StatusMask;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|JOB_INFO_2|TotalPages"}: ToSubClass] uint32 TotalPages;
	[Implemented, ValueMap{"0", "5", ".."}: ToSubClass] uint32 Pause();
	[Implemented, ValueMap{"0", "5", ".."}: ToSubClass] uint32 Resume();
};

//**************************************************************************
//* Class: Win32_NetworkConnection
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4CD-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NetworkConnection : CIM_LogicalElement
{
	[read: ToSubClass, key, Override("Name"): ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpComment"}: ToSubClass] string Comment;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|dwScope"}: ToSubClass, ValueMap{"Current Connection", "Persistent Connection"}: ToSubClass] string ConnectionType;
	[read: ToSubClass, MaxLen(20): ToSubClass, ValueMap{"Connected", "Error", "Paused", "Disconnected", "Connecting", "Reconnecting"}: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USE_INFO_1|ui1_status"}: ToSubClass] string ConnectionState;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|dwDisplayType"}: ToSubClass, ValueMap{"Domain", "Generic", "Server", "Share"}: ToSubClass] string DisplayType;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpLocalName"}: ToSubClass] string LocalName;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Functions|WNetEnumResource"}: ToSubClass] boolean Persistent;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpProvider"}: ToSubClass] string ProviderName;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpRemoteName"}: ToSubClass] string RemoteName;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpRemoteName"}: ToSubClass] string RemotePath;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|dwType"}: ToSubClass, ValueMap{"Disk", "Print", "Any"}: ToSubClass] string ResourceType;
	[read: ToSubClass, MappingStrings{"Win32API|Windows Networking Functions|WNetGetUser"}: ToSubClass] string UserName;
	[read: ToSubClass, Schema("Win32"): ToInstance, BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "16", "17", "18", "19", "20"}: ToSubClass] uint32 AccessMask;
};

//**************************************************************************
//* Class: CIM_Thread
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C571-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Thread : CIM_LogicalElement
{
	[read: ToSubClass, Propagated("CIM_Process.CSCreationClassName"): ToSubClass, Cim_Key: ToSubClass, MaxLen(256): ToSubClass] string CSCreationClassName;
	[read: ToSubClass, Propagated("CIM_Process.CSName"): ToSubClass, Cim_Key: ToSubClass, MaxLen(256): ToSubClass] string CSName;
	[read: ToSubClass, Propagated("CIM_Process.OSCreationClassName"): ToSubClass, Cim_Key: ToSubClass, MaxLen(256): ToSubClass] string OSCreationClassName;
	[read: ToSubClass, Propagated("CIM_Process.OSName"): ToSubClass, Cim_Key: ToSubClass, MaxLen(256): ToSubClass] string OSName;
	[read: ToSubClass, Propagated("CIM_Process.CreationClassName"): ToSubClass, Cim_Key: ToSubClass, MaxLen(256): ToSubClass] string ProcessCreationClassName;
	[read: ToSubClass, Propagated("CIM_Process.Handle"): ToSubClass, key, MaxLen(256): ToSubClass] string ProcessHandle;
	[read: ToSubClass, Cim_Key: ToSubClass, MaxLen(256): ToSubClass] string CreationClassName;
	[read: ToSubClass, key, MaxLen(256): ToSubClass] string Handle;
	[read: ToSubClass] uint32 Priority;
	[read: ToSubClass] uint16 ExecutionState;
	[read: ToSubClass, Units("MilliSeconds"): ToSubClass] uint64 UserModeTime;
	[read: ToSubClass, Units("MilliSeconds"): ToSubClass] uint64 KernelModeTime;
};

//**************************************************************************
//* Class: Win32_Thread
//* Derived from: CIM_Thread
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4DD-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Thread : CIM_Thread
{
	[read: ToSubClass, Propagated("CIM_Process.Handle"): ToSubClass, MaxLen(256): ToSubClass, Override("ProcessHandle"): ToSubClass, MappingStrings{"Win32API|Tool Help Structures|THREADENTRY32|th32OwnerProcessID"}: ToSubClass] string ProcessHandle = NULL;
	[read: ToSubClass, MaxLen(256): ToSubClass, Override("Handle"): ToSubClass, MappingStrings{"Win32API|Tool Help Structures|THREADENTRY32|th32ThreadID"}: ToSubClass] string Handle = NULL;
	[read: ToSubClass, Override("Priority"): ToSubClass, MappingStrings{"Win32API|Tool Help Structures|THREADENTRY32|tpDeltaPri"}: ToSubClass] uint32 Priority = NULL;
	[Units("100ns"): ToSubClass, Override("UserModeTime"), MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|UserTime"}: ToSubClass] uint64 UserModeTime = NULL;
	[Units("100ns"): ToSubClass, Override("KernelModeTime"), MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|PrivilegedTime"}: ToSubClass] uint64 KernelModeTime = NULL;
	[read: ToSubClass, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|PerfTime"}: ToSubClass] uint64 ElapsedTime;
	[read: ToSubClass, MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|PerfPriorityBase"}: ToSubClass] uint32 PriorityBase;
	[read: ToSubClass, MappingStrings{"WIn32API|Thread Object|LPTHREAD_START_ROUTINE|lpStartAddress"}: ToSubClass] uint32 StartAddress;
	[read: ToSubClass, MappingStrings{"Win32API|Thread State"}: ToSubClass] uint32 ThreadState;
	[read: ToSubClass, MappingStrings{"Win32API|Thread Wait Reason"}: ToSubClass] uint32 ThreadWaitReason;
};

//**************************************************************************
//* Class: Win32_IP4RouteTable
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, provider("RouteProvider"): ToInstance, SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance"), SupportsUpdate, Locale(1033): ToInstance, UUID("{ABEE8C61-A43F-4088-0081-9D00B3FF6545}"): ToInstance]
class Win32_IP4RouteTable : CIM_LogicalElement
{
	[read: ToSubClass, write: ToSubClass, key] string Destination;
	[read: ToSubClass, write: ToSubClass] string Mask;
	[read: ToSubClass, write: ToSubClass] sint32 InterfaceIndex;
	[key, read: ToSubClass, write: ToSubClass] string NextHop;
	[read: ToSubClass, write: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass] uint32 Type;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"}: ToSubClass] uint32 Protocol;
	[read: ToSubClass] uint32 Age;
	[read: ToSubClass, write: ToSubClass] sint32 Metric1;
	[read: ToSubClass, write: ToSubClass] sint32 Metric2;
	[read: ToSubClass, write: ToSubClass] sint32 Metric3;
	[read: ToSubClass, write: ToSubClass] sint32 Metric4;
	[read: ToSubClass, write: ToSubClass] sint32 Metric5;
	[read: ToSubClass] string Information;
};

//**************************************************************************
//* Class: CIM_LogicalFile
//* Derived from: CIM_LogicalElement
//**************************************************************************
[SupportsDelete, DeleteBy("DeleteInstance"), Abstract, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C559-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_LogicalFile : CIM_LogicalElement
{
	[read: ToSubClass, Override("Name"), key] string Name = NULL;
	[read: ToSubClass] uint64 InUseCount;
	[read: ToSubClass, Schema("Win32"): ToInstance] boolean Archive;
	[Propagated("CIM_FileSystem.CSCreationClassName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string CSCreationClassName;
	[Propagated("CIM_FileSystem.CSName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string CSName;
	[Schema("Win32"): ToInstance, read: ToSubClass] boolean Compressed;
	[CIM_Key: ToSubClass, read: ToSubClass] string CreationClassName;
	[read: ToSubClass] datetime CreationDate;
	[Schema("Win32"): ToInstance, read: ToSubClass] boolean Encrypted;
	[Propagated("CIM_FileSystem.CreationClassName"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string FSCreationClassName;
	[Propagated("CIM_FileSystem.Name"): ToSubClass, CIM_Key: ToSubClass, read: ToSubClass] string FSName;
	[read: ToSubClass] datetime LastAccessed;
	[read: ToSubClass] datetime LastModified;
	[read: ToSubClass] boolean Readable;
	[Units("Bytes"): ToSubClass, read: ToSubClass] uint64 FileSize;
	[read: ToSubClass] boolean Writeable;
	[read: ToSubClass, Schema("Win32"): ToInstance] boolean Hidden;
	[read: ToSubClass, Schema("Win32"): ToInstance] boolean System;
	[read: ToSubClass, Schema("Win32"): ToInstance] string FileType;
	[read: ToSubClass, Schema("Win32"): ToInstance] string EightDotThreeFileName;
	[read: ToSubClass] string CompressionMethod;
	[read: ToSubClass] string EncryptionMethod;
	[Fixed: ToSubClass, read: ToSubClass, Schema("Win32"): ToInstance] string Drive;
	[Fixed: ToSubClass, read: ToSubClass, Schema("Win32"): ToInstance] string Path;
	[Fixed: ToSubClass, read: ToSubClass, Schema("Win32"): ToInstance] string FileName;
	[Fixed: ToSubClass, read: ToSubClass, Schema("Win32"): ToInstance] string Extension;
	[read: ToSubClass, Schema("Win32"): ToInstance, BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "16", "17", "18", "19", "20"}: ToSubClass] uint32 AccessMask;
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 TakeOwnerShip();
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 ChangeSecurityPermissions([In] Win32_SecurityDescriptor SecurityDescriptor, [In, BitMap{"0", "1", "2", "3"}: ToSubClass] uint32 Option);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 Copy([In] string FileName);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 Rename([In] string FileName);
	[Destructor, Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 Delete();
	[Implemented, Schema("Win32"): ToInstance, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass] uint32 Compress();
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 Uncompress();
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 TakeOwnerShipEx([Out] string StopFileName, [In, optional] string StartFileName, [In, optional] boolean Recursive);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 ChangeSecurityPermissionsEx([in] Win32_SecurityDescriptor SecurityDescriptor, [In, BitMap{"0", "1", "2", "3"}: ToSubClass] uint32 Option, [Out] string StopFileName, [In, optional] string StartFileName, [In, optional] boolean Recursive);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 CopyEx([In] string FileName, [Out] string StopFileName, [In, optional] string StartFileName, [In, optional] boolean Recursive);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 DeleteEx([Out] string StopFileName, [In, optional] string StartFileName);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 CompressEx([Out] string StopFileName, [In, optional] string StartFileName, [In, optional] boolean Recursive);
	[Implemented, ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"}: ToSubClass, Schema("Win32"): ToInstance] uint32 UncompressEx([Out] string StopFileName, [In, optional] string StartFileName, [In, optional] boolean Recursive);
	[Privileges{"SeSecurityPrivilege"}: ToSubClass, Implemented, Schema("Win32"): ToInstance] boolean GetEffectivePermission([In, BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "16", "17", "18", "19", "20"}: ToSubClass] uint32 Permissions);
};

//**************************************************************************
//* Class: CIM_DeviceFile
//* Derived from: CIM_LogicalFile
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{4333BD60-E3D1-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_DeviceFile : CIM_LogicalFile
{
};

//**************************************************************************
//* Class: CIM_Directory
//* Derived from: CIM_LogicalFile
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C55F-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Directory : CIM_LogicalFile
{
};

//**************************************************************************
//* Class: Win32_Directory
//* Derived from: CIM_Directory
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4C7-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Directory : CIM_Directory
{
};

//**************************************************************************
//* Class: CIM_DataFile
//* Derived from: CIM_LogicalFile
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C55A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_DataFile : CIM_LogicalFile
{
	[read: ToSubClass, Schema("Win32"): ToInstance] string Version;
	[read: ToSubClass, Schema("Win32"): ToInstance] string Manufacturer;
};

//**************************************************************************
//* Class: Win32_ShortcutFile
//* Derived from: CIM_DataFile
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{F25FE466-783E-11d2-90BF-0060081A46FD}"): ToInstance]
class Win32_ShortcutFile : CIM_DataFile
{
	[read: ToSubClass, MappingStrings{"Win32API|_beginthreadex"}: ToSubClass] string Target;
};

//**************************************************************************
//* Class: Win32_CodecFile
//* Derived from: CIM_DataFile
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4C3-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_CodecFile : CIM_DataFile
{
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\control\\MediaResources\\icm|Description"}: ToSubClass] string Description = NULL;
	[read: ToSubClass, MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\drivers.desc"}: ToSubClass] string Group;
};

//**************************************************************************
//* Class: Win32_NTEventlogFile
//* Derived from: CIM_DataFile
//**************************************************************************
[dynamic: ToInstance, provider("MS_NT_EVENTLOG_PROVIDER"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C57B-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NTEventlogFile : CIM_DataFile
{
	[Fixed: ToSubClass, read: ToSubClass] string LogfileName;
	[read: ToSubClass, write: ToSubClass] uint32 MaxFileSize;
	[read: ToSubClass] uint32 NumberOfRecords;
	[read: ToSubClass, volatile: ToSubClass, ValueMap{"0", "1..365", "4294967295"}: ToSubClass] string OverWritePolicy;
	[read: ToSubClass, write: ToSubClass, Units("Days"): ToSubClass, Range("0-365 | 4294967295"): ToSubClass] uint32 OverwriteOutDated;
	[read: ToSubClass] string Sources[];
	[ValueMap{"0", "8", "21", ".."}: ToSubClass, implemented, Privileges{"SeSecurityPrivilege", "SeBackupPrivilege"}: ToSubClass] uint32 ClearEventlog([in] string ArchiveFileName);
	[ValueMap{"0", "8", "21", "183", ".."}: ToSubClass, implemented, Privileges{"SeSecurityPrivilege", "SeBackupPrivilege"}: ToSubClass] uint32 BackupEventlog([in] string ArchiveFileName);
};

//**************************************************************************
//* Class: Win32_PageFile
//* Derived from: CIM_DataFile
//**************************************************************************
[DEPRECATED: ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Privileges{"SeCreatePagefileNamePrivilege"}: ToSubClass, Locale(1033): ToInstance, UUID("{8502C4C6-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance"), SupportsUpdate]
class Win32_PageFile : CIM_DataFile
{
	[read: ToSubClass, DEPRECATED: ToSubClass, Override("Name"): ToSubClass, MappingStrings{"Win32DLL|NTDLL.DLL|NtQuerySystemInformation|SystemPageFileInformation|PageFileName"}: ToSubClass] string Name = NULL;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Megabytes"): ToSubClass, MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUS|dwAvailPageFile"}: ToSubClass] uint32 FreeSpace;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Megabytes"): ToSubClass, MappingStrings{"Win32Regstry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|PagingFiles"}: ToSubClass] uint32 InitialSize;
	[DEPRECATED: ToSubClass, read: ToSubClass, units("Megabytes"): ToSubClass, MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUS|dwTotalPageFile"}: ToSubClass] uint32 MaximumSize;
};

//**************************************************************************
//* Class: Win32_ProgramGroupOrItem
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{86E30E86-7DB2-11d2-90CB-0060081A46FD}"): ToInstance]
class Win32_ProgramGroupOrItem : CIM_LogicalElement
{
};

//**************************************************************************
//* Class: Win32_LogicalProgramGroupItem
//* Derived from: Win32_ProgramGroupOrItem
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{86E30E82-7DB2-11d2-90CB-0060081A46FD}"): ToInstance]
class Win32_LogicalProgramGroupItem : Win32_ProgramGroupOrItem
{
	[read: ToSubClass, Override("Name"): ToSubClass, key, MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"}: ToSubClass] string Name = NULL;
};

//**************************************************************************
//* Class: Win32_LogicalProgramGroup
//* Derived from: Win32_ProgramGroupOrItem
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{D52706F2-8045-11d2-90CE-0060081A46FD}"): ToInstance]
class Win32_LogicalProgramGroup : Win32_ProgramGroupOrItem
{
	[read: ToSubClass, Override("Name"): ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"}: ToSubClass] string GroupName;
	[read: ToSubClass, MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"}: ToSubClass] string UserName;
};

//**************************************************************************
//* Class: Win32_Account
//* Derived from: CIM_LogicalElement
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C4C9-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Account : CIM_LogicalElement
{
	[read: ToSubClass, Override("Name"): ToSubClass, key, MappingStrings{"Win32API|Network Management Structures|name"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, key, MappingStrings{"Win32API|Network Management Functions|Domain"}: ToSubClass] string Domain;
	[Fixed: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Security Identifiers (SIDs)"}: ToSubClass] string SID;
	[Fixed: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Access Control Enumeration Types|SID_NAME_USE"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9"}: ToSubClass] uint8 SIDType;
	[Fixed: ToSubClass] Boolean LocalAccount;
};

//**************************************************************************
//* Class: Win32_UserAccount
//* Derived from: Win32_Account
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4CC-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_UserAccount : Win32_Account
{
	[read: ToSubClass, Override("Name"): ToSubClass, MappingStrings{"Win32API|Network Management Structures|name"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Functions|domainname"}: ToSubClass, Override("Domain"): ToSubClass] string Domain = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|usri2_flags"}: ToSubClass, BitMap{"8", "9", "11", "12", "13"}: ToSubClass] uint32 AccountType;
	[write: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO|UF_ACCOUNTDISABLE"}: ToSubClass] boolean Disabled;
	[write: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|usri2_full_name"}: ToSubClass] string FullName;
	[write: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_LOCKOUT"}: ToSubClass] boolean Lockout;
	[write: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_PASSWD_CANT_CHANGE"}: ToSubClass] boolean PasswordChangeable;
	[write: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_DONT_EXPIRE_PASSWD"}: ToSubClass] boolean PasswordExpires;
	[write: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_PASSWD_NOTREQD"}: ToSubClass] boolean PasswordRequired;
	[Implemented, MappingStrings{"WMI"}: ToSubClass] uint32 Rename([In, MappingStrings{"Win32API|Network Management Structures|name"}: ToSubClass] string Name);
};

//**************************************************************************
//* Class: Win32_SystemAccount
//* Derived from: Win32_Account
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4CA-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemAccount : Win32_Account
{
	[read: ToSubClass, Override("Name"): ToSubClass, MappingStrings{"Win32API|Network Management Structures|name"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Functions|domainname"}: ToSubClass, Override("Domain"): ToSubClass] string Domain = NULL;
};

//**************************************************************************
//* Class: Win32_Group
//* Derived from: Win32_Account
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4CB-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Group : Win32_Account
{
	[read: ToSubClass, Override("Name"): ToSubClass, MappingStrings{"Win32API|Network Management Structures|name"}: ToSubClass] string Name = NULL;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Functions|domainname"}: ToSubClass, Override("Domain"): ToSubClass] string Domain = NULL;
	[Implemented, MappingStrings{"WMI"}: ToSubClass] uint32 Rename([In, MappingStrings{"Win32API|Network Management Structures|name"}: ToSubClass] string Name);
};

//**************************************************************************
//* Class: Win32_Terminal
//* Derived from: CIM_LogicalElement
//**************************************************************************
[dynamic: ToInstance, overwrite, provider("Win32_WIN32_TERMINAL_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_Terminal : CIM_LogicalElement
{
	[key, read] string TerminalName;
	[read] uint32 fEnableTerminal;
	[Implemented] uint32 Enable([In] uint32 fEnableTerminal);
	[Implemented] uint32 Rename([In] string NewTerminalName);
};

//**************************************************************************
//* Class: Win32_ProtocolBinding
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, Association: DisableOverride ToInstance ToSubClass, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C509-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_ProtocolBinding
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_NetworkProtocol"}: ToSubClass] Win32_NetworkProtocol ref Antecedent;
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_NetworkAdapter"}: ToSubClass] Win32_NetworkAdapter ref Device;
	[read: ToSubClass, MappingStrings{"WMI|Win32_SystemDriver"}: ToSubClass] Win32_SystemDriver ref Dependent;
};

//**************************************************************************
//* Class: Win32_SecuritySettingAccess
//* Derived from: 
//**************************************************************************
[abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{8502C587-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySettingAccess
{
	[key, read: ToSubClass] Win32_SecuritySetting ref SecuritySetting;
	[key, read: ToSubClass] Win32_SID ref Trustee;
	[read: ToSubClass] uint32 Type;
	[read: ToSubClass] uint32 Inheritance;
	[read: ToSubClass] uint32 AccessMask;
	[read: ToSubClass] string GuidObjectType;
	[read: ToSubClass] string GuidInheritedObjectType;
};

//**************************************************************************
//* Class: Win32_LogicalShareAccess
//* Derived from: Win32_SecuritySettingAccess
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C593-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalShareAccess : Win32_SecuritySettingAccess
{
	[read: ToSubClass, Override("SecuritySetting"): ToSubClass] Win32_LogicalShareSecuritySetting ref SecuritySetting = NULL;
	[read: ToSubClass, Override("Trustee"): ToSubClass] Win32_SID ref Trustee = NULL;
};

//**************************************************************************
//* Class: Win32_LogicalFileAccess
//* Derived from: Win32_SecuritySettingAccess
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C590-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalFileAccess : Win32_SecuritySettingAccess
{
	[Override("SecuritySetting"): ToSubClass] Win32_LogicalFileSecuritySetting ref SecuritySetting = NULL;
	[Override("Trustee"): ToSubClass] Win32_SID ref Trustee = NULL;
};

//**************************************************************************
//* Class: CIM_PhysicalCapacity
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B69-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalCapacity
{
	[read: ToSubClass, MaxLen(256): ToSubClass] string Name;
	[read: ToSubClass, MaxLen(64): ToSubClass] string Caption;
	[read: ToSubClass] string Description;
};

//**************************************************************************
//* Class: CIM_MemoryCapacity
//* Derived from: CIM_PhysicalCapacity
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B6B-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_MemoryCapacity : CIM_PhysicalCapacity
{
	[read: ToSubClass, Override("Name"), key] string Name = NULL;
	[key, read: ToSubClass, ModelCorrespondence{"CIM_PhysicalMemory.MemoryType"}: ToSubClass] uint16 MemoryType;
	[Units("KiloBytes"): ToSubClass, read: ToSubClass] uint64 MinimumMemoryCapacity;
	[Units("KiloBytes"): ToSubClass, read: ToSubClass] uint64 MaximumMemoryCapacity;
};

//**************************************************************************
//* Class: Win32_SecuritySettingGroup
//* Derived from: 
//**************************************************************************
[abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{8502C586-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySettingGroup
{
	[key, read: ToSubClass] Win32_SecuritySetting ref SecuritySetting;
	[key, read: ToSubClass] Win32_SID ref Group;
};

//**************************************************************************
//* Class: Win32_LogicalFileGroup
//* Derived from: Win32_SecuritySettingGroup
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C58F-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalFileGroup : Win32_SecuritySettingGroup
{
	[Override("SecuritySetting"): ToSubClass] Win32_LogicalFileSecuritySetting ref SecuritySetting = NULL;
	[Override("Group"): ToSubClass] Win32_SID ref Group = NULL;
};

//**************************************************************************
//* Class: CIM_StatisticalInformation
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{956597A1-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_StatisticalInformation
{
	[read: ToSubClass, MaxLen(256): ToSubClass] string Name;
	[read: ToSubClass] string Description;
	[read: ToSubClass, MaxLen(64): ToSubClass] string Caption;
};

//**************************************************************************
//* Class: Win32_NamedJobObjectActgInfo
//* Derived from: CIM_StatisticalInformation
//**************************************************************************
[dynamic: ToInstance, provider("NamedJobObjectActgInfoProv"): ToInstance, Locale(1033): ToInstance, UUID("{486F2A44-D0BF-46c1-9543-68EF5D37F1F9}"): ToInstance]
class Win32_NamedJobObjectActgInfo : CIM_StatisticalInformation
{
	[read: ToSubClass, MaxLen(256): ToSubClass, key, Override("Name")] string Name = NULL;
	[read: ToSubClass, Units("100ns"): ToSubClass] uint64 TotalUserTime;
	[read: ToSubClass, Units("100ns"): ToSubClass] uint64 TotalKernelTime;
	[read: ToSubClass, Units("100ns"): ToSubClass] uint64 ThisPeriodTotalUserTime;
	[read: ToSubClass, Units("100ns"): ToSubClass] uint64 ThisPeriodTotalKernelTime;
	[read: ToSubClass] uint32 TotalPageFaultCount;
	[read: ToSubClass] uint32 TotalProcesses;
	[read: ToSubClass] uint32 ActiveProcesses;
	[read: ToSubClass] uint32 TotalTerminatedProcesses;
	[read: ToSubClass] uint64 ReadOperationCount;
	[read: ToSubClass] uint64 WriteOperationCount;
	[read: ToSubClass] uint64 OtherOperationCount;
	[read: ToSubClass] uint64 ReadTransferCount;
	[read: ToSubClass] uint64 WriteTransferCount;
	[read: ToSubClass] uint64 OtherTransferCount;
	[read: ToSubClass, Units("KB"): ToSubClass] uint32 PeakProcessMemoryUsed;
	[read: ToSubClass, Units("KB"): ToSubClass] uint32 PeakJobMemoryUsed;
};

//**************************************************************************
//* Class: CIM_DeviceErrorCounts
//* Derived from: CIM_StatisticalInformation
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{117FDB8C-D025-11d2-85F5-0000F8102E5F}"): ToInstance]
class CIM_DeviceErrorCounts : CIM_StatisticalInformation
{
	[read: ToSubClass, MaxLen(256): ToSubClass, Override("Name"), key] string Name = NULL;
	[read: ToSubClass, Propagated("CIM_LogicalDevice.SystemCreationClassName"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass] string SystemCreationClassName;
	[read: ToSubClass, Propagated("CIM_LogicalDevice.SystemName"): ToSubClass, CIM_Key: ToSubClass, MaxLen(256): ToSubClass] string SystemName;
	[read: ToSubClass, Propagated("CIM_LogicalDevice.CreationClassName"): ToSubClass, key, MaxLen(256): ToSubClass] string DeviceCreationClassName;
	[read: ToSubClass, Propagated("CIM_LogicalDevice.DeviceID"): ToSubClass, key, MaxLen(64): ToSubClass] string DeviceID;
	[read: ToSubClass] uint64 IndeterminateErrorCount;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Operational State|003.7"}: ToSubClass] uint64 CriticalErrorCount;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Operational State|003.8"}: ToSubClass] uint64 MajorErrorCount;
	[read: ToSubClass] uint64 MinorErrorCount;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Operational State|003.9"}: ToSubClass] uint64 WarningCount;
	 uint32 ResetCounter([IN] uint16 SelectedCounter);
};

//**************************************************************************
//* Class: Win32_Perf
//* Derived from: CIM_StatisticalInformation
//**************************************************************************
[abstract, Locale(1033)]
class Win32_Perf : CIM_StatisticalInformation
{
	uint64 Frequency_PerfTime;
	uint64 Timestamp_PerfTime;
	uint64 Timestamp_Sys100NS;
	uint64 Frequency_Sys100NS;
	uint64 Frequency_Object;
	uint64 Timestamp_Object;
};

//**************************************************************************
//* Class: Win32_PerfRawData
//* Derived from: Win32_Perf
//**************************************************************************
[abstract, Locale(1033)]
class Win32_PerfRawData : Win32_Perf
{
};

//**************************************************************************
//* Class: Win32_PerfRawData_RSVP_RSVPInterfaces
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("RSVP"): ToInstance, locale(1033): ToInstance, perfindex(1872): ToInstance, helpindex(1873): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_RSVP_RSVPInterfaces : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("Signaling bytes received"): ToInstance, countertype(65536): ToInstance, perfindex(1874): ToInstance, helpindex(1875): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 Signalingbytesreceived;
	[DisplayName("Signaling bytes sent"): ToInstance, countertype(65536): ToInstance, perfindex(1876): ToInstance, helpindex(1877): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 Signalingbytessent;
	[DisplayName("PATH messages received"): ToInstance, countertype(65536): ToInstance, perfindex(1878): ToInstance, helpindex(1879): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 PATHmessagesreceived;
	[DisplayName("RESV messages received"): ToInstance, countertype(65536): ToInstance, perfindex(1880): ToInstance, helpindex(1881): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 RESVmessagesreceived;
	[DisplayName("PATH ERR messages received"): ToInstance, countertype(65536): ToInstance, perfindex(1882): ToInstance, helpindex(1883): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 PATHERRmessagesreceived;
	[DisplayName("RESV ERR messages received"): ToInstance, countertype(65536): ToInstance, perfindex(1884): ToInstance, helpindex(1885): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 RESVERRmessagesreceived;
	[DisplayName("PATH TEAR messages received"): ToInstance, countertype(65536): ToInstance, perfindex(1886): ToInstance, helpindex(1887): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 PATHTEARmessagesreceived;
	[DisplayName("RESV TEAR messages received"): ToInstance, countertype(65536): ToInstance, perfindex(1888): ToInstance, helpindex(1889): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 RESVTEARmessagesreceived;
	[DisplayName("RESV CONFIRM messages received"): ToInstance, countertype(65536): ToInstance, perfindex(1890): ToInstance, helpindex(1891): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 RESVCONFIRMmessagesreceived;
	[DisplayName("PATH messages sent"): ToInstance, countertype(65536): ToInstance, perfindex(1892): ToInstance, helpindex(1893): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 PATHmessagessent;
	[DisplayName("RESV messages sent"): ToInstance, countertype(65536): ToInstance, perfindex(1894): ToInstance, helpindex(1895): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 RESVmessagessent;
	[DisplayName("PATH ERR messages sent"): ToInstance, countertype(65536): ToInstance, perfindex(1896): ToInstance, helpindex(1897): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 PATHERRmessagessent;
	[DisplayName("RESV ERR messages sent"): ToInstance, countertype(65536): ToInstance, perfindex(1898): ToInstance, helpindex(1899): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 RESVERRmessagessent;
	[DisplayName("PATH TEAR messages sent"): ToInstance, countertype(65536): ToInstance, perfindex(1900): ToInstance, helpindex(1901): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 PATHTEARmessagessent;
	[DisplayName("RESV TEAR messages sent"): ToInstance, countertype(65536): ToInstance, perfindex(1902): ToInstance, helpindex(1903): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 RESVTEARmessagessent;
	[DisplayName("RESV CONFIRM messages sent"): ToInstance, countertype(65536): ToInstance, perfindex(1904): ToInstance, helpindex(1905): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 RESVCONFIRMmessagessent;
	[DisplayName("Resource control failures"): ToInstance, countertype(65536): ToInstance, perfindex(1906): ToInstance, helpindex(1907): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 Resourcecontrolfailures;
	[DisplayName("Policy control failures"): ToInstance, countertype(65536): ToInstance, perfindex(1908): ToInstance, helpindex(1909): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 Policycontrolfailures;
	[DisplayName("General failures"): ToInstance, countertype(65536): ToInstance, perfindex(1910): ToInstance, helpindex(1911): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 Generalfailures;
	[DisplayName("Blocked RESVs"): ToInstance, countertype(65536): ToInstance, perfindex(1912): ToInstance, helpindex(1913): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 BlockedRESVs;
	[DisplayName("RESV state block timeouts"): ToInstance, countertype(65536): ToInstance, perfindex(1914): ToInstance, helpindex(1915): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 RESVstateblocktimeouts;
	[DisplayName("PATH state block timeouts"): ToInstance, countertype(65536): ToInstance, perfindex(1916): ToInstance, helpindex(1917): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 PATHstateblocktimeouts;
	[DisplayName("Send messages errors - Big messages"): ToInstance, countertype(65536): ToInstance, perfindex(1918): ToInstance, helpindex(1919): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 SendmessageserrorsBigmessages;
	[DisplayName("Receive messages errors - Big messages"): ToInstance, countertype(65536): ToInstance, perfindex(1920): ToInstance, helpindex(1921): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ReceivemessageserrorsBigmessages;
	[DisplayName("Send messages errors - No memory"): ToInstance, countertype(65536): ToInstance, perfindex(1922): ToInstance, helpindex(1923): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 SendmessageserrorsNomemory;
	[DisplayName("Receive messages errors - No memory"): ToInstance, countertype(65536): ToInstance, perfindex(1924): ToInstance, helpindex(1925): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ReceivemessageserrorsNomemory;
	[DisplayName("Number of incoming messages dropped"): ToInstance, countertype(65536): ToInstance, perfindex(1926): ToInstance, helpindex(1927): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Numberofincomingmessagesdropped;
	[DisplayName("Number of outgoing messages dropped"): ToInstance, countertype(65536): ToInstance, perfindex(1928): ToInstance, helpindex(1929): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Numberofoutgoingmessagesdropped;
	[DisplayName("Number of active flows"): ToInstance, countertype(65536): ToInstance, perfindex(1930): ToInstance, helpindex(1931): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Numberofactiveflows;
	[DisplayName("Reserved bandwidth"): ToInstance, countertype(65536): ToInstance, perfindex(1932): ToInstance, helpindex(1933): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 Reservedbandwidth;
	[DisplayName("Maximum admitted bandwidth"): ToInstance, countertype(65536): ToInstance, perfindex(1934): ToInstance, helpindex(1935): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 Maximumadmittedbandwidth;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfDisk_LogicalDisk
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfDisk"): ToInstance, locale(1033): ToInstance, perfindex(236): ToInstance, helpindex(237): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfDisk_LogicalDisk : Win32_PerfRawData
{
	[key] string Name = NULL;
	[DisplayName("% Free Space"): ToInstance, countertype(537003008): ToInstance, perfindex(408): ToInstance, helpindex(409): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 PercentFreeSpace;
	[DisplayName(""): ToInstance, countertype(1073939459): ToInstance, perfindex(408): ToInstance, helpindex(409): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 PercentFreeSpace_Base;
	[DisplayName("Free Megabytes"): ToInstance, countertype(65536): ToInstance, perfindex(410): ToInstance, helpindex(411): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FreeMegabytes;
	[DisplayName("Current Disk Queue Length"): ToInstance, countertype(65536): ToInstance, perfindex(198): ToInstance, helpindex(199): ToInstance, defaultscale(1): ToInstance, perfdetail(100): ToInstance] uint32 CurrentDiskQueueLength;
	[DisplayName("% Disk Time"): ToInstance, countertype(542573824): ToInstance, perfindex(200): ToInstance, helpindex(201): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskTime;
	[perfdefault: ToInstance, DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(200): ToInstance, helpindex(201): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskTime_Base;
	[DisplayName("Avg. Disk Queue Length"): ToInstance, countertype(5571840): ToInstance, perfindex(1400): ToInstance, helpindex(1401): ToInstance, defaultscale(2): ToInstance, perfdetail(100): ToInstance] uint64 AvgDiskQueueLength;
	[DisplayName("% Disk Read Time"): ToInstance, countertype(542573824): ToInstance, perfindex(202): ToInstance, helpindex(203): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskReadTime;
	[DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(202): ToInstance, helpindex(203): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskReadTime_Base;
	[DisplayName("Avg. Disk Read Queue Length"): ToInstance, countertype(5571840): ToInstance, perfindex(1402): ToInstance, helpindex(1403): ToInstance, defaultscale(2): ToInstance, perfdetail(100): ToInstance] uint64 AvgDiskReadQueueLength;
	[DisplayName("% Disk Write Time"): ToInstance, countertype(542573824): ToInstance, perfindex(204): ToInstance, helpindex(205): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskWriteTime;
	[DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(204): ToInstance, helpindex(205): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskWriteTime_Base;
	[DisplayName("Avg. Disk Write Queue Length"): ToInstance, countertype(5571840): ToInstance, perfindex(1404): ToInstance, helpindex(1405): ToInstance, defaultscale(2): ToInstance, perfdetail(100): ToInstance] uint64 AvgDiskWriteQueueLength;
	[DisplayName("Avg. Disk sec/Transfer"): ToInstance, countertype(805438464): ToInstance, perfindex(206): ToInstance, helpindex(207): ToInstance, defaultscale(3): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerTransfer;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(206): ToInstance, helpindex(207): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerTransfer_Base;
	[DisplayName("Avg. Disk sec/Read"): ToInstance, countertype(805438464): ToInstance, perfindex(208): ToInstance, helpindex(209): ToInstance, defaultscale(3): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerRead;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(208): ToInstance, helpindex(209): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerRead_Base;
	[DisplayName("Avg. Disk sec/Write"): ToInstance, countertype(805438464): ToInstance, perfindex(210): ToInstance, helpindex(211): ToInstance, defaultscale(3): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerWrite;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(210): ToInstance, helpindex(211): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerWrite_Base;
	[DisplayName("Disk Transfers/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(212): ToInstance, helpindex(213): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 DiskTransfersPersec;
	[DisplayName("Disk Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(214): ToInstance, helpindex(215): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 DiskReadsPersec;
	[DisplayName("Disk Writes/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(216): ToInstance, helpindex(217): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 DiskWritesPersec;
	[DisplayName("Disk Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(218): ToInstance, helpindex(219): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 DiskBytesPersec;
	[DisplayName("Disk Read Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(220): ToInstance, helpindex(221): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 DiskReadBytesPersec;
	[DisplayName("Disk Write Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(222): ToInstance, helpindex(223): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 DiskWriteBytesPersec;
	[DisplayName("Avg. Disk Bytes/Transfer"): ToInstance, countertype(1073874176): ToInstance, perfindex(224): ToInstance, helpindex(225): ToInstance, defaultscale(-2): ToInstance, perfdetail(300): ToInstance] uint64 AvgDiskBytesPerTransfer;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(224): ToInstance, helpindex(225): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 AvgDiskBytesPerTransfer_Base;
	[DisplayName("Avg. Disk Bytes/Read"): ToInstance, countertype(1073874176): ToInstance, perfindex(226): ToInstance, helpindex(227): ToInstance, defaultscale(-2): ToInstance, perfdetail(300): ToInstance] uint64 AvgDiskBytesPerRead;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(226): ToInstance, helpindex(227): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 AvgDiskBytesPerRead_Base;
	[DisplayName("Avg. Disk Bytes/Write"): ToInstance, countertype(1073874176): ToInstance, perfindex(228): ToInstance, helpindex(229): ToInstance, defaultscale(-2): ToInstance, perfdetail(300): ToInstance] uint64 AvgDiskBytesPerWrite;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(228): ToInstance, helpindex(229): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 AvgDiskBytesPerWrite_Base;
	[DisplayName("% Idle Time"): ToInstance, countertype(542573824): ToInstance, perfindex(1482): ToInstance, helpindex(1483): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentIdleTime;
	[DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(1482): ToInstance, helpindex(1483): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentIdleTime_Base;
	[DisplayName("Split IO/Sec"): ToInstance, countertype(272696320): ToInstance, perfindex(1484): ToInstance, helpindex(1485): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SplitIOPerSec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfNet_Redirector
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfNet"): ToInstance, locale(1033): ToInstance, perfindex(262): ToInstance, helpindex(263): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_PerfNet_Redirector : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Bytes Total/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(388): ToInstance, helpindex(389): ToInstance, defaultscale(-4): ToInstance, perfdetail(100): ToInstance] uint64 BytesTotalPersec;
	[DisplayName("File Data Operations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(406): ToInstance, helpindex(391): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FileDataOperationsPersec;
	[DisplayName("Packets/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(400): ToInstance, helpindex(401): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint64 PacketsPersec;
	[DisplayName("Bytes Received/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(264): ToInstance, helpindex(265): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesReceivedPersec;
	[DisplayName("Packets Received/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(266): ToInstance, helpindex(267): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint64 PacketsReceivedPersec;
	[DisplayName("Read Bytes Paging/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(268): ToInstance, helpindex(269): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 ReadBytesPagingPersec;
	[DisplayName("Read Bytes Non-Paging/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(270): ToInstance, helpindex(271): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 ReadBytesNonPagingPersec;
	[DisplayName("Read Bytes Cache/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(272): ToInstance, helpindex(273): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 ReadBytesCachePersec;
	[DisplayName("Read Bytes Network/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(274): ToInstance, helpindex(275): ToInstance, defaultscale(-4): ToInstance, perfdetail(100): ToInstance] uint64 ReadBytesNetworkPersec;
	[DisplayName("Bytes Transmitted/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(276): ToInstance, helpindex(277): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesTransmittedPersec;
	[DisplayName("Packets Transmitted/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(278): ToInstance, helpindex(279): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint64 PacketsTransmittedPersec;
	[DisplayName("Write Bytes Paging/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(280): ToInstance, helpindex(281): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 WriteBytesPagingPersec;
	[DisplayName("Write Bytes Non-Paging/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(282): ToInstance, helpindex(283): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 WriteBytesNonPagingPersec;
	[DisplayName("Write Bytes Cache/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(284): ToInstance, helpindex(285): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 WriteBytesCachePersec;
	[DisplayName("Write Bytes Network/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(286): ToInstance, helpindex(287): ToInstance, defaultscale(-4): ToInstance, perfdetail(100): ToInstance] uint64 WriteBytesNetworkPersec;
	[DisplayName("File Read Operations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(10): ToInstance, helpindex(289): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FileReadOperationsPersec;
	[DisplayName("Read Operations Random/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(290): ToInstance, helpindex(291): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 ReadOperationsRandomPersec;
	[DisplayName("Read Packets/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(292): ToInstance, helpindex(293): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 ReadPacketsPersec;
	[DisplayName("Reads Large/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(294): ToInstance, helpindex(295): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 ReadsLargePersec;
	[DisplayName("Read Packets Small/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(296): ToInstance, helpindex(297): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 ReadPacketsSmallPersec;
	[DisplayName("File Write Operations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(12): ToInstance, helpindex(299): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FileWriteOperationsPersec;
	[DisplayName("Write Operations Random/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(300): ToInstance, helpindex(301): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 WriteOperationsRandomPersec;
	[DisplayName("Write Packets/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(302): ToInstance, helpindex(303): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 WritePacketsPersec;
	[DisplayName("Writes Large/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(304): ToInstance, helpindex(305): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 WritesLargePersec;
	[DisplayName("Write Packets Small/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(306): ToInstance, helpindex(307): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 WritePacketsSmallPersec;
	[DisplayName("Reads Denied/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(308): ToInstance, helpindex(309): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ReadsDeniedPersec;
	[DisplayName("Writes Denied/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(310): ToInstance, helpindex(311): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 WritesDeniedPersec;
	[DisplayName("Network Errors/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(312): ToInstance, helpindex(313): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 NetworkErrorsPersec;
	[DisplayName("Server Sessions"): ToInstance, countertype(65536): ToInstance, perfindex(314): ToInstance, helpindex(315): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ServerSessions;
	[DisplayName("Server Reconnects"): ToInstance, countertype(65536): ToInstance, perfindex(316): ToInstance, helpindex(317): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ServerReconnects;
	[DisplayName("Connects Core"): ToInstance, countertype(65536): ToInstance, perfindex(318): ToInstance, helpindex(319): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectsCore;
	[DisplayName("Connects Lan Manager 2.0"): ToInstance, countertype(65536): ToInstance, perfindex(320): ToInstance, helpindex(321): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectsLanManager20;
	[DisplayName("Connects Lan Manager 2.1"): ToInstance, countertype(65536): ToInstance, perfindex(322): ToInstance, helpindex(323): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectsLanManager21;
	[DisplayName("Connects Windows NT"): ToInstance, countertype(65536): ToInstance, perfindex(324): ToInstance, helpindex(325): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectsWindowsNT;
	[DisplayName("Server Disconnects"): ToInstance, countertype(65536): ToInstance, perfindex(326): ToInstance, helpindex(327): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ServerDisconnects;
	[DisplayName("Server Sessions Hung"): ToInstance, countertype(65536): ToInstance, perfindex(328): ToInstance, helpindex(329): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ServerSessionsHung;
	[DisplayName("Current Commands"): ToInstance, countertype(65536): ToInstance, perfindex(392): ToInstance, helpindex(393): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 CurrentCommands;
};

//**************************************************************************
//* Class: Win32_PerfRawData_TermService_TerminalServicesSession
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("TermService"): ToInstance, locale(1033): ToInstance, perfindex(2054): ToInstance, helpindex(2055): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_TermService_TerminalServicesSession : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("% Processor Time"): ToInstance, countertype(542180608): ToInstance, perfindex(6): ToInstance, helpindex(189): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentProcessorTime;
	[DisplayName("% User Time"): ToInstance, countertype(542180608): ToInstance, perfindex(142): ToInstance, helpindex(157): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentUserTime;
	[DisplayName("% Privileged Time"): ToInstance, countertype(542180608): ToInstance, perfindex(144): ToInstance, helpindex(159): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentPrivilegedTime;
	[DisplayName("Virtual Bytes Peak"): ToInstance, countertype(65792): ToInstance, perfindex(172): ToInstance, helpindex(173): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 VirtualBytesPeak;
	[DisplayName("Virtual Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(174): ToInstance, helpindex(175): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 VirtualBytes;
	[DisplayName("Page Faults/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(28): ToInstance, helpindex(177): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 PageFaultsPersec;
	[DisplayName("Working Set Peak"): ToInstance, countertype(65792): ToInstance, perfindex(178): ToInstance, helpindex(179): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 WorkingSetPeak;
	[DisplayName("Working Set"): ToInstance, countertype(65792): ToInstance, perfindex(180): ToInstance, helpindex(181): ToInstance, defaultscale(-5): ToInstance, perfdetail(100): ToInstance] uint64 WorkingSet;
	[DisplayName("Page File Bytes Peak"): ToInstance, countertype(65792): ToInstance, perfindex(182): ToInstance, helpindex(183): ToInstance, defaultscale(-6): ToInstance, perfdetail(200): ToInstance] uint64 PageFileBytesPeak;
	[DisplayName("Page File Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(184): ToInstance, helpindex(185): ToInstance, defaultscale(-6): ToInstance, perfdetail(200): ToInstance] uint64 PageFileBytes;
	[DisplayName("Private Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(186): ToInstance, helpindex(187): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 PrivateBytes;
	[DisplayName("Thread Count"): ToInstance, countertype(65536): ToInstance, perfindex(680): ToInstance, helpindex(681): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ThreadCount;
	[DisplayName("Pool Paged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint32 PoolPagedBytes;
	[DisplayName("Pool Nonpaged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint32 PoolNonpagedBytes;
	[DisplayName("Handle Count"): ToInstance, countertype(65536): ToInstance, perfindex(952): ToInstance, helpindex(953): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 HandleCount;
	[DisplayName("Input WdBytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2056): ToInstance, helpindex(2057): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 InputWdBytes;
	[DisplayName("Input WdFrames"): ToInstance, countertype(272696320): ToInstance, perfindex(2058): ToInstance, helpindex(2059): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputWdFrames;
	[DisplayName("Input WaitForOutBuf"): ToInstance, countertype(65536): ToInstance, perfindex(2060): ToInstance, helpindex(2061): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputWaitForOutBuf;
	[DisplayName("Input Frames"): ToInstance, countertype(272696320): ToInstance, perfindex(2062): ToInstance, helpindex(2063): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputFrames;
	[DisplayName("Input Bytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2064): ToInstance, helpindex(2065): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 InputBytes;
	[DisplayName("Input Compressed Bytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2066): ToInstance, helpindex(2067): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 InputCompressedBytes;
	[DisplayName("Input Compress Flushes"): ToInstance, countertype(65536): ToInstance, perfindex(2068): ToInstance, helpindex(2069): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 InputCompressFlushes;
	[DisplayName("Input Errors"): ToInstance, countertype(65536): ToInstance, perfindex(2070): ToInstance, helpindex(2071): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputErrors;
	[DisplayName("Input Timeouts"): ToInstance, countertype(65536): ToInstance, perfindex(2072): ToInstance, helpindex(2073): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputTimeouts;
	[DisplayName("Input Async Frame Error"): ToInstance, countertype(65536): ToInstance, perfindex(2074): ToInstance, helpindex(2075): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputAsyncFrameError;
	[DisplayName("Input Async Overrun"): ToInstance, countertype(65536): ToInstance, perfindex(2076): ToInstance, helpindex(2077): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputAsyncOverrun;
	[DisplayName("Input Async Overflow"): ToInstance, countertype(65536): ToInstance, perfindex(2078): ToInstance, helpindex(2079): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputAsyncOverflow;
	[DisplayName("Input Async Parity Error"): ToInstance, countertype(65536): ToInstance, perfindex(2080): ToInstance, helpindex(2081): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputAsyncParityError;
	[DisplayName("Input Transport Errors"): ToInstance, countertype(65536): ToInstance, perfindex(2082): ToInstance, helpindex(2083): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputTransportErrors;
	[DisplayName("Output WdBytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2084): ToInstance, helpindex(2085): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 OutputWdBytes;
	[DisplayName("Output WdFrames"): ToInstance, countertype(272696320): ToInstance, perfindex(2086): ToInstance, helpindex(2087): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputWdFrames;
	[DisplayName("Output WaitForOutBuf"): ToInstance, countertype(65536): ToInstance, perfindex(2088): ToInstance, helpindex(2089): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputWaitForOutBuf;
	[DisplayName("Output Frames"): ToInstance, countertype(272696320): ToInstance, perfindex(2090): ToInstance, helpindex(2091): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputFrames;
	[DisplayName("Output Bytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2092): ToInstance, helpindex(2093): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 OutputBytes;
	[DisplayName("Output Compressed Bytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2094): ToInstance, helpindex(2095): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 OutputCompressedBytes;
	[DisplayName("Output Compress Flushes"): ToInstance, countertype(65536): ToInstance, perfindex(2096): ToInstance, helpindex(2097): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 OutputCompressFlushes;
	[DisplayName("Output Errors"): ToInstance, countertype(65536): ToInstance, perfindex(2098): ToInstance, helpindex(2099): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 OutputErrors;
	[DisplayName("Output Timeouts"): ToInstance, countertype(65536): ToInstance, perfindex(2100): ToInstance, helpindex(2101): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputTimeouts;
	[DisplayName("Output Async Frame Error"): ToInstance, countertype(65536): ToInstance, perfindex(2102): ToInstance, helpindex(2103): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputAsyncFrameError;
	[DisplayName("Output Async Overrun"): ToInstance, countertype(65536): ToInstance, perfindex(2104): ToInstance, helpindex(2105): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputAsyncOverrun;
	[DisplayName("Output Async Overflow"): ToInstance, countertype(65536): ToInstance, perfindex(2106): ToInstance, helpindex(2107): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputAsyncOverflow;
	[DisplayName("Output Async Parity Error"): ToInstance, countertype(65536): ToInstance, perfindex(2108): ToInstance, helpindex(2109): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputAsyncParityError;
	[DisplayName("Output Transport Errors"): ToInstance, countertype(65536): ToInstance, perfindex(2110): ToInstance, helpindex(2111): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputTransportErrors;
	[DisplayName("Total WdBytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2112): ToInstance, helpindex(2113): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 TotalWdBytes;
	[DisplayName("Total WdFrames"): ToInstance, countertype(272696320): ToInstance, perfindex(2114): ToInstance, helpindex(2115): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalWdFrames;
	[DisplayName("Total WaitForOutBuf"): ToInstance, countertype(65536): ToInstance, perfindex(2116): ToInstance, helpindex(2117): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalWaitForOutBuf;
	[DisplayName("Total Frames"): ToInstance, countertype(272696320): ToInstance, perfindex(2118): ToInstance, helpindex(2119): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalFrames;
	[DisplayName("Total Bytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2120): ToInstance, helpindex(2121): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 TotalBytes;
	[DisplayName("Total Compressed Bytes"): ToInstance, countertype(272696320): ToInstance, perfindex(2122): ToInstance, helpindex(2123): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 TotalCompressedBytes;
	[DisplayName("Total Compress Flushes"): ToInstance, countertype(65536): ToInstance, perfindex(2124): ToInstance, helpindex(2125): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 TotalCompressFlushes;
	[DisplayName("Total Errors"): ToInstance, countertype(65536): ToInstance, perfindex(2126): ToInstance, helpindex(2127): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalErrors;
	[DisplayName("Total Timeouts"): ToInstance, countertype(65536): ToInstance, perfindex(2128): ToInstance, helpindex(2129): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalTimeouts;
	[DisplayName("Total Async Frame Error"): ToInstance, countertype(65536): ToInstance, perfindex(2130): ToInstance, helpindex(2131): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalAsyncFrameError;
	[DisplayName("Total Async Overrun"): ToInstance, countertype(65536): ToInstance, perfindex(2132): ToInstance, helpindex(2133): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalAsyncOverrun;
	[DisplayName("Total Async Overflow"): ToInstance, countertype(65536): ToInstance, perfindex(2134): ToInstance, helpindex(2135): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalAsyncOverflow;
	[DisplayName("Total Async Parity Error"): ToInstance, countertype(65536): ToInstance, perfindex(2136): ToInstance, helpindex(2137): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalAsyncParityError;
	[DisplayName("Total Transport Errors"): ToInstance, countertype(65536): ToInstance, perfindex(2138): ToInstance, helpindex(2139): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalTransportErrors;
	[DisplayName("Total Protocol Cache Reads"): ToInstance, countertype(65536): ToInstance, perfindex(2140): ToInstance, helpindex(2141): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 TotalProtocolCacheReads;
	[DisplayName("Total Protocol Cache Hits"): ToInstance, countertype(65536): ToInstance, perfindex(2142): ToInstance, helpindex(2143): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 TotalProtocolCacheHits;
	[DisplayName("Total Protocol Cache Hit Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2144): ToInstance, helpindex(2145): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalProtocolCacheHitRatio;
	[DisplayName("Protocol Bitmap Cache Reads"): ToInstance, countertype(65536): ToInstance, perfindex(2146): ToInstance, helpindex(2147): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolBitmapCacheReads;
	[DisplayName("Protocol Bitmap Cache Hits"): ToInstance, countertype(65536): ToInstance, perfindex(2148): ToInstance, helpindex(2149): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolBitmapCacheHits;
	[DisplayName("Protocol Bitmap Cache Hit Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2150): ToInstance, helpindex(2151): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolBitmapCacheHitRatio;
	[DisplayName("Protocol Glyph Cache Reads"): ToInstance, countertype(65536): ToInstance, perfindex(2152): ToInstance, helpindex(2153): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolGlyphCacheReads;
	[DisplayName("Protocol Glyph Cache Hits"): ToInstance, countertype(65536): ToInstance, perfindex(2154): ToInstance, helpindex(2155): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolGlyphCacheHits;
	[DisplayName("Protocol Glyph Cache Hit Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2156): ToInstance, helpindex(2157): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolGlyphCacheHitRatio;
	[DisplayName("Protocol Brush Cache Reads"): ToInstance, countertype(65536): ToInstance, perfindex(2158): ToInstance, helpindex(2159): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolBrushCacheReads;
	[DisplayName("Protocol Brush Cache Hits"): ToInstance, countertype(65536): ToInstance, perfindex(2160): ToInstance, helpindex(2161): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolBrushCacheHits;
	[DisplayName("Protocol Brush Cache Hit Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2162): ToInstance, helpindex(2163): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolBrushCacheHitRatio;
	[DisplayName("Protocol Save Screen Bitmap Cache Reads"): ToInstance, countertype(65536): ToInstance, perfindex(2164): ToInstance, helpindex(2165): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolSaveScreenBitmapCacheReads;
	[DisplayName("Protocol Save Screen Bitmap Cache Hits"): ToInstance, countertype(65536): ToInstance, perfindex(2166): ToInstance, helpindex(2167): ToInstance, defaultscale(-10000): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolSaveScreenBitmapCacheHits;
	[DisplayName("Protocol Save Screen Bitmap Cache Hit Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2168): ToInstance, helpindex(2169): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ProtocolSaveScreenBitmapCacheHitRatio;
	[DisplayName("Input Compression Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2170): ToInstance, helpindex(2171): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InputCompressionRatio;
	[DisplayName("Output Compression Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2172): ToInstance, helpindex(2173): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutputCompressionRatio;
	[DisplayName("Total Compression Ratio"): ToInstance, countertype(65536): ToInstance, perfindex(2174): ToInstance, helpindex(2175): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalCompressionRatio;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfOS_Cache
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfOS"): ToInstance, locale(1033): ToInstance, perfindex(86): ToInstance, helpindex(87): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_PerfOS_Cache : Win32_PerfRawData
{
	[DisplayName("Data Maps/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(88): ToInstance, helpindex(89): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 DataMapsPersec;
	[DisplayName("Sync Data Maps/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(90): ToInstance, helpindex(91): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 SyncDataMapsPersec;
	[DisplayName("Async Data Maps/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(92): ToInstance, helpindex(93): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 AsyncDataMapsPersec;
	[perfdefault: ToInstance, DisplayName("Data Map Hits %"): ToInstance, countertype(549585920): ToInstance, perfindex(94): ToInstance, helpindex(95): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 DataMapHitsPercent;
	[DisplayName(""): ToInstance, countertype(1073939457): ToInstance, perfindex(94): ToInstance, helpindex(95): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 DataMapHitsPercent_Base;
	[DisplayName("Data Map Pins/sec"): ToInstance, countertype(549585920): ToInstance, perfindex(96): ToInstance, helpindex(97): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 DataMapPinsPersec;
	[DisplayName(""): ToInstance, countertype(1073939457): ToInstance, perfindex(96): ToInstance, helpindex(97): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 DataMapPinsPersec_Base;
	[DisplayName("Pin Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(98): ToInstance, helpindex(99): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 PinReadsPersec;
	[DisplayName("Sync Pin Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(100): ToInstance, helpindex(101): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 SyncPinReadsPersec;
	[DisplayName("Async Pin Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(102): ToInstance, helpindex(103): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 AsyncPinReadsPersec;
	[DisplayName("Pin Read Hits %"): ToInstance, countertype(549585920): ToInstance, perfindex(104): ToInstance, helpindex(105): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 PinReadHitsPercent;
	[DisplayName(""): ToInstance, countertype(1073939457): ToInstance, perfindex(104): ToInstance, helpindex(105): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 PinReadHitsPercent_Base;
	[DisplayName("Copy Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(106): ToInstance, helpindex(107): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 CopyReadsPersec;
	[DisplayName("Sync Copy Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(108): ToInstance, helpindex(109): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 SyncCopyReadsPersec;
	[DisplayName("Async Copy Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(110): ToInstance, helpindex(111): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 AsyncCopyReadsPersec;
	[DisplayName("Copy Read Hits %"): ToInstance, countertype(549585920): ToInstance, perfindex(112): ToInstance, helpindex(113): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 CopyReadHitsPercent;
	[DisplayName(""): ToInstance, countertype(1073939457): ToInstance, perfindex(112): ToInstance, helpindex(113): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 CopyReadHitsPercent_Base;
	[DisplayName("MDL Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(114): ToInstance, helpindex(115): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 MDLReadsPersec;
	[DisplayName("Sync MDL Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(116): ToInstance, helpindex(117): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 SyncMDLReadsPersec;
	[DisplayName("Async MDL Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(118): ToInstance, helpindex(119): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 AsyncMDLReadsPersec;
	[DisplayName("MDL Read Hits %"): ToInstance, countertype(549585920): ToInstance, perfindex(120): ToInstance, helpindex(121): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 MDLReadHitsPercent;
	[DisplayName(""): ToInstance, countertype(1073939457): ToInstance, perfindex(120): ToInstance, helpindex(121): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 MDLReadHitsPercent_Base;
	[DisplayName("Read Aheads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(122): ToInstance, helpindex(123): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ReadAheadsPersec;
	[DisplayName("Fast Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(124): ToInstance, helpindex(125): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 FastReadsPersec;
	[DisplayName("Sync Fast Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(126): ToInstance, helpindex(127): ToInstance, defaultscale(-1): ToInstance, perfdetail(400): ToInstance] uint32 SyncFastReadsPersec;
	[DisplayName("Async Fast Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(128): ToInstance, helpindex(129): ToInstance, defaultscale(-1): ToInstance, perfdetail(400): ToInstance] uint32 AsyncFastReadsPersec;
	[DisplayName("Fast Read Resource Misses/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(130): ToInstance, helpindex(131): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 FastReadResourceMissesPersec;
	[DisplayName("Fast Read Not Possibles/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(132): ToInstance, helpindex(133): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 FastReadNotPossiblesPersec;
	[DisplayName("Lazy Write Flushes/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(134): ToInstance, helpindex(135): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 LazyWriteFlushesPersec;
	[DisplayName("Lazy Write Pages/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(136): ToInstance, helpindex(137): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 LazyWritePagesPersec;
	[DisplayName("Data Flushes/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(138): ToInstance, helpindex(139): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 DataFlushesPersec;
	[DisplayName("Data Flush Pages/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(140): ToInstance, helpindex(141): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DataFlushPagesPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PSched_PSchedPipe
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PSched"): ToInstance, locale(1033): ToInstance, perfindex(1938): ToInstance, helpindex(1939): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PSched_PSchedPipe : Win32_PerfRawData
{
	[key] string Name = NULL;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfOS_System
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfOS"): ToInstance, locale(1033): ToInstance, perfindex(2): ToInstance, helpindex(3): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_PerfOS_System : Win32_PerfRawData
{
	[DisplayName("File Read Operations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(10): ToInstance, helpindex(11): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FileReadOperationsPersec;
	[DisplayName("File Write Operations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(12): ToInstance, helpindex(13): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FileWriteOperationsPersec;
	[DisplayName("File Control Operations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(14): ToInstance, helpindex(15): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 FileControlOperationsPersec;
	[DisplayName("File Read Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(16): ToInstance, helpindex(17): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 FileReadBytesPersec;
	[DisplayName("File Write Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(18): ToInstance, helpindex(19): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint64 FileWriteBytesPersec;
	[DisplayName("File Control Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(20): ToInstance, helpindex(21): ToInstance, defaultscale(-3): ToInstance, perfdetail(400): ToInstance] uint64 FileControlBytesPersec;
	[DisplayName("Context Switches/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(146): ToInstance, helpindex(147): ToInstance, defaultscale(-2): ToInstance, perfdetail(200): ToInstance] uint32 ContextSwitchesPersec;
	[DisplayName("System Calls/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(150): ToInstance, helpindex(151): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 SystemCallsPersec;
	[perfdefault: ToInstance, DisplayName("File Data Operations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(406): ToInstance, helpindex(407): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FileDataOperationsPersec;
	[DisplayName("System Up Time"): ToInstance, countertype(807666944): ToInstance, perfindex(674): ToInstance, helpindex(675): ToInstance, defaultscale(-5): ToInstance, perfdetail(100): ToInstance] uint64 SystemUpTime;
	[DisplayName("Processor Queue Length"): ToInstance, countertype(65536): ToInstance, perfindex(44): ToInstance, helpindex(45): ToInstance, defaultscale(1): ToInstance, perfdetail(400): ToInstance] uint32 ProcessorQueueLength;
	[DisplayName("Processes"): ToInstance, countertype(65536): ToInstance, perfindex(248): ToInstance, helpindex(249): ToInstance, defaultscale(1): ToInstance, perfdetail(400): ToInstance] uint32 Processes;
	[DisplayName("Threads"): ToInstance, countertype(65536): ToInstance, perfindex(250): ToInstance, helpindex(251): ToInstance, defaultscale(1): ToInstance, perfdetail(400): ToInstance] uint32 Threads;
	[DisplayName("Alignment Fixups/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(686): ToInstance, helpindex(687): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 AlignmentFixupsPersec;
	[DisplayName("Exception Dispatches/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(688): ToInstance, helpindex(689): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 ExceptionDispatchesPersec;
	[DisplayName("Floating Emulations/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(690): ToInstance, helpindex(691): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 FloatingEmulationsPersec;
	[DisplayName("% Registry Quota In Use"): ToInstance, countertype(537003008): ToInstance, perfindex(1350): ToInstance, helpindex(1351): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PercentRegistryQuotaInUse;
	[DisplayName(""): ToInstance, countertype(1073939459): ToInstance, perfindex(1350): ToInstance, helpindex(1351): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PercentRegistryQuotaInUse_Base;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_JobObject
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(1500): ToInstance, helpindex(1501): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfProc_JobObject : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("Current % Processor Time"): ToInstance, countertype(542180608): ToInstance, perfindex(1502): ToInstance, helpindex(1503): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 CurrentPercentProcessorTime;
	[DisplayName("Current % User Mode Time"): ToInstance, countertype(542180608): ToInstance, perfindex(1504): ToInstance, helpindex(1505): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 CurrentPercentUserModeTime;
	[DisplayName("Current % Kernel Mode Time"): ToInstance, countertype(542180608): ToInstance, perfindex(1506): ToInstance, helpindex(1507): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 CurrentPercentKernelModeTime;
	[DisplayName("This Period mSec - Processor"): ToInstance, countertype(65792): ToInstance, perfindex(1508): ToInstance, helpindex(1509): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 ThisPeriodmSecProcessor;
	[DisplayName("This Period mSec - User Mode"): ToInstance, countertype(65792): ToInstance, perfindex(1510): ToInstance, helpindex(1511): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 ThisPeriodmSecUserMode;
	[DisplayName("This Period mSec - Kernel Mode"): ToInstance, countertype(65792): ToInstance, perfindex(1512): ToInstance, helpindex(1513): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 ThisPeriodmSecKernelMode;
	[DisplayName("Total mSec - Processor"): ToInstance, countertype(65792): ToInstance, perfindex(1522): ToInstance, helpindex(1523): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 TotalmSecProcessor;
	[DisplayName("Total mSec - User Mode"): ToInstance, countertype(65792): ToInstance, perfindex(1524): ToInstance, helpindex(1525): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 TotalmSecUserMode;
	[DisplayName("Total mSec - Kernel Mode"): ToInstance, countertype(65792): ToInstance, perfindex(1526): ToInstance, helpindex(1527): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 TotalmSecKernelMode;
	[DisplayName("Pages/Sec"): ToInstance, countertype(272696320): ToInstance, perfindex(1514): ToInstance, helpindex(1515): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PagesPerSec;
	[DisplayName("Process Count - Total"): ToInstance, countertype(65536): ToInstance, perfindex(1516): ToInstance, helpindex(1517): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ProcessCountTotal;
	[DisplayName("Process Count - Active"): ToInstance, countertype(65536): ToInstance, perfindex(1518): ToInstance, helpindex(1519): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ProcessCountActive;
	[DisplayName("Process Count - Terminated"): ToInstance, countertype(65536): ToInstance, perfindex(1520): ToInstance, helpindex(1521): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ProcessCountTerminated;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_Process
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(230): ToInstance, helpindex(231): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfProc_Process : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("% Processor Time"): ToInstance, countertype(542180608): ToInstance, perfindex(6): ToInstance, helpindex(189): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentProcessorTime;
	[DisplayName("% User Time"): ToInstance, countertype(542180608): ToInstance, perfindex(142): ToInstance, helpindex(157): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentUserTime;
	[DisplayName("% Privileged Time"): ToInstance, countertype(542180608): ToInstance, perfindex(144): ToInstance, helpindex(159): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentPrivilegedTime;
	[DisplayName("Virtual Bytes Peak"): ToInstance, countertype(65792): ToInstance, perfindex(172): ToInstance, helpindex(173): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 VirtualBytesPeak;
	[DisplayName("Virtual Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(174): ToInstance, helpindex(175): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 VirtualBytes;
	[DisplayName("Page Faults/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(28): ToInstance, helpindex(177): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 PageFaultsPersec;
	[DisplayName("Working Set Peak"): ToInstance, countertype(65792): ToInstance, perfindex(178): ToInstance, helpindex(179): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 WorkingSetPeak;
	[DisplayName("Working Set"): ToInstance, countertype(65792): ToInstance, perfindex(180): ToInstance, helpindex(181): ToInstance, defaultscale(-5): ToInstance, perfdetail(100): ToInstance] uint64 WorkingSet;
	[DisplayName("Page File Bytes Peak"): ToInstance, countertype(65792): ToInstance, perfindex(182): ToInstance, helpindex(183): ToInstance, defaultscale(-6): ToInstance, perfdetail(200): ToInstance] uint64 PageFileBytesPeak;
	[DisplayName("Page File Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(184): ToInstance, helpindex(185): ToInstance, defaultscale(-6): ToInstance, perfdetail(200): ToInstance] uint64 PageFileBytes;
	[DisplayName("Private Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(186): ToInstance, helpindex(187): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 PrivateBytes;
	[DisplayName("Thread Count"): ToInstance, countertype(65536): ToInstance, perfindex(680): ToInstance, helpindex(681): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ThreadCount;
	[DisplayName("Priority Base"): ToInstance, countertype(65536): ToInstance, perfindex(682): ToInstance, helpindex(683): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PriorityBase;
	[DisplayName("Elapsed Time"): ToInstance, countertype(807666944): ToInstance, perfindex(684): ToInstance, helpindex(685): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 ElapsedTime;
	[DisplayName("ID Process"): ToInstance, countertype(65536): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 IDProcess;
	[DisplayName("Creating Process ID"): ToInstance, countertype(65536): ToInstance, perfindex(1410): ToInstance, helpindex(1411): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 CreatingProcessID;
	[DisplayName("Pool Paged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint32 PoolPagedBytes;
	[DisplayName("Pool Nonpaged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint32 PoolNonpagedBytes;
	[DisplayName("Handle Count"): ToInstance, countertype(65536): ToInstance, perfindex(952): ToInstance, helpindex(953): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 HandleCount;
	[DisplayName("IO Read Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1412): ToInstance, helpindex(1413): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOReadOperationsPersec;
	[DisplayName("IO Write Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1414): ToInstance, helpindex(1415): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOWriteOperationsPersec;
	[DisplayName("IO Data Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1416): ToInstance, helpindex(1417): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IODataOperationsPersec;
	[DisplayName("IO Other Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1418): ToInstance, helpindex(1419): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOOtherOperationsPersec;
	[DisplayName("IO Read Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1420): ToInstance, helpindex(1421): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOReadBytesPersec;
	[DisplayName("IO Write Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1422): ToInstance, helpindex(1423): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOWriteBytesPersec;
	[DisplayName("IO Data Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1424): ToInstance, helpindex(1425): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IODataBytesPersec;
	[DisplayName("IO Other Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1426): ToInstance, helpindex(1427): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOOtherBytesPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_FullImage_Costly
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(1408): ToInstance, helpindex(1409): ToInstance, perfdetail(400): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, costly: ToInstance]
class Win32_PerfRawData_PerfProc_FullImage_Costly : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("No Access"): ToInstance, countertype(65792): ToInstance, perfindex(788): ToInstance, helpindex(789): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 NoAccess;
	[DisplayName("Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(790): ToInstance, helpindex(791): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ReadOnly;
	[DisplayName("Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(792): ToInstance, helpindex(793): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ReadPerWrite;
	[DisplayName("Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(794): ToInstance, helpindex(795): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 WriteCopy;
	[DisplayName("Executable"): ToInstance, countertype(65792): ToInstance, perfindex(796): ToInstance, helpindex(797): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 Executable;
	[DisplayName("Exec Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(798): ToInstance, helpindex(799): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ExecReadOnly;
	[DisplayName("Exec Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(800): ToInstance, helpindex(801): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ExecReadPerWrite;
	[DisplayName("Exec Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(802): ToInstance, helpindex(803): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ExecWriteCopy;
};

//**************************************************************************
//* Class: Win32_PerfRawData_Tcpip_TCP
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("Tcpip"): ToInstance, locale(1033): ToInstance, perfindex(638): ToInstance, helpindex(639): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_Tcpip_TCP : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Segments/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(640): ToInstance, helpindex(641): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 SegmentsPersec;
	[DisplayName("Connections Established"): ToInstance, countertype(65536): ToInstance, perfindex(642): ToInstance, helpindex(643): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectionsEstablished;
	[DisplayName("Connections Active"): ToInstance, countertype(65536): ToInstance, perfindex(644): ToInstance, helpindex(645): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectionsActive;
	[DisplayName("Connections Passive"): ToInstance, countertype(65536): ToInstance, perfindex(646): ToInstance, helpindex(647): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectionsPassive;
	[DisplayName("Connection Failures"): ToInstance, countertype(65536): ToInstance, perfindex(648): ToInstance, helpindex(649): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectionFailures;
	[DisplayName("Connections Reset"): ToInstance, countertype(65536): ToInstance, perfindex(650): ToInstance, helpindex(651): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ConnectionsReset;
	[DisplayName("Segments Received/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(652): ToInstance, helpindex(653): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 SegmentsReceivedPersec;
	[DisplayName("Segments Sent/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(654): ToInstance, helpindex(655): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 SegmentsSentPersec;
	[DisplayName("Segments Retransmitted/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(656): ToInstance, helpindex(657): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 SegmentsRetransmittedPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_Tcpip_NetworkInterface
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("Tcpip"): ToInstance, locale(1033): ToInstance, perfindex(510): ToInstance, helpindex(511): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_Tcpip_NetworkInterface : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("Bytes Total/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(388): ToInstance, helpindex(513): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesTotalPersec;
	[DisplayName("Packets/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(400): ToInstance, helpindex(515): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 PacketsPersec;
	[DisplayName("Packets Received/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(266): ToInstance, helpindex(517): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 PacketsReceivedPersec;
	[DisplayName("Packets Sent/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(452): ToInstance, helpindex(519): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 PacketsSentPersec;
	[DisplayName("Current Bandwidth"): ToInstance, countertype(65536): ToInstance, perfindex(520): ToInstance, helpindex(521): ToInstance, defaultscale(-6): ToInstance, perfdetail(200): ToInstance] uint32 CurrentBandwidth;
	[DisplayName("Bytes Received/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(264): ToInstance, helpindex(523): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint32 BytesReceivedPersec;
	[DisplayName("Packets Received Unicast/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(524): ToInstance, helpindex(525): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 PacketsReceivedUnicastPersec;
	[DisplayName("Packets Received Non-Unicast/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(526): ToInstance, helpindex(527): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 PacketsReceivedNonUnicastPersec;
	[DisplayName("Packets Received Discarded"): ToInstance, countertype(65536): ToInstance, perfindex(528): ToInstance, helpindex(529): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PacketsReceivedDiscarded;
	[DisplayName("Packets Received Errors"): ToInstance, countertype(65536): ToInstance, perfindex(530): ToInstance, helpindex(531): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PacketsReceivedErrors;
	[DisplayName("Packets Received Unknown"): ToInstance, countertype(65536): ToInstance, perfindex(532): ToInstance, helpindex(533): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PacketsReceivedUnknown;
	[DisplayName("Bytes Sent/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(506): ToInstance, helpindex(535): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint32 BytesSentPersec;
	[DisplayName("Packets Sent Unicast/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(536): ToInstance, helpindex(537): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 PacketsSentUnicastPersec;
	[DisplayName("Packets Sent Non-Unicast/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(538): ToInstance, helpindex(539): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 PacketsSentNonUnicastPersec;
	[DisplayName("Packets Outbound Discarded"): ToInstance, countertype(65536): ToInstance, perfindex(540): ToInstance, helpindex(541): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PacketsOutboundDiscarded;
	[DisplayName("Packets Outbound Errors"): ToInstance, countertype(65536): ToInstance, perfindex(542): ToInstance, helpindex(543): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PacketsOutboundErrors;
	[DisplayName("Output Queue Length"): ToInstance, countertype(65536): ToInstance, perfindex(544): ToInstance, helpindex(545): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 OutputQueueLength;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfOS_PagingFile
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfOS"): ToInstance, locale(1033): ToInstance, perfindex(700): ToInstance, helpindex(701): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfOS_PagingFile : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("% Usage"): ToInstance, countertype(537003008): ToInstance, perfindex(702): ToInstance, helpindex(703): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PercentUsage;
	[DisplayName(""): ToInstance, countertype(1073939459): ToInstance, perfindex(702): ToInstance, helpindex(703): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PercentUsage_Base;
	[DisplayName("% Usage Peak"): ToInstance, countertype(537003008): ToInstance, perfindex(704): ToInstance, helpindex(705): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PercentUsagePeak;
	[DisplayName(""): ToInstance, countertype(1073939459): ToInstance, perfindex(704): ToInstance, helpindex(705): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PercentUsagePeak_Base;
};

//**************************************************************************
//* Class: Win32_PerfRawData_TermService_TerminalServices
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("TermService"): ToInstance, locale(1033): ToInstance, perfindex(2176): ToInstance, helpindex(2177): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_TermService_TerminalServices : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Total Sessions"): ToInstance, countertype(65536): ToInstance, perfindex(2178): ToInstance, helpindex(2179): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TotalSessions;
	[DisplayName("Active Sessions"): ToInstance, countertype(65536): ToInstance, perfindex(2180): ToInstance, helpindex(2181): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ActiveSessions;
	[DisplayName("Inactive Sessions"): ToInstance, countertype(65536): ToInstance, perfindex(2182): ToInstance, helpindex(2183): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InactiveSessions;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PSched_PSchedFlow
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PSched"): ToInstance, locale(1033): ToInstance, perfindex(1936): ToInstance, helpindex(1937): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PSched_PSchedFlow : Win32_PerfRawData
{
	[key] string Name = NULL;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfNet_ServerWorkQueues
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfNet"): ToInstance, locale(1033): ToInstance, perfindex(1300): ToInstance, helpindex(1301): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfNet_ServerWorkQueues : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("Queue Length"): ToInstance, countertype(65536): ToInstance, perfindex(1302): ToInstance, helpindex(1303): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 QueueLength;
	[DisplayName("Active Threads"): ToInstance, countertype(65536): ToInstance, perfindex(1304): ToInstance, helpindex(1305): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ActiveThreads;
	[DisplayName("Available Threads"): ToInstance, countertype(65536): ToInstance, perfindex(1306): ToInstance, helpindex(1307): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvailableThreads;
	[DisplayName("Available Work Items"): ToInstance, countertype(65536): ToInstance, perfindex(1308): ToInstance, helpindex(1309): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvailableWorkItems;
	[DisplayName("Borrowed Work Items"): ToInstance, countertype(65536): ToInstance, perfindex(1310): ToInstance, helpindex(1311): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 BorrowedWorkItems;
	[DisplayName("Work Item Shortages"): ToInstance, countertype(65536): ToInstance, perfindex(1312): ToInstance, helpindex(1313): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 WorkItemShortages;
	[DisplayName("Current Clients"): ToInstance, countertype(65536): ToInstance, perfindex(1314): ToInstance, helpindex(1315): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 CurrentClients;
	[DisplayName("Bytes Received/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(264): ToInstance, helpindex(1317): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesReceivedPersec;
	[DisplayName("Bytes Sent/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(506): ToInstance, helpindex(1319): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesSentPersec;
	[DisplayName("Bytes Transferred/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1320): ToInstance, helpindex(1321): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesTransferredPersec;
	[DisplayName("Read Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(288): ToInstance, helpindex(1323): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 ReadOperationsPersec;
	[DisplayName("Read Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1324): ToInstance, helpindex(1325): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 ReadBytesPersec;
	[DisplayName("Write Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(298): ToInstance, helpindex(1327): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 WriteOperationsPersec;
	[DisplayName("Write Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1328): ToInstance, helpindex(1329): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 WriteBytesPersec;
	[DisplayName("Total Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(508): ToInstance, helpindex(1331): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 TotalBytesPersec;
	[DisplayName("Total Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1332): ToInstance, helpindex(1333): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 TotalOperationsPersec;
	[DisplayName("Context Blocks Queued/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(404): ToInstance, helpindex(405): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ContextBlocksQueuedPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_Image_Costly
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(740): ToInstance, helpindex(741): ToInstance, perfdetail(400): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, costly: ToInstance]
class Win32_PerfRawData_PerfProc_Image_Costly : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("No Access"): ToInstance, countertype(65792): ToInstance, perfindex(788): ToInstance, helpindex(789): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 NoAccess;
	[DisplayName("Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(790): ToInstance, helpindex(791): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ReadOnly;
	[DisplayName("Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(792): ToInstance, helpindex(793): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ReadPerWrite;
	[DisplayName("Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(794): ToInstance, helpindex(795): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 WriteCopy;
	[DisplayName("Executable"): ToInstance, countertype(65792): ToInstance, perfindex(796): ToInstance, helpindex(797): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 Executable;
	[DisplayName("Exec Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(798): ToInstance, helpindex(799): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ExecReadOnly;
	[DisplayName("Exec Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(800): ToInstance, helpindex(801): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ExecReadPerWrite;
	[DisplayName("Exec Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(802): ToInstance, helpindex(803): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 ExecWriteCopy;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfNet_Server
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfNet"): ToInstance, locale(1033): ToInstance, perfindex(330): ToInstance, helpindex(331): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_PerfNet_Server : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Bytes Total/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(388): ToInstance, helpindex(395): ToInstance, defaultscale(-4): ToInstance, perfdetail(100): ToInstance] uint64 BytesTotalPersec;
	[DisplayName("Bytes Received/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(264): ToInstance, helpindex(333): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesReceivedPersec;
	[DisplayName("Bytes Transmitted/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(276): ToInstance, helpindex(335): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 BytesTransmittedPersec;
	[DisplayName("Sessions Timed Out"): ToInstance, countertype(65536): ToInstance, perfindex(340): ToInstance, helpindex(341): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SessionsTimedOut;
	[DisplayName("Sessions Errored Out"): ToInstance, countertype(65536): ToInstance, perfindex(342): ToInstance, helpindex(343): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SessionsErroredOut;
	[DisplayName("Sessions Logged Off"): ToInstance, countertype(65536): ToInstance, perfindex(344): ToInstance, helpindex(345): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SessionsLoggedOff;
	[DisplayName("Sessions Forced Off"): ToInstance, countertype(65536): ToInstance, perfindex(346): ToInstance, helpindex(347): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SessionsForcedOff;
	[DisplayName("Errors Logon"): ToInstance, countertype(65536): ToInstance, perfindex(348): ToInstance, helpindex(349): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ErrorsLogon;
	[DisplayName("Errors Access Permissions"): ToInstance, countertype(65536): ToInstance, perfindex(350): ToInstance, helpindex(351): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ErrorsAccessPermissions;
	[DisplayName("Errors Granted Access"): ToInstance, countertype(65536): ToInstance, perfindex(352): ToInstance, helpindex(353): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ErrorsGrantedAccess;
	[DisplayName("Errors System"): ToInstance, countertype(65536): ToInstance, perfindex(354): ToInstance, helpindex(355): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 ErrorsSystem;
	[DisplayName("Blocking Requests Rejected"): ToInstance, countertype(272696320): ToInstance, perfindex(356): ToInstance, helpindex(357): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 BlockingRequestsRejected;
	[DisplayName("Work Item Shortages"): ToInstance, countertype(272696320): ToInstance, perfindex(358): ToInstance, helpindex(359): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 WorkItemShortages;
	[DisplayName("Files Opened Total"): ToInstance, countertype(65536): ToInstance, perfindex(360): ToInstance, helpindex(361): ToInstance, defaultscale(-3): ToInstance, perfdetail(100): ToInstance] uint32 FilesOpenedTotal;
	[DisplayName("Files Open"): ToInstance, countertype(65536): ToInstance, perfindex(362): ToInstance, helpindex(363): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FilesOpen;
	[DisplayName("Server Sessions"): ToInstance, countertype(65536): ToInstance, perfindex(314): ToInstance, helpindex(365): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ServerSessions;
	[DisplayName("File Directory Searches"): ToInstance, countertype(65536): ToInstance, perfindex(366): ToInstance, helpindex(367): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 FileDirectorySearches;
	[DisplayName("Pool Nonpaged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(58): ToInstance, helpindex(369): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint32 PoolNonpagedBytes;
	[DisplayName("Pool Nonpaged Failures"): ToInstance, countertype(272696320): ToInstance, perfindex(370): ToInstance, helpindex(371): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 PoolNonpagedFailures;
	[DisplayName("Pool Nonpaged Peak"): ToInstance, countertype(65536): ToInstance, perfindex(372): ToInstance, helpindex(373): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint32 PoolNonpagedPeak;
	[DisplayName("Pool Paged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(56): ToInstance, helpindex(375): ToInstance, defaultscale(-4): ToInstance, perfdetail(300): ToInstance] uint32 PoolPagedBytes;
	[DisplayName("Pool Paged Failures"): ToInstance, countertype(65536): ToInstance, perfindex(376): ToInstance, helpindex(377): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 PoolPagedFailures;
	[DisplayName("Pool Paged Peak"): ToInstance, countertype(65536): ToInstance, perfindex(378): ToInstance, helpindex(379): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint32 PoolPagedPeak;
	[DisplayName("Context Blocks Queued/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(404): ToInstance, helpindex(405): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 ContextBlocksQueuedPersec;
	[DisplayName("Logon/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(692): ToInstance, helpindex(693): ToInstance, defaultscale(1): ToInstance, perfdetail(100): ToInstance] uint32 LogonPersec;
	[DisplayName("Logon Total"): ToInstance, countertype(65536): ToInstance, perfindex(1260): ToInstance, helpindex(1261): ToInstance, defaultscale(1): ToInstance, perfdetail(100): ToInstance] uint32 LogonTotal;
};

//**************************************************************************
//* Class: Win32_PerfRawData_Tcpip_IP
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("Tcpip"): ToInstance, locale(1033): ToInstance, perfindex(546): ToInstance, helpindex(547): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_Tcpip_IP : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Datagrams/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(438): ToInstance, helpindex(549): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsPersec;
	[DisplayName("Datagrams Received/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(446): ToInstance, helpindex(551): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedPersec;
	[DisplayName("Datagrams Received Header Errors"): ToInstance, countertype(65536): ToInstance, perfindex(552): ToInstance, helpindex(553): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedHeaderErrors;
	[DisplayName("Datagrams Received Address Errors"): ToInstance, countertype(65536): ToInstance, perfindex(554): ToInstance, helpindex(555): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedAddressErrors;
	[DisplayName("Datagrams Forwarded/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(556): ToInstance, helpindex(557): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsForwardedPersec;
	[DisplayName("Datagrams Received Unknown Protocol"): ToInstance, countertype(65536): ToInstance, perfindex(558): ToInstance, helpindex(559): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedUnknownProtocol;
	[DisplayName("Datagrams Received Discarded"): ToInstance, countertype(65536): ToInstance, perfindex(560): ToInstance, helpindex(561): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedDiscarded;
	[DisplayName("Datagrams Received Delivered/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(562): ToInstance, helpindex(563): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedDeliveredPersec;
	[DisplayName("Datagrams Sent/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(442): ToInstance, helpindex(565): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsSentPersec;
	[DisplayName("Datagrams Outbound Discarded"): ToInstance, countertype(65536): ToInstance, perfindex(566): ToInstance, helpindex(567): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsOutboundDiscarded;
	[DisplayName("Datagrams Outbound No Route"): ToInstance, countertype(65536): ToInstance, perfindex(568): ToInstance, helpindex(569): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsOutboundNoRoute;
	[DisplayName("Fragments Received/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(570): ToInstance, helpindex(571): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 FragmentsReceivedPersec;
	[DisplayName("Fragments Re-assembled/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(572): ToInstance, helpindex(573): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 FragmentsReassembledPersec;
	[DisplayName("Fragment Re-assembly Failures"): ToInstance, countertype(65536): ToInstance, perfindex(574): ToInstance, helpindex(575): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 FragmentReassemblyFailures;
	[DisplayName("Fragmented Datagrams/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(576): ToInstance, helpindex(577): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 FragmentedDatagramsPersec;
	[DisplayName("Fragmentation Failures"): ToInstance, countertype(65536): ToInstance, perfindex(578): ToInstance, helpindex(579): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 FragmentationFailures;
	[DisplayName("Fragments Created/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(580): ToInstance, helpindex(581): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 FragmentsCreatedPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfNet_Browser
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfNet"): ToInstance, locale(1033): ToInstance, perfindex(52): ToInstance, helpindex(53): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_PerfNet_Browser : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Announcements Server/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(54): ToInstance, helpindex(55): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 AnnouncementsServerPersec;
	[DisplayName("Announcements Domain/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(78): ToInstance, helpindex(79): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 AnnouncementsDomainPersec;
	[DisplayName("Announcements Total/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(188): ToInstance, helpindex(813): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 AnnouncementsTotalPersec;
	[DisplayName("Election Packets/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(80): ToInstance, helpindex(81): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ElectionPacketsPersec;
	[DisplayName("Mailslot Writes/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(82): ToInstance, helpindex(83): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MailslotWritesPersec;
	[DisplayName("Server List Requests/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(84): ToInstance, helpindex(85): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ServerListRequestsPersec;
	[DisplayName("Enumerations Server/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(156): ToInstance, helpindex(161): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 EnumerationsServerPersec;
	[DisplayName("Enumerations Domain/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(158): ToInstance, helpindex(163): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 EnumerationsDomainPersec;
	[DisplayName("Enumerations Other/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(160): ToInstance, helpindex(165): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 EnumerationsOtherPersec;
	[DisplayName("Enumerations Total/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(190): ToInstance, helpindex(815): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 EnumerationsTotalPersec;
	[DisplayName("Missed Server Announcements"): ToInstance, countertype(65536): ToInstance, perfindex(162): ToInstance, helpindex(167): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MissedServerAnnouncements;
	[DisplayName("Missed Mailslot Datagrams"): ToInstance, countertype(65536): ToInstance, perfindex(164): ToInstance, helpindex(169): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MissedMailslotDatagrams;
	[DisplayName("Missed Server List Requests"): ToInstance, countertype(65536): ToInstance, perfindex(166): ToInstance, helpindex(171): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MissedServerListRequests;
	[DisplayName("Server Announce Allocations Failed/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(168): ToInstance, helpindex(381): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ServerAnnounceAllocationsFailedPersec;
	[DisplayName("Mailslot Allocations Failed"): ToInstance, countertype(65536): ToInstance, perfindex(170): ToInstance, helpindex(383): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MailslotAllocationsFailed;
	[DisplayName("Mailslot Receives Failed"): ToInstance, countertype(65536): ToInstance, perfindex(806): ToInstance, helpindex(385): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MailslotReceivesFailed;
	[DisplayName("Mailslot Writes Failed"): ToInstance, countertype(65536): ToInstance, perfindex(808): ToInstance, helpindex(387): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MailslotWritesFailed;
	[DisplayName("Mailslot Opens Failed/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(810): ToInstance, helpindex(807): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 MailslotOpensFailedPersec;
	[DisplayName("Duplicate Master Announcements"): ToInstance, countertype(65536): ToInstance, perfindex(812): ToInstance, helpindex(809): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 DuplicateMasterAnnouncements;
	[DisplayName("Illegal Datagrams/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(814): ToInstance, helpindex(811): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 IllegalDatagramsPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfOS_Objects
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfOS"): ToInstance, locale(1033): ToInstance, perfindex(260): ToInstance, helpindex(261): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_PerfOS_Objects : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Processes"): ToInstance, countertype(65536): ToInstance, perfindex(248): ToInstance, helpindex(249): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Processes;
	[DisplayName("Threads"): ToInstance, countertype(65536): ToInstance, perfindex(250): ToInstance, helpindex(251): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 Threads;
	[DisplayName("Events"): ToInstance, countertype(65536): ToInstance, perfindex(252): ToInstance, helpindex(253): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 Events;
	[DisplayName("Semaphores"): ToInstance, countertype(65536): ToInstance, perfindex(254): ToInstance, helpindex(255): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 Semaphores;
	[DisplayName("Mutexes"): ToInstance, countertype(65536): ToInstance, perfindex(256): ToInstance, helpindex(257): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 Mutexes;
	[DisplayName("Sections"): ToInstance, countertype(65536): ToInstance, perfindex(258): ToInstance, helpindex(259): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 Sections;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfOS_Processor
//* Derived from: Win32_PerfRawData
//**************************************************************************
[perfdefault: ToInstance, dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfOS"): ToInstance, locale(1033): ToInstance, perfindex(238): ToInstance, helpindex(239): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfOS_Processor : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("% Processor Time"): ToInstance, countertype(558957824): ToInstance, perfindex(6): ToInstance, helpindex(7): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentProcessorTime;
	[DisplayName("% User Time"): ToInstance, countertype(542180608): ToInstance, perfindex(142): ToInstance, helpindex(143): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentUserTime;
	[DisplayName("% Privileged Time"): ToInstance, countertype(542180608): ToInstance, perfindex(144): ToInstance, helpindex(145): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentPrivilegedTime;
	[DisplayName("Interrupts/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(148): ToInstance, helpindex(149): ToInstance, defaultscale(-2): ToInstance, perfdetail(100): ToInstance] uint32 InterruptsPersec;
	[DisplayName("% DPC Time"): ToInstance, countertype(542180608): ToInstance, perfindex(696): ToInstance, helpindex(339): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentDPCTime;
	[DisplayName("% Interrupt Time"): ToInstance, countertype(542180608): ToInstance, perfindex(698): ToInstance, helpindex(397): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentInterruptTime;
	[DisplayName("DPCs Queued/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(1334): ToInstance, helpindex(1335): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DPCsQueuedPersec;
	[DisplayName("DPC Rate"): ToInstance, countertype(65536): ToInstance, perfindex(1336): ToInstance, helpindex(1337): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DPCRate;
	[DisplayName("% Idle Time"): ToInstance, countertype(542180608): ToInstance, perfindex(1746): ToInstance, helpindex(1747): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 PercentIdleTime;
	[DisplayName("% C1 Time"): ToInstance, countertype(542180608): ToInstance, perfindex(1748): ToInstance, helpindex(1749): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 PercentC1Time;
	[DisplayName("% C2 Time"): ToInstance, countertype(542180608): ToInstance, perfindex(1750): ToInstance, helpindex(1751): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 PercentC2Time;
	[DisplayName("% C3 Time"): ToInstance, countertype(542180608): ToInstance, perfindex(1752): ToInstance, helpindex(1753): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 PercentC3Time;
	[DisplayName("C1 Transitions/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1754): ToInstance, helpindex(1755): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 C1TransitionsPersec;
	[DisplayName("C2 Transitions/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1756): ToInstance, helpindex(1757): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 C2TransitionsPersec;
	[DisplayName("C3 Transitions/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1758): ToInstance, helpindex(1759): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 C3TransitionsPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_TapiSrv_Telephony
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("TapiSrv"): ToInstance, locale(1033): ToInstance, perfindex(1150): ToInstance, helpindex(1151): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_TapiSrv_Telephony : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Lines"): ToInstance, countertype(65536): ToInstance, perfindex(1152): ToInstance, helpindex(1153): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Lines;
	[DisplayName("Telephone Devices"): ToInstance, countertype(65536): ToInstance, perfindex(1154): ToInstance, helpindex(1155): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TelephoneDevices;
	[DisplayName("Active Lines"): ToInstance, countertype(65536): ToInstance, perfindex(1156): ToInstance, helpindex(1157): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ActiveLines;
	[DisplayName("Active Telephones"): ToInstance, countertype(65536): ToInstance, perfindex(1158): ToInstance, helpindex(1159): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ActiveTelephones;
	[DisplayName("Outgoing Calls/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(1160): ToInstance, helpindex(1161): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 OutgoingCallsPersec;
	[DisplayName("Incoming Calls/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(1162): ToInstance, helpindex(1163): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 IncomingCallsPersec;
	[DisplayName("Client Apps"): ToInstance, countertype(65536): ToInstance, perfindex(1164): ToInstance, helpindex(1165): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ClientApps;
	[DisplayName("Current Outgoing Calls"): ToInstance, countertype(65536): ToInstance, perfindex(1166): ToInstance, helpindex(1167): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 CurrentOutgoingCalls;
	[DisplayName("Current Incoming Calls"): ToInstance, countertype(65536): ToInstance, perfindex(1168): ToInstance, helpindex(1169): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 CurrentIncomingCalls;
};

//**************************************************************************
//* Class: Win32_PerfRawData_Tcpip_UDP
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("Tcpip"): ToInstance, locale(1033): ToInstance, perfindex(658): ToInstance, helpindex(659): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_Tcpip_UDP : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Datagrams/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(438): ToInstance, helpindex(661): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsPersec;
	[DisplayName("Datagrams Received/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(446): ToInstance, helpindex(663): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedPersec;
	[DisplayName("Datagrams No Port/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(664): ToInstance, helpindex(665): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsNoPortPersec;
	[DisplayName("Datagrams Received Errors"): ToInstance, countertype(65536): ToInstance, perfindex(666): ToInstance, helpindex(667): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsReceivedErrors;
	[DisplayName("Datagrams Sent/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(442): ToInstance, helpindex(669): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 DatagramsSentPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_Spooler_PrintQueue
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("Spooler"): ToInstance, locale(1033): ToInstance, perfindex(1450): ToInstance, helpindex(1451): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_Spooler_PrintQueue : Win32_PerfRawData
{
	[key] string Name = NULL;
	[DisplayName("Total Jobs Printed"): ToInstance, countertype(65536): ToInstance, perfindex(1452): ToInstance, helpindex(1453): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 TotalJobsPrinted;
	[DisplayName("Bytes Printed/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1454): ToInstance, helpindex(1455): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 BytesPrintedPersec;
	[DisplayName("Total Pages Printed"): ToInstance, countertype(65536): ToInstance, perfindex(1456): ToInstance, helpindex(1457): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 TotalPagesPrinted;
	[perfdefault: ToInstance, DisplayName("Jobs"): ToInstance, countertype(65536): ToInstance, perfindex(1458): ToInstance, helpindex(1459): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Jobs;
	[DisplayName("References"): ToInstance, countertype(65536): ToInstance, perfindex(1460): ToInstance, helpindex(1461): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 References;
	[DisplayName("Max References"): ToInstance, countertype(65536): ToInstance, perfindex(1462): ToInstance, helpindex(1463): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 MaxReferences;
	[DisplayName("Jobs Spooling"): ToInstance, countertype(65536): ToInstance, perfindex(1464): ToInstance, helpindex(1465): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 JobsSpooling;
	[DisplayName("Max Jobs Spooling"): ToInstance, countertype(65536): ToInstance, perfindex(1466): ToInstance, helpindex(1467): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 MaxJobsSpooling;
	[DisplayName("Out of Paper Errors"): ToInstance, countertype(65536): ToInstance, perfindex(1468): ToInstance, helpindex(1469): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 OutofPaperErrors;
	[DisplayName("Not Ready Errors"): ToInstance, countertype(65536): ToInstance, perfindex(1470): ToInstance, helpindex(1471): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 NotReadyErrors;
	[DisplayName("Job Errors"): ToInstance, countertype(65536): ToInstance, perfindex(1472): ToInstance, helpindex(1473): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 JobErrors;
	[DisplayName("Enumerate Network Printer Calls"): ToInstance, countertype(65536): ToInstance, perfindex(1474): ToInstance, helpindex(1475): ToInstance, defaultscale(-1): ToInstance, perfdetail(400): ToInstance] uint32 EnumerateNetworkPrinterCalls;
	[DisplayName("Add Network Printer Calls"): ToInstance, countertype(65536): ToInstance, perfindex(1476): ToInstance, helpindex(1477): ToInstance, defaultscale(-1): ToInstance, perfdetail(400): ToInstance] uint32 AddNetworkPrinterCalls;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfDisk_PhysicalDisk
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfDisk"): ToInstance, locale(1033): ToInstance, perfindex(234): ToInstance, helpindex(235): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfDisk_PhysicalDisk : Win32_PerfRawData
{
	[key] string Name = NULL;
	[DisplayName("Current Disk Queue Length"): ToInstance, countertype(65536): ToInstance, perfindex(198): ToInstance, helpindex(199): ToInstance, defaultscale(1): ToInstance, perfdetail(100): ToInstance] uint32 CurrentDiskQueueLength;
	[DisplayName("% Disk Time"): ToInstance, countertype(542573824): ToInstance, perfindex(200): ToInstance, helpindex(201): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskTime;
	[perfdefault: ToInstance, DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(200): ToInstance, helpindex(201): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskTime_Base;
	[DisplayName("Avg. Disk Queue Length"): ToInstance, countertype(5571840): ToInstance, perfindex(1400): ToInstance, helpindex(1401): ToInstance, defaultscale(2): ToInstance, perfdetail(100): ToInstance] uint64 AvgDiskQueueLength;
	[DisplayName("% Disk Read Time"): ToInstance, countertype(542573824): ToInstance, perfindex(202): ToInstance, helpindex(203): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskReadTime;
	[DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(202): ToInstance, helpindex(203): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskReadTime_Base;
	[DisplayName("Avg. Disk Read Queue Length"): ToInstance, countertype(5571840): ToInstance, perfindex(1402): ToInstance, helpindex(1403): ToInstance, defaultscale(2): ToInstance, perfdetail(100): ToInstance] uint64 AvgDiskReadQueueLength;
	[DisplayName("% Disk Write Time"): ToInstance, countertype(542573824): ToInstance, perfindex(204): ToInstance, helpindex(205): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskWriteTime;
	[DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(204): ToInstance, helpindex(205): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentDiskWriteTime_Base;
	[DisplayName("Avg. Disk Write Queue Length"): ToInstance, countertype(5571840): ToInstance, perfindex(1404): ToInstance, helpindex(1405): ToInstance, defaultscale(2): ToInstance, perfdetail(100): ToInstance] uint64 AvgDiskWriteQueueLength;
	[DisplayName("Avg. Disk sec/Transfer"): ToInstance, countertype(805438464): ToInstance, perfindex(206): ToInstance, helpindex(207): ToInstance, defaultscale(3): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerTransfer;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(206): ToInstance, helpindex(207): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerTransfer_Base;
	[DisplayName("Avg. Disk sec/Read"): ToInstance, countertype(805438464): ToInstance, perfindex(208): ToInstance, helpindex(209): ToInstance, defaultscale(3): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerRead;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(208): ToInstance, helpindex(209): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerRead_Base;
	[DisplayName("Avg. Disk sec/Write"): ToInstance, countertype(805438464): ToInstance, perfindex(210): ToInstance, helpindex(211): ToInstance, defaultscale(3): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerWrite;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(210): ToInstance, helpindex(211): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 AvgDisksecPerWrite_Base;
	[DisplayName("Disk Transfers/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(212): ToInstance, helpindex(213): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 DiskTransfersPersec;
	[DisplayName("Disk Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(214): ToInstance, helpindex(215): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 DiskReadsPersec;
	[DisplayName("Disk Writes/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(216): ToInstance, helpindex(217): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 DiskWritesPersec;
	[DisplayName("Disk Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(218): ToInstance, helpindex(219): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 DiskBytesPersec;
	[DisplayName("Disk Read Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(220): ToInstance, helpindex(221): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 DiskReadBytesPersec;
	[DisplayName("Disk Write Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(222): ToInstance, helpindex(223): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 DiskWriteBytesPersec;
	[DisplayName("Avg. Disk Bytes/Transfer"): ToInstance, countertype(1073874176): ToInstance, perfindex(224): ToInstance, helpindex(225): ToInstance, defaultscale(-2): ToInstance, perfdetail(300): ToInstance] uint64 AvgDiskBytesPerTransfer;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(224): ToInstance, helpindex(225): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 AvgDiskBytesPerTransfer_Base;
	[DisplayName("Avg. Disk Bytes/Read"): ToInstance, countertype(1073874176): ToInstance, perfindex(226): ToInstance, helpindex(227): ToInstance, defaultscale(-2): ToInstance, perfdetail(300): ToInstance] uint64 AvgDiskBytesPerRead;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(226): ToInstance, helpindex(227): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 AvgDiskBytesPerRead_Base;
	[DisplayName("Avg. Disk Bytes/Write"): ToInstance, countertype(1073874176): ToInstance, perfindex(228): ToInstance, helpindex(229): ToInstance, defaultscale(-2): ToInstance, perfdetail(300): ToInstance] uint64 AvgDiskBytesPerWrite;
	[DisplayName(""): ToInstance, countertype(1073939458): ToInstance, perfindex(228): ToInstance, helpindex(229): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 AvgDiskBytesPerWrite_Base;
	[DisplayName("% Idle Time"): ToInstance, countertype(542573824): ToInstance, perfindex(1482): ToInstance, helpindex(1483): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentIdleTime;
	[DisplayName(""): ToInstance, countertype(1073939712): ToInstance, perfindex(1482): ToInstance, helpindex(1483): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentIdleTime_Base;
	[DisplayName("Split IO/Sec"): ToInstance, countertype(272696320): ToInstance, perfindex(1484): ToInstance, helpindex(1485): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SplitIOPerSec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_JobObjectDetails
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(1548): ToInstance, helpindex(1549): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfProc_JobObjectDetails : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("% Processor Time"): ToInstance, countertype(542180608): ToInstance, perfindex(6): ToInstance, helpindex(189): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentProcessorTime;
	[DisplayName("% User Time"): ToInstance, countertype(542180608): ToInstance, perfindex(142): ToInstance, helpindex(157): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentUserTime;
	[DisplayName("% Privileged Time"): ToInstance, countertype(542180608): ToInstance, perfindex(144): ToInstance, helpindex(159): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentPrivilegedTime;
	[DisplayName("Virtual Bytes Peak"): ToInstance, countertype(65792): ToInstance, perfindex(172): ToInstance, helpindex(173): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 VirtualBytesPeak;
	[DisplayName("Virtual Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(174): ToInstance, helpindex(175): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 VirtualBytes;
	[DisplayName("Page Faults/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(28): ToInstance, helpindex(177): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 PageFaultsPersec;
	[DisplayName("Working Set Peak"): ToInstance, countertype(65792): ToInstance, perfindex(178): ToInstance, helpindex(179): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 WorkingSetPeak;
	[DisplayName("Working Set"): ToInstance, countertype(65792): ToInstance, perfindex(180): ToInstance, helpindex(181): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 WorkingSet;
	[DisplayName("Page File Bytes Peak"): ToInstance, countertype(65792): ToInstance, perfindex(182): ToInstance, helpindex(183): ToInstance, defaultscale(-6): ToInstance, perfdetail(200): ToInstance] uint64 PageFileBytesPeak;
	[DisplayName("Page File Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(184): ToInstance, helpindex(185): ToInstance, defaultscale(-6): ToInstance, perfdetail(200): ToInstance] uint64 PageFileBytes;
	[DisplayName("Private Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(186): ToInstance, helpindex(187): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 PrivateBytes;
	[DisplayName("Thread Count"): ToInstance, countertype(65536): ToInstance, perfindex(680): ToInstance, helpindex(681): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ThreadCount;
	[DisplayName("Priority Base"): ToInstance, countertype(65536): ToInstance, perfindex(682): ToInstance, helpindex(683): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PriorityBase;
	[DisplayName("Elapsed Time"): ToInstance, countertype(807666944): ToInstance, perfindex(684): ToInstance, helpindex(685): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 ElapsedTime;
	[DisplayName("ID Process"): ToInstance, countertype(65792): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint64 IDProcess;
	[DisplayName("Creating Process ID"): ToInstance, countertype(65792): ToInstance, perfindex(1410): ToInstance, helpindex(1411): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint64 CreatingProcessID;
	[DisplayName("Pool Paged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint32 PoolPagedBytes;
	[DisplayName("Pool Nonpaged Bytes"): ToInstance, countertype(65536): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint32 PoolNonpagedBytes;
	[DisplayName("Handle Count"): ToInstance, countertype(65536): ToInstance, perfindex(952): ToInstance, helpindex(953): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 HandleCount;
	[DisplayName("IO Read Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1412): ToInstance, helpindex(1413): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOReadOperationsPersec;
	[DisplayName("IO Write Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1414): ToInstance, helpindex(1415): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOWriteOperationsPersec;
	[DisplayName("IO Data Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1416): ToInstance, helpindex(1417): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IODataOperationsPersec;
	[DisplayName("IO Other Operations/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1418): ToInstance, helpindex(1419): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOOtherOperationsPersec;
	[DisplayName("IO Read Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1420): ToInstance, helpindex(1421): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOReadBytesPersec;
	[DisplayName("IO Write Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1422): ToInstance, helpindex(1423): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOWriteBytesPersec;
	[DisplayName("IO Data Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1424): ToInstance, helpindex(1425): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IODataBytesPersec;
	[DisplayName("IO Other Bytes/sec"): ToInstance, countertype(272696576): ToInstance, perfindex(1426): ToInstance, helpindex(1427): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 IOOtherBytesPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_Thread
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(232): ToInstance, helpindex(233): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_PerfProc_Thread : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("% Processor Time"): ToInstance, countertype(542180608): ToInstance, perfindex(6): ToInstance, helpindex(191): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint64 PercentProcessorTime;
	[DisplayName("% User Time"): ToInstance, countertype(542180608): ToInstance, perfindex(142): ToInstance, helpindex(193): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentUserTime;
	[DisplayName("% Privileged Time"): ToInstance, countertype(542180608): ToInstance, perfindex(144): ToInstance, helpindex(195): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint64 PercentPrivilegedTime;
	[DisplayName("Context Switches/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(146): ToInstance, helpindex(197): ToInstance, defaultscale(-2): ToInstance, perfdetail(200): ToInstance] uint32 ContextSwitchesPersec;
	[DisplayName("Elapsed Time"): ToInstance, countertype(807666944): ToInstance, perfindex(684): ToInstance, helpindex(699): ToInstance, defaultscale(-4): ToInstance, perfdetail(200): ToInstance] uint64 ElapsedTime;
	[DisplayName("Priority Current"): ToInstance, countertype(65536): ToInstance, perfindex(694): ToInstance, helpindex(695): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PriorityCurrent;
	[DisplayName("Priority Base"): ToInstance, countertype(65536): ToInstance, perfindex(682): ToInstance, helpindex(697): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PriorityBase;
	[DisplayName("Start Address"): ToInstance, countertype(0): ToInstance, perfindex(706): ToInstance, helpindex(707): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 StartAddress;
	[DisplayName("Thread State"): ToInstance, countertype(65536): ToInstance, perfindex(46): ToInstance, helpindex(47): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 ThreadState;
	[DisplayName("Thread Wait Reason"): ToInstance, countertype(65536): ToInstance, perfindex(336): ToInstance, helpindex(337): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 ThreadWaitReason;
	[DisplayName("ID Process"): ToInstance, countertype(65536): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 IDProcess;
	[DisplayName("ID Thread"): ToInstance, countertype(65536): ToInstance, perfindex(804): ToInstance, helpindex(805): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 IDThread;
};

//**************************************************************************
//* Class: Win32_PerfRawData_Tcpip_ICMP
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("Tcpip"): ToInstance, locale(1033): ToInstance, perfindex(582): ToInstance, helpindex(583): ToInstance, perfdetail(200): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_Tcpip_ICMP : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Messages/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(584): ToInstance, helpindex(585): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 MessagesPersec;
	[DisplayName("Messages Received/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(586): ToInstance, helpindex(587): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 MessagesReceivedPersec;
	[DisplayName("Messages Received Errors"): ToInstance, countertype(65536): ToInstance, perfindex(588): ToInstance, helpindex(589): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 MessagesReceivedErrors;
	[DisplayName("Received Dest. Unreachable"): ToInstance, countertype(65536): ToInstance, perfindex(590): ToInstance, helpindex(591): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ReceivedDestUnreachable;
	[DisplayName("Received Time Exceeded"): ToInstance, countertype(65536): ToInstance, perfindex(592): ToInstance, helpindex(593): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 ReceivedTimeExceeded;
	[DisplayName("Received Parameter Problem"): ToInstance, countertype(65536): ToInstance, perfindex(594): ToInstance, helpindex(595): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 ReceivedParameterProblem;
	[DisplayName("Received Source Quench"): ToInstance, countertype(65536): ToInstance, perfindex(596): ToInstance, helpindex(597): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 ReceivedSourceQuench;
	[DisplayName("Received Redirect/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(598): ToInstance, helpindex(599): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 ReceivedRedirectPersec;
	[DisplayName("Received Echo/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(600): ToInstance, helpindex(601): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 ReceivedEchoPersec;
	[DisplayName("Received Echo Reply/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(602): ToInstance, helpindex(603): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 ReceivedEchoReplyPersec;
	[DisplayName("Received Timestamp/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(604): ToInstance, helpindex(605): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 ReceivedTimestampPersec;
	[DisplayName("Received Timestamp Reply/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(606): ToInstance, helpindex(607): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 ReceivedTimestampReplyPersec;
	[DisplayName("Received Address Mask"): ToInstance, countertype(65536): ToInstance, perfindex(608): ToInstance, helpindex(609): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 ReceivedAddressMask;
	[DisplayName("Received Address Mask Reply"): ToInstance, countertype(65536): ToInstance, perfindex(610): ToInstance, helpindex(611): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 ReceivedAddressMaskReply;
	[DisplayName("Messages Sent/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(612): ToInstance, helpindex(613): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 MessagesSentPersec;
	[DisplayName("Messages Outbound Errors"): ToInstance, countertype(65536): ToInstance, perfindex(614): ToInstance, helpindex(615): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 MessagesOutboundErrors;
	[DisplayName("Sent Destination Unreachable"): ToInstance, countertype(65536): ToInstance, perfindex(616): ToInstance, helpindex(617): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SentDestinationUnreachable;
	[DisplayName("Sent Time Exceeded"): ToInstance, countertype(65536): ToInstance, perfindex(618): ToInstance, helpindex(619): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 SentTimeExceeded;
	[DisplayName("Sent Parameter Problem"): ToInstance, countertype(65536): ToInstance, perfindex(620): ToInstance, helpindex(621): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 SentParameterProblem;
	[DisplayName("Sent Source Quench"): ToInstance, countertype(65536): ToInstance, perfindex(622): ToInstance, helpindex(623): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 SentSourceQuench;
	[DisplayName("Sent Redirect/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(624): ToInstance, helpindex(625): ToInstance, defaultscale(-1): ToInstance, perfdetail(200): ToInstance] uint32 SentRedirectPersec;
	[DisplayName("Sent Echo/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(626): ToInstance, helpindex(627): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 SentEchoPersec;
	[DisplayName("Sent Echo Reply/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(628): ToInstance, helpindex(629): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 SentEchoReplyPersec;
	[DisplayName("Sent Timestamp/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(630): ToInstance, helpindex(631): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 SentTimestampPersec;
	[DisplayName("Sent Timestamp Reply/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(632): ToInstance, helpindex(633): ToInstance, defaultscale(-1): ToInstance, perfdetail(300): ToInstance] uint32 SentTimestampReplyPersec;
	[DisplayName("Sent Address Mask"): ToInstance, countertype(65536): ToInstance, perfindex(634): ToInstance, helpindex(635): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 SentAddressMask;
	[DisplayName("Sent Address Mask Reply"): ToInstance, countertype(65536): ToInstance, perfindex(636): ToInstance, helpindex(637): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 SentAddressMaskReply;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfOS_Memory
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfOS"): ToInstance, locale(1033): ToInstance, perfindex(4): ToInstance, helpindex(5): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_PerfOS_Memory : Win32_PerfRawData
{
	[DisplayName("Page Faults/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(28): ToInstance, helpindex(29): ToInstance, defaultscale(-1): ToInstance, perfdetail(100): ToInstance] uint32 PageFaultsPersec;
	[DisplayName("Available Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(24): ToInstance, helpindex(25): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 AvailableBytes;
	[DisplayName("Committed Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(26): ToInstance, helpindex(27): ToInstance, defaultscale(-6): ToInstance, perfdetail(300): ToInstance] uint64 CommittedBytes;
	[DisplayName("Commit Limit"): ToInstance, countertype(65792): ToInstance, perfindex(30): ToInstance, helpindex(31): ToInstance, defaultscale(-6): ToInstance, perfdetail(400): ToInstance] uint64 CommitLimit;
	[DisplayName("Write Copies/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(32): ToInstance, helpindex(33): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint32 WriteCopiesPersec;
	[DisplayName("Transition Faults/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(34): ToInstance, helpindex(35): ToInstance, defaultscale(-1): ToInstance, perfdetail(400): ToInstance] uint32 TransitionFaultsPersec;
	[DisplayName("Cache Faults/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(36): ToInstance, helpindex(37): ToInstance, defaultscale(-1): ToInstance, perfdetail(400): ToInstance] uint32 CacheFaultsPersec;
	[DisplayName("Demand Zero Faults/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(38): ToInstance, helpindex(39): ToInstance, defaultscale(-1): ToInstance, perfdetail(400): ToInstance] uint32 DemandZeroFaultsPersec;
	[perfdefault: ToInstance, DisplayName("Pages/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(40): ToInstance, helpindex(41): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 PagesPersec;
	[DisplayName("Pages Input/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(822): ToInstance, helpindex(823): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 PagesInputPersec;
	[DisplayName("Page Reads/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(42): ToInstance, helpindex(43): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 PageReadsPersec;
	[DisplayName("Pages Output/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(48): ToInstance, helpindex(49): ToInstance, defaultscale(0): ToInstance, perfdetail(200): ToInstance] uint32 PagesOutputPersec;
	[DisplayName("Pool Paged Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 PoolPagedBytes;
	[DisplayName("Pool Nonpaged Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 PoolNonpagedBytes;
	[DisplayName("Page Writes/sec"): ToInstance, countertype(272696320): ToInstance, perfindex(50): ToInstance, helpindex(51): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 PageWritesPersec;
	[DisplayName("Pool Paged Allocs"): ToInstance, countertype(65536): ToInstance, perfindex(60): ToInstance, helpindex(61): ToInstance, defaultscale(-2): ToInstance, perfdetail(400): ToInstance] uint32 PoolPagedAllocs;
	[DisplayName("Pool Nonpaged Allocs"): ToInstance, countertype(65536): ToInstance, perfindex(64): ToInstance, helpindex(65): ToInstance, defaultscale(-2): ToInstance, perfdetail(400): ToInstance] uint32 PoolNonpagedAllocs;
	[DisplayName("Free System Page Table Entries"): ToInstance, countertype(65536): ToInstance, perfindex(678): ToInstance, helpindex(679): ToInstance, defaultscale(-2): ToInstance, perfdetail(400): ToInstance] uint32 FreeSystemPageTableEntries;
	[DisplayName("Cache Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(818): ToInstance, helpindex(819): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 CacheBytes;
	[DisplayName("Cache Bytes Peak"): ToInstance, countertype(65792): ToInstance, perfindex(820): ToInstance, helpindex(821): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 CacheBytesPeak;
	[DisplayName("Pool Paged Resident Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(66): ToInstance, helpindex(63): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 PoolPagedResidentBytes;
	[DisplayName("System Code Total Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(68): ToInstance, helpindex(69): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 SystemCodeTotalBytes;
	[DisplayName("System Code Resident Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(70): ToInstance, helpindex(71): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 SystemCodeResidentBytes;
	[DisplayName("System Driver Total Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(72): ToInstance, helpindex(73): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 SystemDriverTotalBytes;
	[DisplayName("System Driver Resident Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(74): ToInstance, helpindex(75): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 SystemDriverResidentBytes;
	[DisplayName("System Cache Resident Bytes"): ToInstance, countertype(65792): ToInstance, perfindex(76): ToInstance, helpindex(77): ToInstance, defaultscale(-5): ToInstance, perfdetail(200): ToInstance] uint64 SystemCacheResidentBytes;
	[DisplayName("% Committed Bytes In Use"): ToInstance, countertype(537003008): ToInstance, perfindex(1406): ToInstance, helpindex(1407): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 PercentCommittedBytesInUse;
	[DisplayName(""): ToInstance, countertype(1073939459): ToInstance, perfindex(1406): ToInstance, helpindex(1407): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint32 PercentCommittedBytesInUse_Base;
	[DisplayName("Available KBytes"): ToInstance, countertype(65792): ToInstance, perfindex(1380): ToInstance, helpindex(1381): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint64 AvailableKBytes;
	[DisplayName("Available MBytes"): ToInstance, countertype(65792): ToInstance, perfindex(1382): ToInstance, helpindex(1383): ToInstance, defaultscale(0): ToInstance, perfdetail(300): ToInstance] uint64 AvailableMBytes;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_ThreadDetails_Costly
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(816): ToInstance, helpindex(817): ToInstance, perfdetail(400): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, costly: ToInstance]
class Win32_PerfRawData_PerfProc_ThreadDetails_Costly : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("User PC"): ToInstance, countertype(256): ToInstance, perfindex(708): ToInstance, helpindex(709): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 UserPC;
};

//**************************************************************************
//* Class: Win32_PerfRawData_MSDTC_DistributedTransactionCoordinator
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("MSDTC"): ToInstance, locale(1033): ToInstance, perfindex(2184): ToInstance, helpindex(2185): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfRawData_MSDTC_DistributedTransactionCoordinator : Win32_PerfRawData
{
	[perfdefault: ToInstance, DisplayName("Active Transactions"): ToInstance, countertype(65536): ToInstance, perfindex(2186): ToInstance, helpindex(2187): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ActiveTransactions;
	[DisplayName("Committed Transactions"): ToInstance, countertype(65536): ToInstance, perfindex(2188): ToInstance, helpindex(2189): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 CommittedTransactions;
	[DisplayName("Aborted Transactions"): ToInstance, countertype(65536): ToInstance, perfindex(2190): ToInstance, helpindex(2191): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 AbortedTransactions;
	[DisplayName("In Doubt Transactions"): ToInstance, countertype(65536): ToInstance, perfindex(2192): ToInstance, helpindex(2193): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 InDoubtTransactions;
	[DisplayName("Active Transactions Maximum"): ToInstance, countertype(65536): ToInstance, perfindex(2194): ToInstance, helpindex(2195): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ActiveTransactionsMaximum;
	[DisplayName("Force Committed Transactions"): ToInstance, countertype(65536): ToInstance, perfindex(2196): ToInstance, helpindex(2197): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ForceCommittedTransactions;
	[DisplayName("Force Aborted Transactions"): ToInstance, countertype(65536): ToInstance, perfindex(2198): ToInstance, helpindex(2199): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ForceAbortedTransactions;
	[DisplayName("Response Time -- Minimum"): ToInstance, countertype(65536): ToInstance, perfindex(2200): ToInstance, helpindex(2201): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ResponseTimeMinimum;
	[DisplayName("Response Time -- Average"): ToInstance, countertype(65536): ToInstance, perfindex(2202): ToInstance, helpindex(2203): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ResponseTimeAverage;
	[DisplayName("Response Time -- Maximum"): ToInstance, countertype(65536): ToInstance, perfindex(2204): ToInstance, helpindex(2205): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 ResponseTimeMaximum;
	[DisplayName("Transactions/sec"): ToInstance, countertype(65536): ToInstance, perfindex(2206): ToInstance, helpindex(2207): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 TransactionsPersec;
	[DisplayName("Committed Transactions/sec"): ToInstance, countertype(65536): ToInstance, perfindex(2208): ToInstance, helpindex(2209): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 CommittedTransactionsPersec;
	[DisplayName("Aborted Transactions/sec"): ToInstance, countertype(65536): ToInstance, perfindex(2210): ToInstance, helpindex(2211): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 AbortedTransactionsPersec;
};

//**************************************************************************
//* Class: Win32_PerfRawData_RSVP_RSVPService
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("RSVP"): ToInstance, locale(1033): ToInstance, perfindex(1848): ToInstance, helpindex(1849): ToInstance, perfdetail(100): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance]
class Win32_PerfRawData_RSVP_RSVPService : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("Network Interfaces"): ToInstance, countertype(65536): ToInstance, perfindex(1850): ToInstance, helpindex(1851): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 NetworkInterfaces;
	[DisplayName("Network sockets"): ToInstance, countertype(65536): ToInstance, perfindex(1852): ToInstance, helpindex(1853): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Networksockets;
	[DisplayName("Timers"): ToInstance, countertype(65536): ToInstance, perfindex(1854): ToInstance, helpindex(1855): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 Timers;
	[DisplayName("RSVP sessions"): ToInstance, countertype(65536): ToInstance, perfindex(1856): ToInstance, helpindex(1857): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 RSVPsessions;
	[DisplayName("QoS clients"): ToInstance, countertype(65536): ToInstance, perfindex(1858): ToInstance, helpindex(1859): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 QoSclients;
	[DisplayName("QoS-enabled senders"): ToInstance, countertype(65536): ToInstance, perfindex(1860): ToInstance, helpindex(1861): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 QoSenabledsenders;
	[DisplayName("QoS-enabled receivers"): ToInstance, countertype(65536): ToInstance, perfindex(1862): ToInstance, helpindex(1863): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 QoSenabledreceivers;
	[DisplayName("Failed QoS requests"): ToInstance, countertype(65536): ToInstance, perfindex(1864): ToInstance, helpindex(1865): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FailedQoSrequests;
	[DisplayName("Failed QoS sends"): ToInstance, countertype(65536): ToInstance, perfindex(1866): ToInstance, helpindex(1867): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 FailedQoSsends;
	[DisplayName("QoS notifications"): ToInstance, countertype(65536): ToInstance, perfindex(1868): ToInstance, helpindex(1869): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 QoSnotifications;
	[DisplayName("Bytes in QoS notifications"): ToInstance, countertype(65536): ToInstance, perfindex(1870): ToInstance, helpindex(1871): ToInstance, defaultscale(0): ToInstance, perfdetail(100): ToInstance] uint32 BytesinQoSnotifications;
};

//**************************************************************************
//* Class: Win32_PerfRawData_PerfProc_ProcessAddressSpace_Costly
//* Derived from: Win32_PerfRawData
//**************************************************************************
[dynamic: ToInstance, provider("Nt5_GenericPerfProvider_V1"), registrykey("PerfProc"): ToInstance, locale(1033): ToInstance, perfindex(786): ToInstance, helpindex(787): ToInstance, perfdetail(400): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, costly: ToInstance]
class Win32_PerfRawData_PerfProc_ProcessAddressSpace_Costly : Win32_PerfRawData
{
	[key] string Name = NULL;
	[perfdefault: ToInstance, DisplayName("ID Process"): ToInstance, countertype(65792): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance, defaultscale(0): ToInstance, perfdetail(400): ToInstance] uint64 IDProcess;
	[DisplayName("Bytes Image Reserved"): ToInstance, countertype(65792): ToInstance, perfindex(776): ToInstance, helpindex(777): ToInstance, defaultscale(-4): ToInstance, perfdetail(400): ToInstance] uint64 BytesImageReserved;
	[DisplayName("Bytes Image Free"): ToInstance, countertype(65792): ToInstance, perfindex(778): ToInstance, helpindex(779): ToInstance, defaultscale(-4): ToInstance, perfdetail(400): ToInstance] uint64 BytesImageFree;
	[DisplayName("Bytes Reserved"): ToInstance, countertype(65792): ToInstance, perfindex(780): ToInstance, helpindex(781): ToInstance, defaultscale(-4): ToInstance, perfdetail(400): ToInstance] uint64 BytesReserved;
	[DisplayName("Bytes Free"): ToInstance, countertype(65792): ToInstance, perfindex(782): ToInstance, helpindex(783): ToInstance, defaultscale(-4): ToInstance, perfdetail(400): ToInstance] uint64 BytesFree;
	[DisplayName("Mapped Space No Access"): ToInstance, countertype(65792): ToInstance, perfindex(710): ToInstance, helpindex(711): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceNoAccess;
	[DisplayName("Mapped Space Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(712): ToInstance, helpindex(713): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceReadOnly;
	[DisplayName("Mapped Space Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(714): ToInstance, helpindex(715): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceReadPerWrite;
	[DisplayName("Mapped Space Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(716): ToInstance, helpindex(717): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceWriteCopy;
	[DisplayName("Mapped Space Executable"): ToInstance, countertype(65792): ToInstance, perfindex(718): ToInstance, helpindex(719): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceExecutable;
	[DisplayName("Mapped Space Exec Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(720): ToInstance, helpindex(721): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceExecReadOnly;
	[DisplayName("Mapped Space Exec Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(722): ToInstance, helpindex(723): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceExecReadPerWrite;
	[DisplayName("Mapped Space Exec Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(724): ToInstance, helpindex(725): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 MappedSpaceExecWriteCopy;
	[DisplayName("Reserved Space No Access"): ToInstance, countertype(65792): ToInstance, perfindex(726): ToInstance, helpindex(727): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceNoAccess;
	[DisplayName("Reserved Space Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(728): ToInstance, helpindex(729): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceReadOnly;
	[DisplayName("Reserved Space Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(730): ToInstance, helpindex(731): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceReadPerWrite;
	[DisplayName("Reserved Space Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(732): ToInstance, helpindex(733): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceWriteCopy;
	[DisplayName("Reserved Space Executable"): ToInstance, countertype(65792): ToInstance, perfindex(734): ToInstance, helpindex(735): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceExecutable;
	[DisplayName("Reserved Space Exec Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(736): ToInstance, helpindex(737): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceExecReadOnly;
	[DisplayName("Reserved Space Exec Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(738): ToInstance, helpindex(739): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceExecReadPerWrite;
	[DisplayName("Reserved Space Exec Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(742): ToInstance, helpindex(743): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ReservedSpaceExecWriteCopy;
	[DisplayName("Unassigned Space No Access"): ToInstance, countertype(65792): ToInstance, perfindex(744): ToInstance, helpindex(745): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceNoAccess;
	[DisplayName("Unassigned Space Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(746): ToInstance, helpindex(747): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceReadOnly;
	[DisplayName("Unassigned Space Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(748): ToInstance, helpindex(749): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceReadPerWrite;
	[DisplayName("Unassigned Space Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(750): ToInstance, helpindex(751): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceWriteCopy;
	[DisplayName("Unassigned Space Executable"): ToInstance, countertype(65792): ToInstance, perfindex(752): ToInstance, helpindex(753): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceExecutable;
	[DisplayName("Unassigned Space Exec Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(754): ToInstance, helpindex(755): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceExecReadOnly;
	[DisplayName("Unassigned Space Exec Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(756): ToInstance, helpindex(757): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceExecReadPerWrite;
	[DisplayName("Unassigned Space Exec Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(758): ToInstance, helpindex(759): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 UnassignedSpaceExecWriteCopy;
	[DisplayName("Image Space No Access"): ToInstance, countertype(65792): ToInstance, perfindex(760): ToInstance, helpindex(761): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceNoAccess;
	[DisplayName("Image Space Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(762): ToInstance, helpindex(763): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceReadOnly;
	[DisplayName("Image Space Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(764): ToInstance, helpindex(765): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceReadPerWrite;
	[DisplayName("Image Space Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(766): ToInstance, helpindex(767): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceWriteCopy;
	[DisplayName("Image Space Executable"): ToInstance, countertype(65792): ToInstance, perfindex(768): ToInstance, helpindex(769): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceExecutable;
	[DisplayName("Image Space Exec Read Only"): ToInstance, countertype(65792): ToInstance, perfindex(770): ToInstance, helpindex(771): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceExecReadOnly;
	[DisplayName("Image Space Exec Read/Write"): ToInstance, countertype(65792): ToInstance, perfindex(772): ToInstance, helpindex(773): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceExecReadPerWrite;
	[DisplayName("Image Space Exec Write Copy"): ToInstance, countertype(65792): ToInstance, perfindex(774): ToInstance, helpindex(775): ToInstance, defaultscale(-5): ToInstance, perfdetail(400): ToInstance] uint64 ImageSpaceExecWriteCopy;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData
//* Derived from: Win32_Perf
//**************************************************************************
[abstract, Locale(1033)]
class Win32_PerfFormattedData : Win32_Perf
{
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfOS_Processor
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfOS"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfOS_Processor"): ToInstance, perfindex(238): ToInstance, helpindex(239): ToInstance]
class Win32_PerfFormattedData_PerfOS_Processor : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_100NSEC_TIMER_INV"): ToInstance, Counter("PercentProcessorTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(6): ToInstance, helpindex(7): ToInstance] uint64 PercentProcessorTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentUserTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(142): ToInstance, helpindex(143): ToInstance] uint64 PercentUserTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentPrivilegedTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(144): ToInstance, helpindex(145): ToInstance] uint64 PercentPrivilegedTime;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("InterruptsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(148): ToInstance, helpindex(149): ToInstance] uint32 InterruptsPersec;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentDPCTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(696): ToInstance, helpindex(339): ToInstance] uint64 PercentDPCTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentInterruptTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(698): ToInstance, helpindex(397): ToInstance] uint64 PercentInterruptTime;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DPCsQueuedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1334): ToInstance, helpindex(1335): ToInstance] uint32 DPCsQueuedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DPCRate"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1336): ToInstance, helpindex(1337): ToInstance] uint32 DPCRate;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentIdleTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1746): ToInstance, helpindex(1747): ToInstance] uint64 PercentIdleTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentC1Time"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1748): ToInstance, helpindex(1749): ToInstance] uint64 PercentC1Time;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentC2Time"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1750): ToInstance, helpindex(1751): ToInstance] uint64 PercentC2Time;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentC3Time"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1752): ToInstance, helpindex(1753): ToInstance] uint64 PercentC3Time;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("C1TransitionsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1754): ToInstance, helpindex(1755): ToInstance] uint64 C1TransitionsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("C2TransitionsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1756): ToInstance, helpindex(1757): ToInstance] uint64 C2TransitionsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("C3TransitionsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1758): ToInstance, helpindex(1759): ToInstance] uint64 C3TransitionsPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfNet_Browser
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfNet"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfNet_Browser"): ToInstance, perfindex(52): ToInstance, helpindex(53): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_PerfNet_Browser : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("AnnouncementsServerPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(54): ToInstance, helpindex(55): ToInstance] uint64 AnnouncementsServerPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("AnnouncementsDomainPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(78): ToInstance, helpindex(79): ToInstance] uint64 AnnouncementsDomainPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("AnnouncementsTotalPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(188): ToInstance, helpindex(813): ToInstance] uint64 AnnouncementsTotalPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ElectionPacketsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(80): ToInstance, helpindex(81): ToInstance] uint32 ElectionPacketsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("MailslotWritesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(82): ToInstance, helpindex(83): ToInstance] uint32 MailslotWritesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ServerListRequestsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(84): ToInstance, helpindex(85): ToInstance] uint32 ServerListRequestsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("EnumerationsServerPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(156): ToInstance, helpindex(161): ToInstance] uint32 EnumerationsServerPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("EnumerationsDomainPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(158): ToInstance, helpindex(163): ToInstance] uint32 EnumerationsDomainPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("EnumerationsOtherPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(160): ToInstance, helpindex(165): ToInstance] uint32 EnumerationsOtherPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("EnumerationsTotalPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(190): ToInstance, helpindex(815): ToInstance] uint32 EnumerationsTotalPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MissedServerAnnouncements"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(162): ToInstance, helpindex(167): ToInstance] uint32 MissedServerAnnouncements;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MissedMailslotDatagrams"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(164): ToInstance, helpindex(169): ToInstance] uint32 MissedMailslotDatagrams;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MissedServerListRequests"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(166): ToInstance, helpindex(171): ToInstance] uint32 MissedServerListRequests;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ServerAnnounceAllocationsFailedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(168): ToInstance, helpindex(381): ToInstance] uint32 ServerAnnounceAllocationsFailedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MailslotAllocationsFailed"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(170): ToInstance, helpindex(383): ToInstance] uint32 MailslotAllocationsFailed;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MailslotReceivesFailed"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(806): ToInstance, helpindex(385): ToInstance] uint32 MailslotReceivesFailed;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MailslotWritesFailed"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(808): ToInstance, helpindex(387): ToInstance] uint32 MailslotWritesFailed;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("MailslotOpensFailedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(810): ToInstance, helpindex(807): ToInstance] uint32 MailslotOpensFailedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DuplicateMasterAnnouncements"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(812): ToInstance, helpindex(809): ToInstance] uint32 DuplicateMasterAnnouncements;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IllegalDatagramsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(814): ToInstance, helpindex(811): ToInstance] uint64 IllegalDatagramsPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_Image_Costly
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_Image_Costly"): ToInstance, perfindex(740): ToInstance, helpindex(741): ToInstance]
class Win32_PerfFormattedData_PerfProc_Image_Costly : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("NoAccess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(788): ToInstance, helpindex(789): ToInstance] uint64 NoAccess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(790): ToInstance, helpindex(791): ToInstance] uint64 ReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(792): ToInstance, helpindex(793): ToInstance] uint64 ReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(794): ToInstance, helpindex(795): ToInstance] uint64 WriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("Executable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(796): ToInstance, helpindex(797): ToInstance] uint64 Executable;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ExecReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(798): ToInstance, helpindex(799): ToInstance] uint64 ExecReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ExecReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(800): ToInstance, helpindex(801): ToInstance] uint64 ExecReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ExecWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(802): ToInstance, helpindex(803): ToInstance] uint64 ExecWriteCopy;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfOS_PagingFile
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfOS"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfOS_PagingFile"): ToInstance, perfindex(700): ToInstance, helpindex(701): ToInstance]
class Win32_PerfFormattedData_PerfOS_PagingFile : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_RAW_FRACTION"): ToInstance, Counter("PercentUsage"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(702): ToInstance, helpindex(703): ToInstance, Base("PercentUsage_Base"): ToInstance] uint32 PercentUsage;
	[CookingType("PERF_RAW_FRACTION"): ToInstance, Counter("PercentUsagePeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(704): ToInstance, helpindex(705): ToInstance, Base("PercentUsagePeak_Base"): ToInstance] uint32 PercentUsagePeak;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PSched_PSchedPipe
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PSched"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PSched_PSchedPipe"): ToInstance, perfindex(1938): ToInstance, helpindex(1939): ToInstance]
class Win32_PerfFormattedData_PSched_PSchedPipe : Win32_PerfFormattedData
{
	[key] string Name = NULL;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfDisk_LogicalDisk
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfDisk"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfDisk_LogicalDisk"): ToInstance, perfindex(236): ToInstance, helpindex(237): ToInstance]
class Win32_PerfFormattedData_PerfDisk_LogicalDisk : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_RAW_FRACTION"): ToInstance, Counter("PercentFreeSpace"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(408): ToInstance, helpindex(409): ToInstance, Base("PercentFreeSpace_Base"): ToInstance] uint32 PercentFreeSpace;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FreeMegabytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(410): ToInstance, helpindex(411): ToInstance] uint32 FreeMegabytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CurrentDiskQueueLength"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(198): ToInstance, helpindex(199): ToInstance] uint32 CurrentDiskQueueLength;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentDiskTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(200): ToInstance, helpindex(201): ToInstance, Base("PercentDiskTime_Base"): ToInstance] uint64 PercentDiskTime;
	[CookingType("PERF_COUNTER_100NS_QUEUELEN_TYPE"): ToInstance, Counter("AvgDiskQueueLength"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1400): ToInstance, helpindex(1401): ToInstance] uint64 AvgDiskQueueLength;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentDiskReadTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(202): ToInstance, helpindex(203): ToInstance, Base("PercentDiskReadTime_Base"): ToInstance] uint64 PercentDiskReadTime;
	[CookingType("PERF_COUNTER_100NS_QUEUELEN_TYPE"): ToInstance, Counter("AvgDiskReadQueueLength"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1402): ToInstance, helpindex(1403): ToInstance] uint64 AvgDiskReadQueueLength;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentDiskWriteTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(204): ToInstance, helpindex(205): ToInstance, Base("PercentDiskWriteTime_Base"): ToInstance] uint64 PercentDiskWriteTime;
	[CookingType("PERF_COUNTER_100NS_QUEUELEN_TYPE"): ToInstance, Counter("AvgDiskWriteQueueLength"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1404): ToInstance, helpindex(1405): ToInstance] uint64 AvgDiskWriteQueueLength;
	[CookingType("PERF_AVERAGE_TIMER"): ToInstance, Counter("AvgDisksecPerTransfer"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(206): ToInstance, helpindex(207): ToInstance, Base("AvgDisksecPerTransfer_Base"): ToInstance] uint32 AvgDisksecPerTransfer;
	[CookingType("PERF_AVERAGE_TIMER"): ToInstance, Counter("AvgDisksecPerRead"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(208): ToInstance, helpindex(209): ToInstance, Base("AvgDisksecPerRead_Base"): ToInstance] uint32 AvgDisksecPerRead;
	[CookingType("PERF_AVERAGE_TIMER"): ToInstance, Counter("AvgDisksecPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(210): ToInstance, helpindex(211): ToInstance, Base("AvgDisksecPerWrite_Base"): ToInstance] uint32 AvgDisksecPerWrite;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DiskTransfersPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(212): ToInstance, helpindex(213): ToInstance] uint32 DiskTransfersPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DiskReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(214): ToInstance, helpindex(215): ToInstance] uint32 DiskReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DiskWritesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(216): ToInstance, helpindex(217): ToInstance] uint32 DiskWritesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("DiskBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(218): ToInstance, helpindex(219): ToInstance] uint64 DiskBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("DiskReadBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(220): ToInstance, helpindex(221): ToInstance] uint64 DiskReadBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("DiskWriteBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(222): ToInstance, helpindex(223): ToInstance] uint64 DiskWriteBytesPersec;
	[CookingType("PERF_AVERAGE_BULK"): ToInstance, Counter("AvgDiskBytesPerTransfer"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(224): ToInstance, helpindex(225): ToInstance, Base("AvgDiskBytesPerTransfer_Base"): ToInstance] uint64 AvgDiskBytesPerTransfer;
	[CookingType("PERF_AVERAGE_BULK"): ToInstance, Counter("AvgDiskBytesPerRead"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(226): ToInstance, helpindex(227): ToInstance, Base("AvgDiskBytesPerRead_Base"): ToInstance] uint64 AvgDiskBytesPerRead;
	[CookingType("PERF_AVERAGE_BULK"): ToInstance, Counter("AvgDiskBytesPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(228): ToInstance, helpindex(229): ToInstance, Base("AvgDiskBytesPerWrite_Base"): ToInstance] uint64 AvgDiskBytesPerWrite;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentIdleTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1482): ToInstance, helpindex(1483): ToInstance, Base("PercentIdleTime_Base"): ToInstance] uint64 PercentIdleTime;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SplitIOPerSec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1484): ToInstance, helpindex(1485): ToInstance] uint32 SplitIOPerSec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfOS_Objects
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfOS"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfOS_Objects"): ToInstance, perfindex(260): ToInstance, helpindex(261): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_PerfOS_Objects : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Processes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(248): ToInstance, helpindex(249): ToInstance] uint32 Processes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Threads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(250): ToInstance, helpindex(251): ToInstance] uint32 Threads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Events"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(252): ToInstance, helpindex(253): ToInstance] uint32 Events;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Semaphores"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(254): ToInstance, helpindex(255): ToInstance] uint32 Semaphores;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Mutexes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(256): ToInstance, helpindex(257): ToInstance] uint32 Mutexes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Sections"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(258): ToInstance, helpindex(259): ToInstance] uint32 Sections;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_Tcpip_UDP
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("Tcpip"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_Tcpip_UDP"): ToInstance, perfindex(658): ToInstance, helpindex(659): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_Tcpip_UDP : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(438): ToInstance, helpindex(661): ToInstance] uint32 DatagramsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(446): ToInstance, helpindex(663): ToInstance] uint32 DatagramsReceivedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsNoPortPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(664): ToInstance, helpindex(665): ToInstance] uint32 DatagramsNoPortPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DatagramsReceivedErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(666): ToInstance, helpindex(667): ToInstance] uint32 DatagramsReceivedErrors;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsSentPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(442): ToInstance, helpindex(669): ToInstance] uint32 DatagramsSentPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_TapiSrv_Telephony
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("TapiSrv"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_TapiSrv_Telephony"): ToInstance, perfindex(1150): ToInstance, helpindex(1151): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_TapiSrv_Telephony : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Lines"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1152): ToInstance, helpindex(1153): ToInstance] uint32 Lines;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TelephoneDevices"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1154): ToInstance, helpindex(1155): ToInstance] uint32 TelephoneDevices;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ActiveLines"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1156): ToInstance, helpindex(1157): ToInstance] uint32 ActiveLines;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ActiveTelephones"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1158): ToInstance, helpindex(1159): ToInstance] uint32 ActiveTelephones;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("OutgoingCallsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1160): ToInstance, helpindex(1161): ToInstance] uint32 OutgoingCallsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("IncomingCallsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1162): ToInstance, helpindex(1163): ToInstance] uint32 IncomingCallsPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ClientApps"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1164): ToInstance, helpindex(1165): ToInstance] uint32 ClientApps;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CurrentOutgoingCalls"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1166): ToInstance, helpindex(1167): ToInstance] uint32 CurrentOutgoingCalls;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CurrentIncomingCalls"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1168): ToInstance, helpindex(1169): ToInstance] uint32 CurrentIncomingCalls;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PSched_PSchedFlow
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PSched"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PSched_PSchedFlow"): ToInstance, perfindex(1936): ToInstance, helpindex(1937): ToInstance]
class Win32_PerfFormattedData_PSched_PSchedFlow : Win32_PerfFormattedData
{
	[key] string Name = NULL;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfDisk_PhysicalDisk
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfDisk"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfDisk_PhysicalDisk"): ToInstance, perfindex(234): ToInstance, helpindex(235): ToInstance]
class Win32_PerfFormattedData_PerfDisk_PhysicalDisk : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CurrentDiskQueueLength"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(198): ToInstance, helpindex(199): ToInstance] uint32 CurrentDiskQueueLength;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentDiskTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(200): ToInstance, helpindex(201): ToInstance, Base("PercentDiskTime_Base"): ToInstance] uint64 PercentDiskTime;
	[CookingType("PERF_COUNTER_100NS_QUEUELEN_TYPE"): ToInstance, Counter("AvgDiskQueueLength"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1400): ToInstance, helpindex(1401): ToInstance] uint64 AvgDiskQueueLength;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentDiskReadTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(202): ToInstance, helpindex(203): ToInstance, Base("PercentDiskReadTime_Base"): ToInstance] uint64 PercentDiskReadTime;
	[CookingType("PERF_COUNTER_100NS_QUEUELEN_TYPE"): ToInstance, Counter("AvgDiskReadQueueLength"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1402): ToInstance, helpindex(1403): ToInstance] uint64 AvgDiskReadQueueLength;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentDiskWriteTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(204): ToInstance, helpindex(205): ToInstance, Base("PercentDiskWriteTime_Base"): ToInstance] uint64 PercentDiskWriteTime;
	[CookingType("PERF_COUNTER_100NS_QUEUELEN_TYPE"): ToInstance, Counter("AvgDiskWriteQueueLength"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1404): ToInstance, helpindex(1405): ToInstance] uint64 AvgDiskWriteQueueLength;
	[CookingType("PERF_AVERAGE_TIMER"): ToInstance, Counter("AvgDisksecPerTransfer"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(206): ToInstance, helpindex(207): ToInstance, Base("AvgDisksecPerTransfer_Base"): ToInstance] uint32 AvgDisksecPerTransfer;
	[CookingType("PERF_AVERAGE_TIMER"): ToInstance, Counter("AvgDisksecPerRead"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(208): ToInstance, helpindex(209): ToInstance, Base("AvgDisksecPerRead_Base"): ToInstance] uint32 AvgDisksecPerRead;
	[CookingType("PERF_AVERAGE_TIMER"): ToInstance, Counter("AvgDisksecPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(210): ToInstance, helpindex(211): ToInstance, Base("AvgDisksecPerWrite_Base"): ToInstance] uint32 AvgDisksecPerWrite;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DiskTransfersPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(212): ToInstance, helpindex(213): ToInstance] uint32 DiskTransfersPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DiskReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(214): ToInstance, helpindex(215): ToInstance] uint32 DiskReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DiskWritesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(216): ToInstance, helpindex(217): ToInstance] uint32 DiskWritesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("DiskBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(218): ToInstance, helpindex(219): ToInstance] uint64 DiskBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("DiskReadBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(220): ToInstance, helpindex(221): ToInstance] uint64 DiskReadBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("DiskWriteBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(222): ToInstance, helpindex(223): ToInstance] uint64 DiskWriteBytesPersec;
	[CookingType("PERF_AVERAGE_BULK"): ToInstance, Counter("AvgDiskBytesPerTransfer"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(224): ToInstance, helpindex(225): ToInstance, Base("AvgDiskBytesPerTransfer_Base"): ToInstance] uint64 AvgDiskBytesPerTransfer;
	[CookingType("PERF_AVERAGE_BULK"): ToInstance, Counter("AvgDiskBytesPerRead"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(226): ToInstance, helpindex(227): ToInstance, Base("AvgDiskBytesPerRead_Base"): ToInstance] uint64 AvgDiskBytesPerRead;
	[CookingType("PERF_AVERAGE_BULK"): ToInstance, Counter("AvgDiskBytesPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(228): ToInstance, helpindex(229): ToInstance, Base("AvgDiskBytesPerWrite_Base"): ToInstance] uint64 AvgDiskBytesPerWrite;
	[CookingType("PERF_PRECISION_100NS_TIMER"): ToInstance, Counter("PercentIdleTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1482): ToInstance, helpindex(1483): ToInstance, Base("PercentIdleTime_Base"): ToInstance] uint64 PercentIdleTime;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SplitIOPerSec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1484): ToInstance, helpindex(1485): ToInstance] uint32 SplitIOPerSec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfOS_Cache
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfOS"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfOS_Cache"): ToInstance, perfindex(86): ToInstance, helpindex(87): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_PerfOS_Cache : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DataMapsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(88): ToInstance, helpindex(89): ToInstance] uint32 DataMapsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SyncDataMapsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(90): ToInstance, helpindex(91): ToInstance] uint32 SyncDataMapsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("AsyncDataMapsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(92): ToInstance, helpindex(93): ToInstance] uint32 AsyncDataMapsPersec;
	[CookingType("PERF_SAMPLE_FRACTION"): ToInstance, Counter("DataMapHitsPercent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(94): ToInstance, helpindex(95): ToInstance, Base("DataMapHitsPercent_Base"): ToInstance] uint32 DataMapHitsPercent;
	[CookingType("PERF_SAMPLE_FRACTION"): ToInstance, Counter("DataMapPinsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(96): ToInstance, helpindex(97): ToInstance, Base("DataMapPinsPersec_Base"): ToInstance] uint32 DataMapPinsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PinReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(98): ToInstance, helpindex(99): ToInstance] uint32 PinReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SyncPinReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(100): ToInstance, helpindex(101): ToInstance] uint32 SyncPinReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("AsyncPinReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(102): ToInstance, helpindex(103): ToInstance] uint32 AsyncPinReadsPersec;
	[CookingType("PERF_SAMPLE_FRACTION"): ToInstance, Counter("PinReadHitsPercent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(104): ToInstance, helpindex(105): ToInstance, Base("PinReadHitsPercent_Base"): ToInstance] uint32 PinReadHitsPercent;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("CopyReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(106): ToInstance, helpindex(107): ToInstance] uint32 CopyReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SyncCopyReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(108): ToInstance, helpindex(109): ToInstance] uint32 SyncCopyReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("AsyncCopyReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(110): ToInstance, helpindex(111): ToInstance] uint32 AsyncCopyReadsPersec;
	[CookingType("PERF_SAMPLE_FRACTION"): ToInstance, Counter("CopyReadHitsPercent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(112): ToInstance, helpindex(113): ToInstance, Base("CopyReadHitsPercent_Base"): ToInstance] uint32 CopyReadHitsPercent;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("MDLReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(114): ToInstance, helpindex(115): ToInstance] uint32 MDLReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SyncMDLReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(116): ToInstance, helpindex(117): ToInstance] uint32 SyncMDLReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("AsyncMDLReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(118): ToInstance, helpindex(119): ToInstance] uint32 AsyncMDLReadsPersec;
	[CookingType("PERF_SAMPLE_FRACTION"): ToInstance, Counter("MDLReadHitsPercent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(120): ToInstance, helpindex(121): ToInstance, Base("MDLReadHitsPercent_Base"): ToInstance] uint32 MDLReadHitsPercent;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReadAheadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(122): ToInstance, helpindex(123): ToInstance] uint32 ReadAheadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FastReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(124): ToInstance, helpindex(125): ToInstance] uint32 FastReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SyncFastReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(126): ToInstance, helpindex(127): ToInstance] uint32 SyncFastReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("AsyncFastReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(128): ToInstance, helpindex(129): ToInstance] uint32 AsyncFastReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FastReadResourceMissesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(130): ToInstance, helpindex(131): ToInstance] uint32 FastReadResourceMissesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FastReadNotPossiblesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(132): ToInstance, helpindex(133): ToInstance] uint32 FastReadNotPossiblesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("LazyWriteFlushesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(134): ToInstance, helpindex(135): ToInstance] uint32 LazyWriteFlushesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("LazyWritePagesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(136): ToInstance, helpindex(137): ToInstance] uint32 LazyWritePagesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DataFlushesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(138): ToInstance, helpindex(139): ToInstance] uint32 DataFlushesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DataFlushPagesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(140): ToInstance, helpindex(141): ToInstance] uint32 DataFlushPagesPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfNet_Redirector
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfNet"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfNet_Redirector"): ToInstance, perfindex(262): ToInstance, helpindex(263): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_PerfNet_Redirector : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesTotalPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(388): ToInstance, helpindex(389): ToInstance] uint64 BytesTotalPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FileDataOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(406): ToInstance, helpindex(391): ToInstance] uint32 FileDataOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("PacketsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(400): ToInstance, helpindex(401): ToInstance] uint64 PacketsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(264): ToInstance, helpindex(265): ToInstance] uint64 BytesReceivedPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("PacketsReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(266): ToInstance, helpindex(267): ToInstance] uint64 PacketsReceivedPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("ReadBytesPagingPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(268): ToInstance, helpindex(269): ToInstance] uint64 ReadBytesPagingPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("ReadBytesNonPagingPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(270): ToInstance, helpindex(271): ToInstance] uint64 ReadBytesNonPagingPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("ReadBytesCachePersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(272): ToInstance, helpindex(273): ToInstance] uint64 ReadBytesCachePersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("ReadBytesNetworkPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(274): ToInstance, helpindex(275): ToInstance] uint64 ReadBytesNetworkPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesTransmittedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(276): ToInstance, helpindex(277): ToInstance] uint64 BytesTransmittedPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("PacketsTransmittedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(278): ToInstance, helpindex(279): ToInstance] uint64 PacketsTransmittedPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("WriteBytesPagingPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(280): ToInstance, helpindex(281): ToInstance] uint64 WriteBytesPagingPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("WriteBytesNonPagingPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(282): ToInstance, helpindex(283): ToInstance] uint64 WriteBytesNonPagingPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("WriteBytesCachePersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(284): ToInstance, helpindex(285): ToInstance] uint64 WriteBytesCachePersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("WriteBytesNetworkPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(286): ToInstance, helpindex(287): ToInstance] uint64 WriteBytesNetworkPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FileReadOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(10): ToInstance, helpindex(289): ToInstance] uint32 FileReadOperationsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReadOperationsRandomPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(290): ToInstance, helpindex(291): ToInstance] uint32 ReadOperationsRandomPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReadPacketsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(292): ToInstance, helpindex(293): ToInstance] uint32 ReadPacketsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReadsLargePersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(294): ToInstance, helpindex(295): ToInstance] uint32 ReadsLargePersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReadPacketsSmallPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(296): ToInstance, helpindex(297): ToInstance] uint32 ReadPacketsSmallPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FileWriteOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(12): ToInstance, helpindex(299): ToInstance] uint32 FileWriteOperationsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("WriteOperationsRandomPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(300): ToInstance, helpindex(301): ToInstance] uint32 WriteOperationsRandomPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("WritePacketsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(302): ToInstance, helpindex(303): ToInstance] uint32 WritePacketsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("WritesLargePersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(304): ToInstance, helpindex(305): ToInstance] uint32 WritesLargePersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("WritePacketsSmallPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(306): ToInstance, helpindex(307): ToInstance] uint32 WritePacketsSmallPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReadsDeniedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(308): ToInstance, helpindex(309): ToInstance] uint32 ReadsDeniedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("WritesDeniedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(310): ToInstance, helpindex(311): ToInstance] uint32 WritesDeniedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("NetworkErrorsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(312): ToInstance, helpindex(313): ToInstance] uint32 NetworkErrorsPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ServerSessions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(314): ToInstance, helpindex(315): ToInstance] uint32 ServerSessions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ServerReconnects"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(316): ToInstance, helpindex(317): ToInstance] uint32 ServerReconnects;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectsCore"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(318): ToInstance, helpindex(319): ToInstance] uint32 ConnectsCore;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectsLanManager20"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(320): ToInstance, helpindex(321): ToInstance] uint32 ConnectsLanManager20;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectsLanManager21"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(322): ToInstance, helpindex(323): ToInstance] uint32 ConnectsLanManager21;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectsWindowsNT"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(324): ToInstance, helpindex(325): ToInstance] uint32 ConnectsWindowsNT;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ServerDisconnects"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(326): ToInstance, helpindex(327): ToInstance] uint32 ServerDisconnects;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ServerSessionsHung"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(328): ToInstance, helpindex(329): ToInstance] uint32 ServerSessionsHung;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CurrentCommands"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(392): ToInstance, helpindex(393): ToInstance] uint32 CurrentCommands;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfOS_System
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfOS"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfOS_System"): ToInstance, perfindex(2): ToInstance, helpindex(3): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_PerfOS_System : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FileReadOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(10): ToInstance, helpindex(11): ToInstance] uint32 FileReadOperationsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FileWriteOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(12): ToInstance, helpindex(13): ToInstance] uint32 FileWriteOperationsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FileControlOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(14): ToInstance, helpindex(15): ToInstance] uint32 FileControlOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("FileReadBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(16): ToInstance, helpindex(17): ToInstance] uint64 FileReadBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("FileWriteBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(18): ToInstance, helpindex(19): ToInstance] uint64 FileWriteBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("FileControlBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(20): ToInstance, helpindex(21): ToInstance] uint64 FileControlBytesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ContextSwitchesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(146): ToInstance, helpindex(147): ToInstance] uint32 ContextSwitchesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SystemCallsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(150): ToInstance, helpindex(151): ToInstance] uint32 SystemCallsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FileDataOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(406): ToInstance, helpindex(407): ToInstance] uint32 FileDataOperationsPersec;
	[CookingType("PERF_ELAPSED_TIME"): ToInstance, Counter("SystemUpTime"): ToInstance, PerfTimeStamp("Timestamp_Object"): ToInstance, PerfTimeFreq("Frequency_Object"): ToInstance, perfindex(674): ToInstance, helpindex(675): ToInstance] uint64 SystemUpTime;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProcessorQueueLength"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(44): ToInstance, helpindex(45): ToInstance] uint32 ProcessorQueueLength;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Processes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(248): ToInstance, helpindex(249): ToInstance] uint32 Processes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Threads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(250): ToInstance, helpindex(251): ToInstance] uint32 Threads;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("AlignmentFixupsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(686): ToInstance, helpindex(687): ToInstance] uint32 AlignmentFixupsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ExceptionDispatchesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(688): ToInstance, helpindex(689): ToInstance] uint32 ExceptionDispatchesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FloatingEmulationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(690): ToInstance, helpindex(691): ToInstance] uint32 FloatingEmulationsPersec;
	[CookingType("PERF_RAW_FRACTION"): ToInstance, Counter("PercentRegistryQuotaInUse"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1350): ToInstance, helpindex(1351): ToInstance, Base("PercentRegistryQuotaInUse_Base"): ToInstance] uint32 PercentRegistryQuotaInUse;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_Process
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_Process"): ToInstance, perfindex(230): ToInstance, helpindex(231): ToInstance]
class Win32_PerfFormattedData_PerfProc_Process : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentProcessorTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(6): ToInstance, helpindex(189): ToInstance] uint64 PercentProcessorTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentUserTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(142): ToInstance, helpindex(157): ToInstance] uint64 PercentUserTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentPrivilegedTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(144): ToInstance, helpindex(159): ToInstance] uint64 PercentPrivilegedTime;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("VirtualBytesPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(172): ToInstance, helpindex(173): ToInstance] uint64 VirtualBytesPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("VirtualBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(174): ToInstance, helpindex(175): ToInstance] uint64 VirtualBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PageFaultsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(28): ToInstance, helpindex(177): ToInstance] uint32 PageFaultsPersec;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WorkingSetPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(178): ToInstance, helpindex(179): ToInstance] uint64 WorkingSetPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WorkingSet"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(180): ToInstance, helpindex(181): ToInstance] uint64 WorkingSet;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PageFileBytesPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(182): ToInstance, helpindex(183): ToInstance] uint64 PageFileBytesPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PageFileBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(184): ToInstance, helpindex(185): ToInstance] uint64 PageFileBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PrivateBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(186): ToInstance, helpindex(187): ToInstance] uint64 PrivateBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ThreadCount"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(680): ToInstance, helpindex(681): ToInstance] uint32 ThreadCount;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PriorityBase"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(682): ToInstance, helpindex(683): ToInstance] uint32 PriorityBase;
	[CookingType("PERF_ELAPSED_TIME"): ToInstance, Counter("ElapsedTime"): ToInstance, PerfTimeStamp("Timestamp_Object"): ToInstance, PerfTimeFreq("Frequency_Object"): ToInstance, perfindex(684): ToInstance, helpindex(685): ToInstance] uint64 ElapsedTime;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("IDProcess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance] uint32 IDProcess;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CreatingProcessID"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1410): ToInstance, helpindex(1411): ToInstance] uint32 CreatingProcessID;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolPagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance] uint32 PoolPagedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolNonpagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance] uint32 PoolNonpagedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("HandleCount"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(952): ToInstance, helpindex(953): ToInstance] uint32 HandleCount;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOReadOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1412): ToInstance, helpindex(1413): ToInstance] uint64 IOReadOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOWriteOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1414): ToInstance, helpindex(1415): ToInstance] uint64 IOWriteOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IODataOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1416): ToInstance, helpindex(1417): ToInstance] uint64 IODataOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOOtherOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1418): ToInstance, helpindex(1419): ToInstance] uint64 IOOtherOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOReadBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1420): ToInstance, helpindex(1421): ToInstance] uint64 IOReadBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOWriteBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1422): ToInstance, helpindex(1423): ToInstance] uint64 IOWriteBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IODataBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1424): ToInstance, helpindex(1425): ToInstance] uint64 IODataBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOOtherBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1426): ToInstance, helpindex(1427): ToInstance] uint64 IOOtherBytesPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_Tcpip_NetworkInterface
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("Tcpip"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_Tcpip_NetworkInterface"): ToInstance, perfindex(510): ToInstance, helpindex(511): ToInstance]
class Win32_PerfFormattedData_Tcpip_NetworkInterface : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesTotalPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(388): ToInstance, helpindex(513): ToInstance] uint64 BytesTotalPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PacketsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(400): ToInstance, helpindex(515): ToInstance] uint32 PacketsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PacketsReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(266): ToInstance, helpindex(517): ToInstance] uint32 PacketsReceivedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PacketsSentPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(452): ToInstance, helpindex(519): ToInstance] uint32 PacketsSentPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CurrentBandwidth"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(520): ToInstance, helpindex(521): ToInstance] uint32 CurrentBandwidth;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("BytesReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(264): ToInstance, helpindex(523): ToInstance] uint32 BytesReceivedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PacketsReceivedUnicastPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(524): ToInstance, helpindex(525): ToInstance] uint32 PacketsReceivedUnicastPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PacketsReceivedNonUnicastPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(526): ToInstance, helpindex(527): ToInstance] uint32 PacketsReceivedNonUnicastPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PacketsReceivedDiscarded"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(528): ToInstance, helpindex(529): ToInstance] uint32 PacketsReceivedDiscarded;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PacketsReceivedErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(530): ToInstance, helpindex(531): ToInstance] uint32 PacketsReceivedErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PacketsReceivedUnknown"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(532): ToInstance, helpindex(533): ToInstance] uint32 PacketsReceivedUnknown;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("BytesSentPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(506): ToInstance, helpindex(535): ToInstance] uint32 BytesSentPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PacketsSentUnicastPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(536): ToInstance, helpindex(537): ToInstance] uint32 PacketsSentUnicastPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PacketsSentNonUnicastPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(538): ToInstance, helpindex(539): ToInstance] uint32 PacketsSentNonUnicastPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PacketsOutboundDiscarded"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(540): ToInstance, helpindex(541): ToInstance] uint32 PacketsOutboundDiscarded;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PacketsOutboundErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(542): ToInstance, helpindex(543): ToInstance] uint32 PacketsOutboundErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputQueueLength"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(544): ToInstance, helpindex(545): ToInstance] uint32 OutputQueueLength;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_RSVP_RSVPInterfaces
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("RSVP"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_RSVP_RSVPInterfaces"): ToInstance, perfindex(1872): ToInstance, helpindex(1873): ToInstance]
class Win32_PerfFormattedData_RSVP_RSVPInterfaces : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Signalingbytesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1874): ToInstance, helpindex(1875): ToInstance] uint32 Signalingbytesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Signalingbytessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1876): ToInstance, helpindex(1877): ToInstance] uint32 Signalingbytessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PATHmessagesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1878): ToInstance, helpindex(1879): ToInstance] uint32 PATHmessagesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVmessagesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1880): ToInstance, helpindex(1881): ToInstance] uint32 RESVmessagesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PATHERRmessagesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1882): ToInstance, helpindex(1883): ToInstance] uint32 PATHERRmessagesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVERRmessagesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1884): ToInstance, helpindex(1885): ToInstance] uint32 RESVERRmessagesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PATHTEARmessagesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1886): ToInstance, helpindex(1887): ToInstance] uint32 PATHTEARmessagesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVTEARmessagesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1888): ToInstance, helpindex(1889): ToInstance] uint32 RESVTEARmessagesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVCONFIRMmessagesreceived"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1890): ToInstance, helpindex(1891): ToInstance] uint32 RESVCONFIRMmessagesreceived;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PATHmessagessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1892): ToInstance, helpindex(1893): ToInstance] uint32 PATHmessagessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVmessagessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1894): ToInstance, helpindex(1895): ToInstance] uint32 RESVmessagessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PATHERRmessagessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1896): ToInstance, helpindex(1897): ToInstance] uint32 PATHERRmessagessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVERRmessagessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1898): ToInstance, helpindex(1899): ToInstance] uint32 RESVERRmessagessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PATHTEARmessagessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1900): ToInstance, helpindex(1901): ToInstance] uint32 PATHTEARmessagessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVTEARmessagessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1902): ToInstance, helpindex(1903): ToInstance] uint32 RESVTEARmessagessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVCONFIRMmessagessent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1904): ToInstance, helpindex(1905): ToInstance] uint32 RESVCONFIRMmessagessent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Resourcecontrolfailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1906): ToInstance, helpindex(1907): ToInstance] uint32 Resourcecontrolfailures;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Policycontrolfailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1908): ToInstance, helpindex(1909): ToInstance] uint32 Policycontrolfailures;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Generalfailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1910): ToInstance, helpindex(1911): ToInstance] uint32 Generalfailures;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("BlockedRESVs"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1912): ToInstance, helpindex(1913): ToInstance] uint32 BlockedRESVs;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RESVstateblocktimeouts"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1914): ToInstance, helpindex(1915): ToInstance] uint32 RESVstateblocktimeouts;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PATHstateblocktimeouts"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1916): ToInstance, helpindex(1917): ToInstance] uint32 PATHstateblocktimeouts;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SendmessageserrorsBigmessages"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1918): ToInstance, helpindex(1919): ToInstance] uint32 SendmessageserrorsBigmessages;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivemessageserrorsBigmessages"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1920): ToInstance, helpindex(1921): ToInstance] uint32 ReceivemessageserrorsBigmessages;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SendmessageserrorsNomemory"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1922): ToInstance, helpindex(1923): ToInstance] uint32 SendmessageserrorsNomemory;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivemessageserrorsNomemory"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1924): ToInstance, helpindex(1925): ToInstance] uint32 ReceivemessageserrorsNomemory;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Numberofincomingmessagesdropped"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1926): ToInstance, helpindex(1927): ToInstance] uint32 Numberofincomingmessagesdropped;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Numberofoutgoingmessagesdropped"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1928): ToInstance, helpindex(1929): ToInstance] uint32 Numberofoutgoingmessagesdropped;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Numberofactiveflows"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1930): ToInstance, helpindex(1931): ToInstance] uint32 Numberofactiveflows;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Reservedbandwidth"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1932): ToInstance, helpindex(1933): ToInstance] uint32 Reservedbandwidth;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Maximumadmittedbandwidth"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1934): ToInstance, helpindex(1935): ToInstance] uint32 Maximumadmittedbandwidth;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_ThreadDetails_Costly
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_ThreadDetails_Costly"): ToInstance, perfindex(816): ToInstance, helpindex(817): ToInstance]
class Win32_PerfFormattedData_PerfProc_ThreadDetails_Costly : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT_HEX"): ToInstance, Counter("UserPC"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(708): ToInstance, helpindex(709): ToInstance] uint64 UserPC;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_JobObject
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_JobObject"): ToInstance, perfindex(1500): ToInstance, helpindex(1501): ToInstance]
class Win32_PerfFormattedData_PerfProc_JobObject : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("CurrentPercentProcessorTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1502): ToInstance, helpindex(1503): ToInstance] uint64 CurrentPercentProcessorTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("CurrentPercentUserModeTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1504): ToInstance, helpindex(1505): ToInstance] uint64 CurrentPercentUserModeTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("CurrentPercentKernelModeTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(1506): ToInstance, helpindex(1507): ToInstance] uint64 CurrentPercentKernelModeTime;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ThisPeriodmSecProcessor"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1508): ToInstance, helpindex(1509): ToInstance] uint64 ThisPeriodmSecProcessor;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ThisPeriodmSecUserMode"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1510): ToInstance, helpindex(1511): ToInstance] uint64 ThisPeriodmSecUserMode;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ThisPeriodmSecKernelMode"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1512): ToInstance, helpindex(1513): ToInstance] uint64 ThisPeriodmSecKernelMode;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("TotalmSecProcessor"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1522): ToInstance, helpindex(1523): ToInstance] uint64 TotalmSecProcessor;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("TotalmSecUserMode"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1524): ToInstance, helpindex(1525): ToInstance] uint64 TotalmSecUserMode;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("TotalmSecKernelMode"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1526): ToInstance, helpindex(1527): ToInstance] uint64 TotalmSecKernelMode;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PagesPerSec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1514): ToInstance, helpindex(1515): ToInstance] uint32 PagesPerSec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProcessCountTotal"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1516): ToInstance, helpindex(1517): ToInstance] uint32 ProcessCountTotal;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProcessCountActive"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1518): ToInstance, helpindex(1519): ToInstance] uint32 ProcessCountActive;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProcessCountTerminated"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1520): ToInstance, helpindex(1521): ToInstance] uint32 ProcessCountTerminated;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_MSDTC_DistributedTransactionCoordinator
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("MSDTC"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_MSDTC_DistributedTransactionCoordinator"): ToInstance, perfindex(2184): ToInstance, helpindex(2185): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_MSDTC_DistributedTransactionCoordinator : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ActiveTransactions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2186): ToInstance, helpindex(2187): ToInstance] uint32 ActiveTransactions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CommittedTransactions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2188): ToInstance, helpindex(2189): ToInstance] uint32 CommittedTransactions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("AbortedTransactions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2190): ToInstance, helpindex(2191): ToInstance] uint32 AbortedTransactions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InDoubtTransactions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2192): ToInstance, helpindex(2193): ToInstance] uint32 InDoubtTransactions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ActiveTransactionsMaximum"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2194): ToInstance, helpindex(2195): ToInstance] uint32 ActiveTransactionsMaximum;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ForceCommittedTransactions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2196): ToInstance, helpindex(2197): ToInstance] uint32 ForceCommittedTransactions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ForceAbortedTransactions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2198): ToInstance, helpindex(2199): ToInstance] uint32 ForceAbortedTransactions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ResponseTimeMinimum"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2200): ToInstance, helpindex(2201): ToInstance] uint32 ResponseTimeMinimum;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ResponseTimeAverage"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2202): ToInstance, helpindex(2203): ToInstance] uint32 ResponseTimeAverage;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ResponseTimeMaximum"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2204): ToInstance, helpindex(2205): ToInstance] uint32 ResponseTimeMaximum;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TransactionsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2206): ToInstance, helpindex(2207): ToInstance] uint32 TransactionsPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CommittedTransactionsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2208): ToInstance, helpindex(2209): ToInstance] uint32 CommittedTransactionsPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("AbortedTransactionsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2210): ToInstance, helpindex(2211): ToInstance] uint32 AbortedTransactionsPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_Tcpip_IP
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("Tcpip"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_Tcpip_IP"): ToInstance, perfindex(546): ToInstance, helpindex(547): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_Tcpip_IP : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(438): ToInstance, helpindex(549): ToInstance] uint32 DatagramsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(446): ToInstance, helpindex(551): ToInstance] uint32 DatagramsReceivedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DatagramsReceivedHeaderErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(552): ToInstance, helpindex(553): ToInstance] uint32 DatagramsReceivedHeaderErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DatagramsReceivedAddressErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(554): ToInstance, helpindex(555): ToInstance] uint32 DatagramsReceivedAddressErrors;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsForwardedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(556): ToInstance, helpindex(557): ToInstance] uint32 DatagramsForwardedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DatagramsReceivedUnknownProtocol"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(558): ToInstance, helpindex(559): ToInstance] uint32 DatagramsReceivedUnknownProtocol;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DatagramsReceivedDiscarded"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(560): ToInstance, helpindex(561): ToInstance] uint32 DatagramsReceivedDiscarded;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsReceivedDeliveredPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(562): ToInstance, helpindex(563): ToInstance] uint32 DatagramsReceivedDeliveredPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DatagramsSentPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(442): ToInstance, helpindex(565): ToInstance] uint32 DatagramsSentPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DatagramsOutboundDiscarded"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(566): ToInstance, helpindex(567): ToInstance] uint32 DatagramsOutboundDiscarded;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("DatagramsOutboundNoRoute"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(568): ToInstance, helpindex(569): ToInstance] uint32 DatagramsOutboundNoRoute;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FragmentsReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(570): ToInstance, helpindex(571): ToInstance] uint32 FragmentsReceivedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FragmentsReassembledPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(572): ToInstance, helpindex(573): ToInstance] uint32 FragmentsReassembledPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FragmentReassemblyFailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(574): ToInstance, helpindex(575): ToInstance] uint32 FragmentReassemblyFailures;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FragmentedDatagramsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(576): ToInstance, helpindex(577): ToInstance] uint32 FragmentedDatagramsPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FragmentationFailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(578): ToInstance, helpindex(579): ToInstance] uint32 FragmentationFailures;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("FragmentsCreatedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(580): ToInstance, helpindex(581): ToInstance] uint32 FragmentsCreatedPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_TermService_TerminalServicesSession
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("TermService"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_TermService_TerminalServicesSession"): ToInstance, perfindex(2054): ToInstance, helpindex(2055): ToInstance]
class Win32_PerfFormattedData_TermService_TerminalServicesSession : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentProcessorTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(6): ToInstance, helpindex(189): ToInstance] uint64 PercentProcessorTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentUserTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(142): ToInstance, helpindex(157): ToInstance] uint64 PercentUserTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentPrivilegedTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(144): ToInstance, helpindex(159): ToInstance] uint64 PercentPrivilegedTime;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("VirtualBytesPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(172): ToInstance, helpindex(173): ToInstance] uint64 VirtualBytesPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("VirtualBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(174): ToInstance, helpindex(175): ToInstance] uint64 VirtualBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PageFaultsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(28): ToInstance, helpindex(177): ToInstance] uint32 PageFaultsPersec;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WorkingSetPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(178): ToInstance, helpindex(179): ToInstance] uint64 WorkingSetPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WorkingSet"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(180): ToInstance, helpindex(181): ToInstance] uint64 WorkingSet;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PageFileBytesPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(182): ToInstance, helpindex(183): ToInstance] uint64 PageFileBytesPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PageFileBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(184): ToInstance, helpindex(185): ToInstance] uint64 PageFileBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PrivateBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(186): ToInstance, helpindex(187): ToInstance] uint64 PrivateBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ThreadCount"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(680): ToInstance, helpindex(681): ToInstance] uint32 ThreadCount;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolPagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance] uint32 PoolPagedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolNonpagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance] uint32 PoolNonpagedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("HandleCount"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(952): ToInstance, helpindex(953): ToInstance] uint32 HandleCount;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("InputWdBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2056): ToInstance, helpindex(2057): ToInstance] uint32 InputWdBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("InputWdFrames"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2058): ToInstance, helpindex(2059): ToInstance] uint32 InputWdFrames;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputWaitForOutBuf"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2060): ToInstance, helpindex(2061): ToInstance] uint32 InputWaitForOutBuf;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("InputFrames"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2062): ToInstance, helpindex(2063): ToInstance] uint32 InputFrames;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("InputBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2064): ToInstance, helpindex(2065): ToInstance] uint32 InputBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("InputCompressedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2066): ToInstance, helpindex(2067): ToInstance] uint32 InputCompressedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputCompressFlushes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2068): ToInstance, helpindex(2069): ToInstance] uint32 InputCompressFlushes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2070): ToInstance, helpindex(2071): ToInstance] uint32 InputErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputTimeouts"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2072): ToInstance, helpindex(2073): ToInstance] uint32 InputTimeouts;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputAsyncFrameError"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2074): ToInstance, helpindex(2075): ToInstance] uint32 InputAsyncFrameError;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputAsyncOverrun"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2076): ToInstance, helpindex(2077): ToInstance] uint32 InputAsyncOverrun;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputAsyncOverflow"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2078): ToInstance, helpindex(2079): ToInstance] uint32 InputAsyncOverflow;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputAsyncParityError"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2080): ToInstance, helpindex(2081): ToInstance] uint32 InputAsyncParityError;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputTransportErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2082): ToInstance, helpindex(2083): ToInstance] uint32 InputTransportErrors;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("OutputWdBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2084): ToInstance, helpindex(2085): ToInstance] uint32 OutputWdBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("OutputWdFrames"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2086): ToInstance, helpindex(2087): ToInstance] uint32 OutputWdFrames;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputWaitForOutBuf"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2088): ToInstance, helpindex(2089): ToInstance] uint32 OutputWaitForOutBuf;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("OutputFrames"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2090): ToInstance, helpindex(2091): ToInstance] uint32 OutputFrames;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("OutputBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2092): ToInstance, helpindex(2093): ToInstance] uint32 OutputBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("OutputCompressedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2094): ToInstance, helpindex(2095): ToInstance] uint32 OutputCompressedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputCompressFlushes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2096): ToInstance, helpindex(2097): ToInstance] uint32 OutputCompressFlushes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2098): ToInstance, helpindex(2099): ToInstance] uint32 OutputErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputTimeouts"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2100): ToInstance, helpindex(2101): ToInstance] uint32 OutputTimeouts;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputAsyncFrameError"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2102): ToInstance, helpindex(2103): ToInstance] uint32 OutputAsyncFrameError;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputAsyncOverrun"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2104): ToInstance, helpindex(2105): ToInstance] uint32 OutputAsyncOverrun;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputAsyncOverflow"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2106): ToInstance, helpindex(2107): ToInstance] uint32 OutputAsyncOverflow;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputAsyncParityError"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2108): ToInstance, helpindex(2109): ToInstance] uint32 OutputAsyncParityError;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputTransportErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2110): ToInstance, helpindex(2111): ToInstance] uint32 OutputTransportErrors;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("TotalWdBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2112): ToInstance, helpindex(2113): ToInstance] uint32 TotalWdBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("TotalWdFrames"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2114): ToInstance, helpindex(2115): ToInstance] uint32 TotalWdFrames;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalWaitForOutBuf"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2116): ToInstance, helpindex(2117): ToInstance] uint32 TotalWaitForOutBuf;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("TotalFrames"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2118): ToInstance, helpindex(2119): ToInstance] uint32 TotalFrames;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("TotalBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2120): ToInstance, helpindex(2121): ToInstance] uint32 TotalBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("TotalCompressedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2122): ToInstance, helpindex(2123): ToInstance] uint32 TotalCompressedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalCompressFlushes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2124): ToInstance, helpindex(2125): ToInstance] uint32 TotalCompressFlushes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2126): ToInstance, helpindex(2127): ToInstance] uint32 TotalErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalTimeouts"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2128): ToInstance, helpindex(2129): ToInstance] uint32 TotalTimeouts;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalAsyncFrameError"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2130): ToInstance, helpindex(2131): ToInstance] uint32 TotalAsyncFrameError;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalAsyncOverrun"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2132): ToInstance, helpindex(2133): ToInstance] uint32 TotalAsyncOverrun;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalAsyncOverflow"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2134): ToInstance, helpindex(2135): ToInstance] uint32 TotalAsyncOverflow;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalAsyncParityError"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2136): ToInstance, helpindex(2137): ToInstance] uint32 TotalAsyncParityError;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalTransportErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2138): ToInstance, helpindex(2139): ToInstance] uint32 TotalTransportErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalProtocolCacheReads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2140): ToInstance, helpindex(2141): ToInstance] uint32 TotalProtocolCacheReads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalProtocolCacheHits"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2142): ToInstance, helpindex(2143): ToInstance] uint32 TotalProtocolCacheHits;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalProtocolCacheHitRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2144): ToInstance, helpindex(2145): ToInstance] uint32 TotalProtocolCacheHitRatio;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolBitmapCacheReads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2146): ToInstance, helpindex(2147): ToInstance] uint32 ProtocolBitmapCacheReads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolBitmapCacheHits"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2148): ToInstance, helpindex(2149): ToInstance] uint32 ProtocolBitmapCacheHits;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolBitmapCacheHitRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2150): ToInstance, helpindex(2151): ToInstance] uint32 ProtocolBitmapCacheHitRatio;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolGlyphCacheReads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2152): ToInstance, helpindex(2153): ToInstance] uint32 ProtocolGlyphCacheReads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolGlyphCacheHits"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2154): ToInstance, helpindex(2155): ToInstance] uint32 ProtocolGlyphCacheHits;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolGlyphCacheHitRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2156): ToInstance, helpindex(2157): ToInstance] uint32 ProtocolGlyphCacheHitRatio;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolBrushCacheReads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2158): ToInstance, helpindex(2159): ToInstance] uint32 ProtocolBrushCacheReads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolBrushCacheHits"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2160): ToInstance, helpindex(2161): ToInstance] uint32 ProtocolBrushCacheHits;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolBrushCacheHitRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2162): ToInstance, helpindex(2163): ToInstance] uint32 ProtocolBrushCacheHitRatio;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolSaveScreenBitmapCacheReads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2164): ToInstance, helpindex(2165): ToInstance] uint32 ProtocolSaveScreenBitmapCacheReads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolSaveScreenBitmapCacheHits"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2166): ToInstance, helpindex(2167): ToInstance] uint32 ProtocolSaveScreenBitmapCacheHits;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ProtocolSaveScreenBitmapCacheHitRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2168): ToInstance, helpindex(2169): ToInstance] uint32 ProtocolSaveScreenBitmapCacheHitRatio;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InputCompressionRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2170): ToInstance, helpindex(2171): ToInstance] uint32 InputCompressionRatio;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutputCompressionRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2172): ToInstance, helpindex(2173): ToInstance] uint32 OutputCompressionRatio;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalCompressionRatio"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2174): ToInstance, helpindex(2175): ToInstance] uint32 TotalCompressionRatio;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_RSVP_RSVPService
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("RSVP"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_RSVP_RSVPService"): ToInstance, perfindex(1848): ToInstance, helpindex(1849): ToInstance]
class Win32_PerfFormattedData_RSVP_RSVPService : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("NetworkInterfaces"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1850): ToInstance, helpindex(1851): ToInstance] uint32 NetworkInterfaces;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Networksockets"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1852): ToInstance, helpindex(1853): ToInstance] uint32 Networksockets;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Timers"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1854): ToInstance, helpindex(1855): ToInstance] uint32 Timers;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("RSVPsessions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1856): ToInstance, helpindex(1857): ToInstance] uint32 RSVPsessions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("QoSclients"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1858): ToInstance, helpindex(1859): ToInstance] uint32 QoSclients;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("QoSenabledsenders"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1860): ToInstance, helpindex(1861): ToInstance] uint32 QoSenabledsenders;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("QoSenabledreceivers"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1862): ToInstance, helpindex(1863): ToInstance] uint32 QoSenabledreceivers;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FailedQoSrequests"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1864): ToInstance, helpindex(1865): ToInstance] uint32 FailedQoSrequests;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FailedQoSsends"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1866): ToInstance, helpindex(1867): ToInstance] uint32 FailedQoSsends;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("QoSnotifications"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1868): ToInstance, helpindex(1869): ToInstance] uint32 QoSnotifications;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("BytesinQoSnotifications"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1870): ToInstance, helpindex(1871): ToInstance] uint32 BytesinQoSnotifications;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_Spooler_PrintQueue
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("Spooler"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_Spooler_PrintQueue"): ToInstance, perfindex(1450): ToInstance, helpindex(1451): ToInstance]
class Win32_PerfFormattedData_Spooler_PrintQueue : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalJobsPrinted"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1452): ToInstance, helpindex(1453): ToInstance] uint32 TotalJobsPrinted;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesPrintedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1454): ToInstance, helpindex(1455): ToInstance] uint64 BytesPrintedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalPagesPrinted"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1456): ToInstance, helpindex(1457): ToInstance] uint32 TotalPagesPrinted;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("Jobs"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1458): ToInstance, helpindex(1459): ToInstance] uint32 Jobs;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("References"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1460): ToInstance, helpindex(1461): ToInstance] uint32 References;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MaxReferences"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1462): ToInstance, helpindex(1463): ToInstance] uint32 MaxReferences;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("JobsSpooling"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1464): ToInstance, helpindex(1465): ToInstance] uint32 JobsSpooling;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MaxJobsSpooling"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1466): ToInstance, helpindex(1467): ToInstance] uint32 MaxJobsSpooling;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("OutofPaperErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1468): ToInstance, helpindex(1469): ToInstance] uint32 OutofPaperErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("NotReadyErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1470): ToInstance, helpindex(1471): ToInstance] uint32 NotReadyErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("JobErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1472): ToInstance, helpindex(1473): ToInstance] uint32 JobErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("EnumerateNetworkPrinterCalls"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1474): ToInstance, helpindex(1475): ToInstance] uint32 EnumerateNetworkPrinterCalls;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("AddNetworkPrinterCalls"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1476): ToInstance, helpindex(1477): ToInstance] uint32 AddNetworkPrinterCalls;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfNet_ServerWorkQueues
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfNet"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfNet_ServerWorkQueues"): ToInstance, perfindex(1300): ToInstance, helpindex(1301): ToInstance]
class Win32_PerfFormattedData_PerfNet_ServerWorkQueues : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("QueueLength"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1302): ToInstance, helpindex(1303): ToInstance] uint32 QueueLength;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ActiveThreads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1304): ToInstance, helpindex(1305): ToInstance] uint32 ActiveThreads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("AvailableThreads"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1306): ToInstance, helpindex(1307): ToInstance] uint32 AvailableThreads;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("AvailableWorkItems"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1308): ToInstance, helpindex(1309): ToInstance] uint32 AvailableWorkItems;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("BorrowedWorkItems"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1310): ToInstance, helpindex(1311): ToInstance] uint32 BorrowedWorkItems;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("WorkItemShortages"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1312): ToInstance, helpindex(1313): ToInstance] uint32 WorkItemShortages;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("CurrentClients"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1314): ToInstance, helpindex(1315): ToInstance] uint32 CurrentClients;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(264): ToInstance, helpindex(1317): ToInstance] uint64 BytesReceivedPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesSentPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(506): ToInstance, helpindex(1319): ToInstance] uint64 BytesSentPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesTransferredPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1320): ToInstance, helpindex(1321): ToInstance] uint64 BytesTransferredPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("ReadOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(288): ToInstance, helpindex(1323): ToInstance] uint64 ReadOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("ReadBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1324): ToInstance, helpindex(1325): ToInstance] uint64 ReadBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("WriteOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(298): ToInstance, helpindex(1327): ToInstance] uint64 WriteOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("WriteBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1328): ToInstance, helpindex(1329): ToInstance] uint64 WriteBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("TotalBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(508): ToInstance, helpindex(1331): ToInstance] uint64 TotalBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("TotalOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1332): ToInstance, helpindex(1333): ToInstance] uint64 TotalOperationsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ContextBlocksQueuedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(404): ToInstance, helpindex(405): ToInstance] uint32 ContextBlocksQueuedPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_Tcpip_ICMP
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("Tcpip"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_Tcpip_ICMP"): ToInstance, perfindex(582): ToInstance, helpindex(583): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_Tcpip_ICMP : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("MessagesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(584): ToInstance, helpindex(585): ToInstance] uint32 MessagesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("MessagesReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(586): ToInstance, helpindex(587): ToInstance] uint32 MessagesReceivedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MessagesReceivedErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(588): ToInstance, helpindex(589): ToInstance] uint32 MessagesReceivedErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivedDestUnreachable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(590): ToInstance, helpindex(591): ToInstance] uint32 ReceivedDestUnreachable;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivedTimeExceeded"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(592): ToInstance, helpindex(593): ToInstance] uint32 ReceivedTimeExceeded;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivedParameterProblem"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(594): ToInstance, helpindex(595): ToInstance] uint32 ReceivedParameterProblem;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivedSourceQuench"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(596): ToInstance, helpindex(597): ToInstance] uint32 ReceivedSourceQuench;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReceivedRedirectPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(598): ToInstance, helpindex(599): ToInstance] uint32 ReceivedRedirectPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReceivedEchoPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(600): ToInstance, helpindex(601): ToInstance] uint32 ReceivedEchoPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReceivedEchoReplyPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(602): ToInstance, helpindex(603): ToInstance] uint32 ReceivedEchoReplyPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReceivedTimestampPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(604): ToInstance, helpindex(605): ToInstance] uint32 ReceivedTimestampPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ReceivedTimestampReplyPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(606): ToInstance, helpindex(607): ToInstance] uint32 ReceivedTimestampReplyPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivedAddressMask"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(608): ToInstance, helpindex(609): ToInstance] uint32 ReceivedAddressMask;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ReceivedAddressMaskReply"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(610): ToInstance, helpindex(611): ToInstance] uint32 ReceivedAddressMaskReply;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("MessagesSentPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(612): ToInstance, helpindex(613): ToInstance] uint32 MessagesSentPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("MessagesOutboundErrors"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(614): ToInstance, helpindex(615): ToInstance] uint32 MessagesOutboundErrors;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SentDestinationUnreachable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(616): ToInstance, helpindex(617): ToInstance] uint32 SentDestinationUnreachable;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SentTimeExceeded"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(618): ToInstance, helpindex(619): ToInstance] uint32 SentTimeExceeded;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SentParameterProblem"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(620): ToInstance, helpindex(621): ToInstance] uint32 SentParameterProblem;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SentSourceQuench"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(622): ToInstance, helpindex(623): ToInstance] uint32 SentSourceQuench;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SentRedirectPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(624): ToInstance, helpindex(625): ToInstance] uint32 SentRedirectPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SentEchoPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(626): ToInstance, helpindex(627): ToInstance] uint32 SentEchoPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SentEchoReplyPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(628): ToInstance, helpindex(629): ToInstance] uint32 SentEchoReplyPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SentTimestampPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(630): ToInstance, helpindex(631): ToInstance] uint32 SentTimestampPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SentTimestampReplyPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(632): ToInstance, helpindex(633): ToInstance] uint32 SentTimestampReplyPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SentAddressMask"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(634): ToInstance, helpindex(635): ToInstance] uint32 SentAddressMask;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SentAddressMaskReply"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(636): ToInstance, helpindex(637): ToInstance] uint32 SentAddressMaskReply;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfOS_Memory
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfOS"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfOS_Memory"): ToInstance, perfindex(4): ToInstance, helpindex(5): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_PerfOS_Memory : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PageFaultsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(28): ToInstance, helpindex(29): ToInstance] uint32 PageFaultsPersec;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("AvailableBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(24): ToInstance, helpindex(25): ToInstance] uint64 AvailableBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("CommittedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(26): ToInstance, helpindex(27): ToInstance] uint64 CommittedBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("CommitLimit"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(30): ToInstance, helpindex(31): ToInstance] uint64 CommitLimit;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("WriteCopiesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(32): ToInstance, helpindex(33): ToInstance] uint32 WriteCopiesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("TransitionFaultsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(34): ToInstance, helpindex(35): ToInstance] uint32 TransitionFaultsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("CacheFaultsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(36): ToInstance, helpindex(37): ToInstance] uint32 CacheFaultsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("DemandZeroFaultsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(38): ToInstance, helpindex(39): ToInstance] uint32 DemandZeroFaultsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PagesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(40): ToInstance, helpindex(41): ToInstance] uint32 PagesPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PagesInputPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(822): ToInstance, helpindex(823): ToInstance] uint32 PagesInputPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PageReadsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(42): ToInstance, helpindex(43): ToInstance] uint32 PageReadsPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PagesOutputPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(48): ToInstance, helpindex(49): ToInstance] uint32 PagesOutputPersec;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PoolPagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance] uint64 PoolPagedBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PoolNonpagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance] uint64 PoolNonpagedBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PageWritesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(50): ToInstance, helpindex(51): ToInstance] uint32 PageWritesPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolPagedAllocs"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(60): ToInstance, helpindex(61): ToInstance] uint32 PoolPagedAllocs;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolNonpagedAllocs"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(64): ToInstance, helpindex(65): ToInstance] uint32 PoolNonpagedAllocs;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FreeSystemPageTableEntries"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(678): ToInstance, helpindex(679): ToInstance] uint32 FreeSystemPageTableEntries;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("CacheBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(818): ToInstance, helpindex(819): ToInstance] uint64 CacheBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("CacheBytesPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(820): ToInstance, helpindex(821): ToInstance] uint64 CacheBytesPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PoolPagedResidentBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(66): ToInstance, helpindex(63): ToInstance] uint64 PoolPagedResidentBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("SystemCodeTotalBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(68): ToInstance, helpindex(69): ToInstance] uint64 SystemCodeTotalBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("SystemCodeResidentBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(70): ToInstance, helpindex(71): ToInstance] uint64 SystemCodeResidentBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("SystemDriverTotalBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(72): ToInstance, helpindex(73): ToInstance] uint64 SystemDriverTotalBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("SystemDriverResidentBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(74): ToInstance, helpindex(75): ToInstance] uint64 SystemDriverResidentBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("SystemCacheResidentBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(76): ToInstance, helpindex(77): ToInstance] uint64 SystemCacheResidentBytes;
	[CookingType("PERF_RAW_FRACTION"): ToInstance, Counter("PercentCommittedBytesInUse"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1406): ToInstance, helpindex(1407): ToInstance, Base("PercentCommittedBytesInUse_Base"): ToInstance] uint32 PercentCommittedBytesInUse;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("AvailableKBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1380): ToInstance, helpindex(1381): ToInstance] uint64 AvailableKBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("AvailableMBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1382): ToInstance, helpindex(1383): ToInstance] uint64 AvailableMBytes;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfNet_Server
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfNet"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfNet_Server"): ToInstance, perfindex(330): ToInstance, helpindex(331): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_PerfNet_Server : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesTotalPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(388): ToInstance, helpindex(395): ToInstance] uint64 BytesTotalPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(264): ToInstance, helpindex(333): ToInstance] uint64 BytesReceivedPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("BytesTransmittedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(276): ToInstance, helpindex(335): ToInstance] uint64 BytesTransmittedPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SessionsTimedOut"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(340): ToInstance, helpindex(341): ToInstance] uint32 SessionsTimedOut;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SessionsErroredOut"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(342): ToInstance, helpindex(343): ToInstance] uint32 SessionsErroredOut;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SessionsLoggedOff"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(344): ToInstance, helpindex(345): ToInstance] uint32 SessionsLoggedOff;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("SessionsForcedOff"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(346): ToInstance, helpindex(347): ToInstance] uint32 SessionsForcedOff;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ErrorsLogon"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(348): ToInstance, helpindex(349): ToInstance] uint32 ErrorsLogon;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ErrorsAccessPermissions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(350): ToInstance, helpindex(351): ToInstance] uint32 ErrorsAccessPermissions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ErrorsGrantedAccess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(352): ToInstance, helpindex(353): ToInstance] uint32 ErrorsGrantedAccess;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ErrorsSystem"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(354): ToInstance, helpindex(355): ToInstance] uint32 ErrorsSystem;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("BlockingRequestsRejected"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(356): ToInstance, helpindex(357): ToInstance] uint32 BlockingRequestsRejected;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("WorkItemShortages"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(358): ToInstance, helpindex(359): ToInstance] uint32 WorkItemShortages;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FilesOpenedTotal"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(360): ToInstance, helpindex(361): ToInstance] uint32 FilesOpenedTotal;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FilesOpen"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(362): ToInstance, helpindex(363): ToInstance] uint32 FilesOpen;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ServerSessions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(314): ToInstance, helpindex(365): ToInstance] uint32 ServerSessions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("FileDirectorySearches"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(366): ToInstance, helpindex(367): ToInstance] uint32 FileDirectorySearches;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolNonpagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(58): ToInstance, helpindex(369): ToInstance] uint32 PoolNonpagedBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PoolNonpagedFailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(370): ToInstance, helpindex(371): ToInstance] uint32 PoolNonpagedFailures;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolNonpagedPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(372): ToInstance, helpindex(373): ToInstance] uint32 PoolNonpagedPeak;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolPagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(56): ToInstance, helpindex(375): ToInstance] uint32 PoolPagedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolPagedFailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(376): ToInstance, helpindex(377): ToInstance] uint32 PoolPagedFailures;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolPagedPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(378): ToInstance, helpindex(379): ToInstance] uint32 PoolPagedPeak;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ContextBlocksQueuedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(404): ToInstance, helpindex(405): ToInstance] uint32 ContextBlocksQueuedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("LogonPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(692): ToInstance, helpindex(693): ToInstance] uint32 LogonPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("LogonTotal"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1260): ToInstance, helpindex(1261): ToInstance] uint32 LogonTotal;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_Thread
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_Thread"): ToInstance, perfindex(232): ToInstance, helpindex(233): ToInstance]
class Win32_PerfFormattedData_PerfProc_Thread : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentProcessorTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(6): ToInstance, helpindex(191): ToInstance] uint64 PercentProcessorTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentUserTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(142): ToInstance, helpindex(193): ToInstance] uint64 PercentUserTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentPrivilegedTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(144): ToInstance, helpindex(195): ToInstance] uint64 PercentPrivilegedTime;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("ContextSwitchesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(146): ToInstance, helpindex(197): ToInstance] uint32 ContextSwitchesPersec;
	[CookingType("PERF_ELAPSED_TIME"): ToInstance, Counter("ElapsedTime"): ToInstance, PerfTimeStamp("Timestamp_Object"): ToInstance, PerfTimeFreq("Frequency_Object"): ToInstance, perfindex(684): ToInstance, helpindex(699): ToInstance] uint64 ElapsedTime;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PriorityCurrent"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(694): ToInstance, helpindex(695): ToInstance] uint32 PriorityCurrent;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PriorityBase"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(682): ToInstance, helpindex(697): ToInstance] uint32 PriorityBase;
	[CookingType("PERF_COUNTER_RAWCOUNT_HEX"): ToInstance, Counter("StartAddress"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(706): ToInstance, helpindex(707): ToInstance] uint32 StartAddress;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ThreadState"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(46): ToInstance, helpindex(47): ToInstance] uint32 ThreadState;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ThreadWaitReason"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(336): ToInstance, helpindex(337): ToInstance] uint32 ThreadWaitReason;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("IDProcess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance] uint32 IDProcess;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("IDThread"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(804): ToInstance, helpindex(805): ToInstance] uint32 IDThread;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_JobObjectDetails
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_JobObjectDetails"): ToInstance, perfindex(1548): ToInstance, helpindex(1549): ToInstance]
class Win32_PerfFormattedData_PerfProc_JobObjectDetails : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentProcessorTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(6): ToInstance, helpindex(189): ToInstance] uint64 PercentProcessorTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentUserTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(142): ToInstance, helpindex(157): ToInstance] uint64 PercentUserTime;
	[CookingType("PERF_100NSEC_TIMER"): ToInstance, Counter("PercentPrivilegedTime"): ToInstance, PerfTimeStamp("TimeStamp_Sys100NS"): ToInstance, PerfTimeFreq("Frequency_Sys100NS"): ToInstance, perfindex(144): ToInstance, helpindex(159): ToInstance] uint64 PercentPrivilegedTime;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("VirtualBytesPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(172): ToInstance, helpindex(173): ToInstance] uint64 VirtualBytesPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("VirtualBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(174): ToInstance, helpindex(175): ToInstance] uint64 VirtualBytes;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("PageFaultsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(28): ToInstance, helpindex(177): ToInstance] uint32 PageFaultsPersec;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WorkingSetPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(178): ToInstance, helpindex(179): ToInstance] uint64 WorkingSetPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WorkingSet"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(180): ToInstance, helpindex(181): ToInstance] uint64 WorkingSet;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PageFileBytesPeak"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(182): ToInstance, helpindex(183): ToInstance] uint64 PageFileBytesPeak;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PageFileBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(184): ToInstance, helpindex(185): ToInstance] uint64 PageFileBytes;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("PrivateBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(186): ToInstance, helpindex(187): ToInstance] uint64 PrivateBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ThreadCount"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(680): ToInstance, helpindex(681): ToInstance] uint32 ThreadCount;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PriorityBase"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(682): ToInstance, helpindex(683): ToInstance] uint32 PriorityBase;
	[CookingType("PERF_ELAPSED_TIME"): ToInstance, Counter("ElapsedTime"): ToInstance, PerfTimeStamp("Timestamp_Object"): ToInstance, PerfTimeFreq("Frequency_Object"): ToInstance, perfindex(684): ToInstance, helpindex(685): ToInstance] uint64 ElapsedTime;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("IDProcess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance] uint64 IDProcess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("CreatingProcessID"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1410): ToInstance, helpindex(1411): ToInstance] uint64 CreatingProcessID;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolPagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(56): ToInstance, helpindex(57): ToInstance] uint32 PoolPagedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("PoolNonpagedBytes"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(58): ToInstance, helpindex(59): ToInstance] uint32 PoolNonpagedBytes;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("HandleCount"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(952): ToInstance, helpindex(953): ToInstance] uint32 HandleCount;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOReadOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1412): ToInstance, helpindex(1413): ToInstance] uint64 IOReadOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOWriteOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1414): ToInstance, helpindex(1415): ToInstance] uint64 IOWriteOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IODataOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1416): ToInstance, helpindex(1417): ToInstance] uint64 IODataOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOOtherOperationsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1418): ToInstance, helpindex(1419): ToInstance] uint64 IOOtherOperationsPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOReadBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1420): ToInstance, helpindex(1421): ToInstance] uint64 IOReadBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOWriteBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1422): ToInstance, helpindex(1423): ToInstance] uint64 IOWriteBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IODataBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1424): ToInstance, helpindex(1425): ToInstance] uint64 IODataBytesPersec;
	[CookingType("PERF_COUNTER_BULK_COUNT"): ToInstance, Counter("IOOtherBytesPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(1426): ToInstance, helpindex(1427): ToInstance] uint64 IOOtherBytesPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_Tcpip_TCP
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("Tcpip"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_Tcpip_TCP"): ToInstance, perfindex(638): ToInstance, helpindex(639): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_Tcpip_TCP : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SegmentsPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(640): ToInstance, helpindex(641): ToInstance] uint32 SegmentsPersec;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectionsEstablished"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(642): ToInstance, helpindex(643): ToInstance] uint32 ConnectionsEstablished;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectionsActive"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(644): ToInstance, helpindex(645): ToInstance] uint32 ConnectionsActive;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectionsPassive"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(646): ToInstance, helpindex(647): ToInstance] uint32 ConnectionsPassive;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectionFailures"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(648): ToInstance, helpindex(649): ToInstance] uint32 ConnectionFailures;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ConnectionsReset"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(650): ToInstance, helpindex(651): ToInstance] uint32 ConnectionsReset;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SegmentsReceivedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(652): ToInstance, helpindex(653): ToInstance] uint32 SegmentsReceivedPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SegmentsSentPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(654): ToInstance, helpindex(655): ToInstance] uint32 SegmentsSentPersec;
	[CookingType("PERF_COUNTER_COUNTER"): ToInstance, Counter("SegmentsRetransmittedPersec"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(656): ToInstance, helpindex(657): ToInstance] uint32 SegmentsRetransmittedPersec;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_TermService_TerminalServices
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("TermService"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_TermService_TerminalServices"): ToInstance, perfindex(2176): ToInstance, helpindex(2177): ToInstance, singleton: DisableOverride ToInstance ToSubClass]
class Win32_PerfFormattedData_TermService_TerminalServices : Win32_PerfFormattedData
{
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("TotalSessions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2178): ToInstance, helpindex(2179): ToInstance] uint32 TotalSessions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("ActiveSessions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2180): ToInstance, helpindex(2181): ToInstance] uint32 ActiveSessions;
	[CookingType("PERF_COUNTER_RAWCOUNT"): ToInstance, Counter("InactiveSessions"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(2182): ToInstance, helpindex(2183): ToInstance] uint32 InactiveSessions;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_FullImage_Costly
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_FullImage_Costly"): ToInstance, perfindex(1408): ToInstance, helpindex(1409): ToInstance]
class Win32_PerfFormattedData_PerfProc_FullImage_Costly : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("NoAccess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(788): ToInstance, helpindex(789): ToInstance] uint64 NoAccess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(790): ToInstance, helpindex(791): ToInstance] uint64 ReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(792): ToInstance, helpindex(793): ToInstance] uint64 ReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("WriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(794): ToInstance, helpindex(795): ToInstance] uint64 WriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("Executable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(796): ToInstance, helpindex(797): ToInstance] uint64 Executable;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ExecReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(798): ToInstance, helpindex(799): ToInstance] uint64 ExecReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ExecReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(800): ToInstance, helpindex(801): ToInstance] uint64 ExecReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ExecWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(802): ToInstance, helpindex(803): ToInstance] uint64 ExecWriteCopy;
};

//**************************************************************************
//* Class: Win32_PerfFormattedData_PerfProc_ProcessAddressSpace_Costly
//* Derived from: Win32_PerfFormattedData
//**************************************************************************
[dynamic: ToInstance, provider("HiPerfCooker_v1"), locale(1033): ToInstance, registrykey("PerfProc"): ToInstance, Cooked, AutoCook(1): ToInstance, genericperfctr: ToInstance, hiperf: ToInstance, AutoCook_RawClass("Win32_PerfRawData_PerfProc_ProcessAddressSpace_Costly"): ToInstance, perfindex(786): ToInstance, helpindex(787): ToInstance]
class Win32_PerfFormattedData_PerfProc_ProcessAddressSpace_Costly : Win32_PerfFormattedData
{
	[key] string Name = NULL;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("IDProcess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(784): ToInstance, helpindex(785): ToInstance] uint64 IDProcess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("BytesImageReserved"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(776): ToInstance, helpindex(777): ToInstance] uint64 BytesImageReserved;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("BytesImageFree"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(778): ToInstance, helpindex(779): ToInstance] uint64 BytesImageFree;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("BytesReserved"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(780): ToInstance, helpindex(781): ToInstance] uint64 BytesReserved;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("BytesFree"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(782): ToInstance, helpindex(783): ToInstance] uint64 BytesFree;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceNoAccess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(710): ToInstance, helpindex(711): ToInstance] uint64 MappedSpaceNoAccess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(712): ToInstance, helpindex(713): ToInstance] uint64 MappedSpaceReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(714): ToInstance, helpindex(715): ToInstance] uint64 MappedSpaceReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(716): ToInstance, helpindex(717): ToInstance] uint64 MappedSpaceWriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceExecutable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(718): ToInstance, helpindex(719): ToInstance] uint64 MappedSpaceExecutable;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceExecReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(720): ToInstance, helpindex(721): ToInstance] uint64 MappedSpaceExecReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceExecReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(722): ToInstance, helpindex(723): ToInstance] uint64 MappedSpaceExecReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("MappedSpaceExecWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(724): ToInstance, helpindex(725): ToInstance] uint64 MappedSpaceExecWriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceNoAccess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(726): ToInstance, helpindex(727): ToInstance] uint64 ReservedSpaceNoAccess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(728): ToInstance, helpindex(729): ToInstance] uint64 ReservedSpaceReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(730): ToInstance, helpindex(731): ToInstance] uint64 ReservedSpaceReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(732): ToInstance, helpindex(733): ToInstance] uint64 ReservedSpaceWriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceExecutable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(734): ToInstance, helpindex(735): ToInstance] uint64 ReservedSpaceExecutable;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceExecReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(736): ToInstance, helpindex(737): ToInstance] uint64 ReservedSpaceExecReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceExecReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(738): ToInstance, helpindex(739): ToInstance] uint64 ReservedSpaceExecReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ReservedSpaceExecWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(742): ToInstance, helpindex(743): ToInstance] uint64 ReservedSpaceExecWriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceNoAccess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(744): ToInstance, helpindex(745): ToInstance] uint64 UnassignedSpaceNoAccess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(746): ToInstance, helpindex(747): ToInstance] uint64 UnassignedSpaceReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(748): ToInstance, helpindex(749): ToInstance] uint64 UnassignedSpaceReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(750): ToInstance, helpindex(751): ToInstance] uint64 UnassignedSpaceWriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceExecutable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(752): ToInstance, helpindex(753): ToInstance] uint64 UnassignedSpaceExecutable;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceExecReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(754): ToInstance, helpindex(755): ToInstance] uint64 UnassignedSpaceExecReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceExecReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(756): ToInstance, helpindex(757): ToInstance] uint64 UnassignedSpaceExecReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("UnassignedSpaceExecWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(758): ToInstance, helpindex(759): ToInstance] uint64 UnassignedSpaceExecWriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceNoAccess"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(760): ToInstance, helpindex(761): ToInstance] uint64 ImageSpaceNoAccess;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(762): ToInstance, helpindex(763): ToInstance] uint64 ImageSpaceReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(764): ToInstance, helpindex(765): ToInstance] uint64 ImageSpaceReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(766): ToInstance, helpindex(767): ToInstance] uint64 ImageSpaceWriteCopy;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceExecutable"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(768): ToInstance, helpindex(769): ToInstance] uint64 ImageSpaceExecutable;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceExecReadOnly"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(770): ToInstance, helpindex(771): ToInstance] uint64 ImageSpaceExecReadOnly;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceExecReadPerWrite"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(772): ToInstance, helpindex(773): ToInstance] uint64 ImageSpaceExecReadPerWrite;
	[CookingType("PERF_COUNTER_LARGE_RAWCOUNT"): ToInstance, Counter("ImageSpaceExecWriteCopy"): ToInstance, PerfTimeStamp("Timestamp_PerfTime"): ToInstance, PerfTimeFreq("Frequency_PerfTime"): ToInstance, perfindex(774): ToInstance, helpindex(775): ToInstance] uint64 ImageSpaceExecWriteCopy;
};

//**************************************************************************
//* Class: Win32_LUIDandAttributes
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{63021F4B-F377-4a88-ABD1-835D14142142}"): ToInstance]
class Win32_LUIDandAttributes
{
	[read: ToSubClass] Win32_LUID LUID;
	[read: ToSubClass] uint32 Attributes;
};

//**************************************************************************
//* Class: CIM_ElementCapacity
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B6A-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ElementCapacity
{
	[read: ToSubClass] CIM_PhysicalCapacity ref Capacity;
	[Min(1): ToSubClass, read: ToSubClass] CIM_PhysicalElement ref Element;
};

//**************************************************************************
//* Class: CIM_SupportAccess
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{80321714-DB31-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_SupportAccess
{
	[read: ToSubClass, MappingStrings{"MIF.DMTF|FRU|002.11", "MIF.DMTF|FRU|002.12"}: ToSubClass] STRING CommunicationInfo;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Support|001.5"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"}: ToSubClass] UINT16 CommunicationMode;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Support|001.3"}: ToSubClass] STRING Description;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Support|001.2"}: ToSubClass, MaxLen(64): ToSubClass] STRING Locale;
	[read: ToSubClass, key, MaxLen(256): ToSubClass] STRING SupportAccessId;
};

//**************************************************************************
//* Class: Win32_CurrentTime
//* Derived from: 
//**************************************************************************
[Abstract, Singleton: DisableOverride ToInstance ToSubClass]
class Win32_CurrentTime
{
	[read] uint32 Year;
	[read] uint32 Month;
	[read] uint32 Day;
	[read] uint32 DayOfWeek;
	[read] uint32 WeekInMonth;
	[read] uint32 Quarter;
	[read] uint32 Hour;
	[read] uint32 Minute;
	[read] uint32 Second;
	[read] uint32 Milliseconds;
};

//**************************************************************************
//* Class: Win32_LocalTime
//* Derived from: Win32_CurrentTime
//**************************************************************************
[dynamic: ToInstance, provider("Win32ClockProvider")]
class Win32_LocalTime : Win32_CurrentTime
{
};

//**************************************************************************
//* Class: Win32_UTCTime
//* Derived from: Win32_CurrentTime
//**************************************************************************
[dynamic: ToInstance, provider("Win32ClockProvider")]
class Win32_UTCTime : Win32_CurrentTime
{
};

//**************************************************************************
//* Class: CIM_ProductSupport
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8D6D6880-DB2B-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_ProductSupport
{
	[read: ToSubClass] CIM_Product ref Product;
	[read: ToSubClass] CIM_SupportAccess ref Support;
};

//**************************************************************************
//* Class: Win32_NTLogEvent
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("MS_NT_EVENTLOG_PROVIDER"): ToInstance, EnumPrivileges{"SeSecurityPrivilege"}: ToSubClass, Locale(1033): ToInstance, UUID("{8502C57C-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NTLogEvent
{
	[key] uint32 RecordNumber;
	[key] string Logfile;
	[Fixed: ToSubClass] uint32 EventIdentifier;
	uint16 EventCode;
	[Fixed: ToSubClass] string SourceName;
	[Fixed: ToSubClass, ValueMap{"1", "2", "4", "8", "16"}: ToSubClass] string Type;
	uint16 Category;
	string CategoryString;
	[Fixed: ToSubClass] datetime TimeGenerated;
	[Fixed: ToSubClass] datetime TimeWritten;
	[Fixed: ToSubClass] string ComputerName;
	string User;
	string Message;
	string InsertionStrings[];
	Uint8 Data[];
	[Fixed: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass] uint8 EventType;
};

//**************************************************************************
//* Class: CIM_CollectedCollections
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, Abstract, Association: DisableOverride ToInstance ToSubClass, Aggregation: ToSubClass]
class CIM_CollectedCollections
{
	[Aggregate: ToSubClass, CIM_Key: ToSubClass] CIM_CollectionOfMSEs ref Collection;
	[CIM_Key: ToSubClass] CIM_CollectionOfMSEs ref CollectionInCollection;
};

//**************************************************************************
//* Class: CIM_Component
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, Abstract, Aggregation: ToSubClass, Locale(1033): ToInstance, UUID("{8502C573-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Component
{
	[read: ToSubClass, Aggregate: ToSubClass] CIM_ManagedSystemElement ref GroupComponent;
	[read: ToSubClass] CIM_ManagedSystemElement ref PartComponent;
};

//**************************************************************************
//* Class: CIM_RedundancyComponent
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FB9D6E62-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_RedundancyComponent : CIM_Component
{
	[read: ToSubClass, Override("GroupComponent")] CIM_RedundancyGroup ref GroupComponent = NULL;
	[read: ToSubClass] CIM_ManagedSystemElement ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_PExtentRedundancyComponent
//* Derived from: CIM_RedundancyComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{AD3C1FA2-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_PExtentRedundancyComponent : CIM_RedundancyComponent
{
	[read: ToSubClass, Override("GroupComponent")] CIM_StorageRedundancyGroup ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_PhysicalExtent ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_AggregateRedundancyComponent
//* Derived from: CIM_RedundancyComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{154E66D8-DB35-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_AggregateRedundancyComponent : CIM_RedundancyComponent
{
	[read: ToSubClass, Override("GroupComponent")] CIM_StorageRedundancyGroup ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_AggregatePExtent ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SubDirectory
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{F25FE469-783E-11d2-90BF-0060081A46FD}"): ToInstance]
class Win32_SubDirectory : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_Directory"}: ToSubClass] Win32_Directory ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_Directory"}: ToSubClass] Win32_Directory ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_LoadOrderGroupServiceMembers
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4EF-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LoadOrderGroupServiceMembers : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_LoadOrderGroup"}: ToSubClass] Win32_LoadOrderGroup ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_BaseService"}: ToSubClass] Win32_BaseService ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_OperatingSystemSoftwareFeature
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{96B4C734-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_OperatingSystemSoftwareFeature : CIM_Component
{
	[read: ToSubClass, Override("GroupComponent")] CIM_OperatingSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_SoftwareFeature ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_OSProcess
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{A361A7AE-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_OSProcess : CIM_Component
{
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("GroupComponent")] CIM_OperatingSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_Process ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_LogicalDiskRootDirectory
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{F25FE468-783E-11d2-90BF-0060081A46FD}"): ToInstance]
class Win32_LogicalDiskRootDirectory : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_LogicalDisk"}: ToSubClass] Win32_LogicalDisk ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_Directory"}: ToSubClass] Win32_Directory ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_SystemComponent
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{527BC6CE-BAFE-11d2-85E5-0000F8102E5F}"): ToInstance]
class CIM_SystemComponent : CIM_Component
{
	[read: ToSubClass, Override("GroupComponent")] CIM_System ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_ManagedSystemElement ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemBIOS
//* Derived from: CIM_SystemComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4EE-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemBIOS : CIM_SystemComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_BIOS"}: ToSubClass] Win32_BIOS ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemProcesses
//* Derived from: CIM_SystemComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F3-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemProcesses : CIM_SystemComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_Process"}: ToSubClass] Win32_Process ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_ComputerSystemResource
//* Derived from: CIM_SystemComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9B81340A-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ComputerSystemResource : CIM_SystemComponent
{
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("GroupComponent")] CIM_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_SystemResource ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_ComputerSystemDMA
//* Derived from: CIM_ComputerSystemResource
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{9B81340B-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ComputerSystemDMA : CIM_ComputerSystemResource
{
	[read: ToSubClass, Override("GroupComponent")] CIM_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_DMA ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemResources
//* Derived from: CIM_ComputerSystemResource
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F8-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemResources : CIM_ComputerSystemResource
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"CIM|CIM_SystemResource"}: ToSubClass] CIM_SystemResource ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_ComputerSystemIRQ
//* Derived from: CIM_ComputerSystemResource
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{A2EFC896-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ComputerSystemIRQ : CIM_ComputerSystemResource
{
	[read: ToSubClass] CIM_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_IRQ ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_ComputerSystemMappedIO
//* Derived from: CIM_ComputerSystemResource
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{A2EFC897-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ComputerSystemMappedIO : CIM_ComputerSystemResource
{
	[read: ToSubClass] CIM_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_MemoryMappedIO ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_SystemDevice
//* Derived from: CIM_SystemComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{4B2C30D7-BAFE-11d2-85E5-0000F8102E5F}"): ToInstance]
class CIM_SystemDevice : CIM_SystemComponent
{
	[read: ToSubClass, Override("GroupComponent"), Max(1): ToSubClass, Min(1): ToSubClass] CIM_System ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_LogicalDevice ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemDevices
//* Derived from: CIM_SystemDevice
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F4-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemDevices : CIM_SystemDevice
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemPartitions
//* Derived from: Win32_SystemDevices
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F5-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemPartitions : Win32_SystemDevices
{
	[read: ToSubClass, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_DiskPartition"}: ToSubClass] Win32_DiskPartition ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_ComputerSystemProcessor
//* Derived from: Win32_SystemDevices
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{719A6839-C124-11d2-85E8-0000F8102E5F}"): ToInstance]
class Win32_ComputerSystemProcessor : Win32_SystemDevices
{
	[Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_Processor"}: ToSubClass] Win32_Processor ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemLoadOrderGroups
//* Derived from: CIM_SystemComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C503-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemLoadOrderGroups : CIM_SystemComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_LoadOrderGroup"}: ToSubClass] Win32_LoadOrderGroup ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemNetworkConnections
//* Derived from: CIM_SystemComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F7-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemNetworkConnections : CIM_SystemComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_NetworkConnection"}: ToSubClass] Win32_NetworkConnection ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemSystemDriver
//* Derived from: CIM_SystemComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F1-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemSystemDriver : CIM_SystemComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_SystemDriver"}: ToSubClass] Win32_SystemDriver ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_ApplicationSystemSoftwareFeature
//* Derived from: CIM_SystemComponent
//**************************************************************************
[Locale(1033): ToInstance, UUID("{0E17B9EA-E3D3-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_ApplicationSystemSoftwareFeature : CIM_SystemComponent
{
	[read: ToSubClass, Min(0): ToSubClass, Override("GroupComponent")] CIM_ApplicationSystem ref GroupComponent = NULL;
	[read: ToSubClass, Min(0): ToSubClass, Override("PartComponent")] CIM_SoftwareFeature ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_InstalledOS
//* Derived from: CIM_SystemComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C575-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_InstalledOS : CIM_SystemComponent
{
	[read: ToSubClass, Override("GroupComponent"), Min(1): ToSubClass, Max(1): ToSubClass] CIM_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_OperatingSystem ref PartComponent = NULL;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|Operating System|001.4"}: ToSubClass] boolean PrimaryOS;
};

//**************************************************************************
//* Class: Win32_SystemOperatingSystem
//* Derived from: CIM_InstalledOS
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F0-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance ToSubClass]
class Win32_SystemOperatingSystem : CIM_InstalledOS
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_OperatingSystem"}: ToSubClass] Win32_OperatingSystem ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemServices
//* Derived from: CIM_SystemComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F6-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemServices : CIM_SystemComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_Service"}: ToSubClass] Win32_Service ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_HostedFileSystem
//* Derived from: CIM_SystemComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{A2EFC898-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_HostedFileSystem : CIM_SystemComponent
{
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("GroupComponent")] CIM_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_FileSystem ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemUsers
//* Derived from: CIM_SystemComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F2-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemUsers : CIM_SystemComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_UserAccount"}: ToSubClass] Win32_UserAccount ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_FileStorage
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{4A626026-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_FileStorage : CIM_Component
{
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("GroupComponent")] CIM_FileSystem ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_LogicalFile ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_ProcessThread
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{B7E6042C-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_ProcessThread : CIM_Component
{
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("GroupComponent")] CIM_Process ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"), Weak: ToSubClass] CIM_Thread ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_GroupInDomain
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance, UUID("C1717231-5F16-4AE6-966F-6CA856B7AAF6"): ToInstance]
class Win32_GroupInDomain : CIM_Component
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_NTDomain"}: ToSubClass] Win32_NTDomain ref GroupComponent = NULL;
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_Group"}: ToSubClass] Win32_Group ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_COMApplicationClasses
//* Derived from: CIM_Component
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{0F73ED51-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_COMApplicationClasses : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_COMApplication"}: ToSubClass] Win32_COMApplication ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_COMClass"}: ToSubClass] Win32_COMClass ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_ClassicCOMApplicationClasses
//* Derived from: Win32_COMApplicationClasses
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED54-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_ClassicCOMApplicationClasses : Win32_COMApplicationClasses
{
	[read: ToSubClass, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_DCOMApplication"}: ToSubClass] Win32_DCOMApplication ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_ClassicCOMClass"}: ToSubClass] Win32_ClassicCOMClass ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_DirectoryContainsFile
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{6F9D4740-8324-11d2-AAD9-006008C78BC7}"): ToInstance]
class CIM_DirectoryContainsFile : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"), Max(1): ToSubClass] CIM_Directory ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent")] CIM_DataFile ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_UserInDomain
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance, UUID("B38813CF-0673-495C-A12F-384D47BDF1ED"): ToInstance]
class Win32_UserInDomain : CIM_Component
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_NTDomain"}: ToSubClass] Win32_NTDomain ref GroupComponent = NULL;
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_UserAccount"}: ToSubClass] Win32_UserAccount ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_SoftwareFeatureSoftwareElements
//* Derived from: CIM_Component
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A91081E2-DB37-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_SoftwareFeatureSoftwareElements : CIM_Component
{
	[read: ToSubClass, Min(0): ToSubClass, Max(FALSE): ToSubClass] CIM_SoftwareFeature ref GroupComponent = NULL;
	[read: ToSubClass, Min(1): ToSubClass, Max(FALSE): ToSubClass] CIM_SoftwareElement ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_BIOSFeatureBIOSElements
//* Derived from: CIM_SoftwareFeatureSoftwareElements
//**************************************************************************
[Locale(1033): ToInstance, UUID("{42B2EC5C-DB35-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_BIOSFeatureBIOSElements : CIM_SoftwareFeatureSoftwareElements
{
	[read: ToSubClass, Override("GroupComponent")] CIM_BIOSFeature ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_BIOSElement ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_VideoBIOSFeatureVideoBIOSElements
//* Derived from: CIM_SoftwareFeatureSoftwareElements
//**************************************************************************
[Locale(1033): ToInstance, UUID("{B3F86390-DB37-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_VideoBIOSFeatureVideoBIOSElements : CIM_SoftwareFeatureSoftwareElements
{
	[read: ToSubClass, Override("GroupComponent")] CIM_VideoBIOSFeature ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_VideoBIOSElement ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_SoftwareFeatureSoftwareElements
//* Derived from: CIM_SoftwareFeatureSoftwareElements
//**************************************************************************
[Locale(1033): ToInstance, UUID("{F3B44268-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareFeatureSoftwareElements : CIM_SoftwareFeatureSoftwareElements
{
	[read: ToSubClass, key, Override("GroupComponent")] Win32_SoftwareFeature ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent")] Win32_SoftwareElement ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_ProgramGroupContents
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{86E30E83-7DB2-11d2-90CB-0060081A46FD}"): ToInstance]
class Win32_ProgramGroupContents : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_LogicalProgramGroup"}: ToSubClass] Win32_LogicalProgramGroup ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_ProgramGroupOrItem"}: ToSubClass] Win32_ProgramGroupOrItem ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_Container
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B6F-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Container : CIM_Component
{
	[read: ToSubClass, Override("GroupComponent"), Max(1): ToSubClass] CIM_PhysicalPackage ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_PhysicalElement ref PartComponent = NULL;
	[read: ToSubClass] string LocationWithinContainer;
};

//**************************************************************************
//* Class: CIM_PackagedComponent
//* Derived from: CIM_Container
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B79-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PackagedComponent : CIM_Container
{
	[read: ToSubClass, Max(1): ToSubClass, Override("GroupComponent")] CIM_PhysicalPackage ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_PhysicalComponent ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_PhysicalMemoryLocation
//* Derived from: CIM_PackagedComponent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{B24EF562-BBBE-11d2-ABFB-00805F538618}"): ToInstance]
class Win32_PhysicalMemoryLocation : CIM_PackagedComponent
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_PhysicalMemoryArray"}: ToSubClass] Win32_PhysicalMemoryArray ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_PhysicalMemory"}: ToSubClass] Win32_PhysicalMemory ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_MemoryOnCard
//* Derived from: CIM_PackagedComponent
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B7C-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_MemoryOnCard : CIM_PackagedComponent
{
	[read: ToSubClass, Max(1): ToSubClass, Override("GroupComponent")] CIM_Card ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_PhysicalMemory ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_ChassisInRack
//* Derived from: CIM_Container
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B73-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ChassisInRack : CIM_Container
{
	[read: ToSubClass, Max(1): ToSubClass, Override("GroupComponent")] CIM_Rack ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_Chassis ref PartComponent = NULL;
	[Units("Us"): ToSubClass, read: ToSubClass] uint16 BottomU;
};

//**************************************************************************
//* Class: CIM_ConnectorOnPackage
//* Derived from: CIM_Container
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B8C-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ConnectorOnPackage : CIM_Container
{
	[read: ToSubClass, Max(1): ToSubClass, Override("GroupComponent")] CIM_PhysicalPackage ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_PhysicalConnector ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_CardOnCard
//* Derived from: CIM_Container
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B77-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_CardOnCard : CIM_Container
{
	[read: ToSubClass, Max(1): ToSubClass, Override("GroupComponent")] CIM_Card ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_Card ref PartComponent = NULL;
	[read: ToSubClass] string MountOrSlotDescription;
};

//**************************************************************************
//* Class: CIM_PackageInChassis
//* Derived from: CIM_Container
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B74-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PackageInChassis : CIM_Container
{
	[read: ToSubClass, Max(1): ToSubClass, Override("GroupComponent")] CIM_Chassis ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_PhysicalPackage ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_CollectionOfSensors
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{A2ABF536-DB35-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_CollectionOfSensors : CIM_Component
{
	[read: ToSubClass, Max(1): ToSubClass, Override("GroupComponent")] CIM_MultiStateSensor ref GroupComponent = NULL;
	[read: ToSubClass, Min(2): ToSubClass, Override("PartComponent")] CIM_BinarySensor ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_GroupUser
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C508-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_GroupUser : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_Group"}: ToSubClass] Win32_Group ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_Account"}: ToSubClass] Win32_Account ref PartComponent = NULL;
};

//**************************************************************************
//* Class: CIM_LinkHasConnector
//* Derived from: CIM_Component
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B8B-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_LinkHasConnector : CIM_Component
{
	[read: ToSubClass, Override("GroupComponent"), Max(1): ToSubClass] CIM_PhysicalLink ref GroupComponent = NULL;
	[read: ToSubClass, Override("PartComponent")] CIM_PhysicalConnector ref PartComponent = NULL;
};

//**************************************************************************
//* Class: Win32_MemoryDeviceArray
//* Derived from: CIM_Component
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{B24EF563-BBBE-11d2-ABFB-00805F538618}"): ToInstance]
class Win32_MemoryDeviceArray : CIM_Component
{
	[read: ToSubClass, key, Override("GroupComponent"): ToSubClass, MappingStrings{"WMI|Win32_MemoryArray"}: ToSubClass] Win32_MemoryArray ref GroupComponent = NULL;
	[read: ToSubClass, key, Override("PartComponent"): ToSubClass, MappingStrings{"WMI|Win32_MemoryDevice"}: ToSubClass] Win32_MemoryDevice ref PartComponent = NULL;
};

//**************************************************************************
//* Class: NTEventlogProviderConfig
//* Derived from: 
//**************************************************************************
[singleton: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{8502C57A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class NTEventlogProviderConfig
{
	datetime LastBootUpTime;
};

//**************************************************************************
//* Class: Win32_DCOMApplicationAccessAllowedSetting
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED59-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_DCOMApplicationAccessAllowedSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{" Microsoft CIM Win32|Win32_DCOMApplication|AppID"}: ToSubClass] Win32_DCOMApplication ref Element;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{" Microsoft CIM Win32|Win32_SID|SID"}: ToSubClass] Win32_SID ref Setting;
};

//**************************************************************************
//* Class: CIM_Setting
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C572-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Setting
{
	[read: ToSubClass, MaxLen(256): ToSubClass] string SettingID;
	[read: ToSubClass, MaxLen(64): ToSubClass] string Caption;
	[read: ToSubClass] string Description;
};

//**************************************************************************
//* Class: Win32_OSRecoveryConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("{8502C4E8-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_OSRecoveryConfiguration : CIM_Setting
{
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|AutoReboot"}: ToSubClass] boolean AutoReboot;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|DumpFile"}: ToSubClass] string DebugFilePath;
	[read: ToSubClass, write: ToSubClass] string ExpandedDebugFilePath;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|MiniDumpDir"}: ToSubClass] string MiniDumpDirectory;
	[read: ToSubClass, write: ToSubClass] string ExpandedMiniDumpDirectory;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Name;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|Overwrite"}: ToSubClass] boolean OverwriteExistingDebugFile;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|SendAlert"}: ToSubClass] boolean SendAdminAlert;
	[read: ToSubClass, write: ToSubClass, DEPRECATED: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|CrashDumpEnabled"}: ToSubClass] boolean WriteDebugInfo;
	[read: ToSubClass, write: ToSubClass, ValueMap{"0", "1", "2", "3"}: ToSubClass] uint32 DebugInfoType;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|LogEvent"}: ToSubClass] boolean WriteToSystemLog;
	[read: ToSubClass, write: ToSubClass, DEPRECATED: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|KernelDumpOnly"}: ToSubClass] boolean KernelDumpOnly;
};

//**************************************************************************
//* Class: Win32_WindowsProductActivation
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_WINDOWSPRODUCTACTIVATION_Prov")]
class Win32_WindowsProductActivation : CIM_Setting
{
	[key, read] string ServerName;
	[read] uint32 ActivationRequired;
	[read] uint32 RemainingGracePeriod;
	[read] uint32 RemainingEvaluationPeriod;
	[read] uint32 IsNotificationOn;
	[read, write] string ProductID;
	[Implemented] uint32 GetInstallationID([Out] string InstallationID);
	[Implemented] uint32 SetProductKey([In] string ProductKey);
	[Implemented] uint32 ActivateOnline();
	[Implemented] uint32 ActivateOffline([In] string ConfirmationID);
	[Implemented] uint32 SetNotification([In] uint32 Enable);
};

//**************************************************************************
//* Class: Win32_TimeZone
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4EC-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_TimeZone : CIM_Setting
{
	[read: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|Bias"}: ToSubClass] sint32 Bias;
	[read: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightBias"}: ToSubClass] sint32 DaylightBias;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wDay"}: ToSubClass] uint32 DaylightDay;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wDayOfWeek"}: ToSubClass] uint8 DaylightDayOfWeek;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wHour"}: ToSubClass] uint32 DaylightHour;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wMilliseconds"}: ToSubClass] uint32 DaylightMillisecond;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wMinute"}: ToSubClass] uint32 DaylightMinute;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wMonth"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}: ToSubClass] uint32 DaylightMonth;
	[read: ToSubClass, MaxLen(256): ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightName"}: ToSubClass] string DaylightName;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wSecond"}: ToSubClass] uint32 DaylightSecond;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wYear"}: ToSubClass] uint32 DaylightYear;
	[read: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardBias"}: ToSubClass] uint32 StandardBias;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wDay"}: ToSubClass] uint32 StandardDay;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wDayOfWeek"}: ToSubClass] uint8 StandardDayOfWeek;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wHour"}: ToSubClass] uint32 StandardHour;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wMilliseconds"}: ToSubClass] uint32 StandardMillisecond;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wMinute"}: ToSubClass] uint32 StandardMinute;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wMonth"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}: ToSubClass] uint32 StandardMonth;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardName"}: ToSubClass] string StandardName;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wSecond"}: ToSubClass] uint32 StandardSecond;
	[read: ToSubClass, MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wYear"}: ToSubClass] uint32 StandardYear;
};

//**************************************************************************
//* Class: Win32_TSSessionDirectory
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSSESSIONDIRECTORY_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer")]
class Win32_TSSessionDirectory : CIM_Setting
{
	[read] string SessionDirectoryLocation;
	[key, read] uint32 SessionDirectoryActive;
	[read] uint32 SessionDirectoryExposeServerIP;
	[read] string SessionDirectoryClusterName;
	[Implemented] uint32 SetSessionDirectoryProperty([In] string PropertyName, [In] string Value);
	[Implemented] uint32 SetSessionDirectoryActive([In] uint32 SessionDirectoryActive);
	[Implemented] uint32 SetSessionDirectoryExposeServerIP([In] uint32 SessionDirectoryExposeServerIP);
};

//**************************************************************************
//* Class: Win32_Proxy
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_PROXY_Prov")]
class Win32_Proxy : CIM_Setting
{
	[key, read] string ServerName;
	[read] string ProxyServer;
	[read] string ProxyPortNumber;
	[Implemented] uint32 SetProxySetting([In] string ProxyServer, [In] string ProxyPortNumber);
};

//**************************************************************************
//* Class: Win32_ProgramGroup
//* Derived from: CIM_Setting
//**************************************************************************
[DEPRECATED: ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4EA-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_ProgramGroup : CIM_Setting
{
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders"}: ToSubClass] string GroupName;
	[DEPRECATED: ToSubClass, read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Name;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string UserName;
};

//**************************************************************************
//* Class: Win32_DisplayControllerConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[DEPRECATED: ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E5-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DisplayControllerConfiguration : CIM_Setting
{
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|BITSPIXEL"}: ToSubClass] uint32 BitsPerPixel;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|PLANES"}: ToSubClass] uint32 ColorPlanes;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMCOLORS"}: ToSubClass] uint32 DeviceEntriesInAColorTable;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMPENS"}: ToSubClass] uint32 DeviceSpecificPens;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZRES"}: ToSubClass] uint32 HorizontalResolution;
	[DEPRECATED: ToSubClass, read: ToSubClass, key, MappingStrings{"WMI"}: ToSubClass] string Name;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Hertz"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZRESVREFRESH"}: ToSubClass] sint32 RefreshRate;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMRESERVED"}: ToSubClass] uint32 ReservedSystemPaletteEntries;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMRESERVED"}: ToSubClass] uint32 SystemPaletteEntries;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VERTRES"}: ToSubClass] uint32 VerticalResolution;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string VideoMode;
};

//**************************************************************************
//* Class: Win32_BootConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E2-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_BootConfiguration : CIM_Setting
{
	[read: ToSubClass, MappingStrings{"Win32API|Process and Thread Functions|GetEnvironmentVariable|WinBootDir"}: ToSubClass] string BootDirectory;
	[read: ToSubClass, MappingStrings{"Win32API|Process and Thread Functions|GetEnvironmentVariable|WinBootDir"}: ToSubClass] string ConfigurationPath;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|GetDriveType"}: ToSubClass] string LastDrive;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Name;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|GetTempPath"}: ToSubClass] string ScratchDirectory;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|GetTempPath"}: ToSubClass] string TempDirectory;
};

//**************************************************************************
//* Class: Win32_SecuritySetting
//* Derived from: CIM_Setting
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{8502C583-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySetting : CIM_Setting
{
	[read: ToSubClass] uint32 ControlFlags;
	[Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint32 GetSecurityDescriptor([OUT] Win32_SecurityDescriptor Descriptor);
	[Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint32 SetSecurityDescriptor([IN] Win32_SecurityDescriptor Descriptor);
};

//**************************************************************************
//* Class: Win32_LogicalFileSecuritySetting
//* Derived from: Win32_SecuritySetting
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C58C-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalFileSecuritySetting : Win32_SecuritySetting
{
	[read: ToSubClass, key] string Path;
	[read: ToSubClass] boolean OwnerPermissions;
	[Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass, implemented, ValueMap{"0", "2", "8", "9", "21", ".."}] uint32 GetSecurityDescriptor([OUT] Win32_SecurityDescriptor Descriptor);
	[Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass, implemented, ValueMap{"0", "2", "8", "9", "21", ".."}] uint32 SetSecurityDescriptor([IN] Win32_SecurityDescriptor Descriptor);
};

//**************************************************************************
//* Class: Win32_LogicalShareSecuritySetting
//* Derived from: Win32_SecuritySetting
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C591-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalShareSecuritySetting : Win32_SecuritySetting
{
	[key, read: ToSubClass] string Name;
	[Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass, implemented, ValueMap{"0", "2", "8", "9", "21", ".."}] uint32 GetSecurityDescriptor([OUT] Win32_SecurityDescriptor Descriptor);
	[Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass, implemented, ValueMap{"0", "2", "8", "9", "21", ".."}] uint32 SetSecurityDescriptor([IN] Win32_SecurityDescriptor Descriptor);
};

//**************************************************************************
//* Class: Win32_SerialPortConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4EB-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SerialPortConfiguration : CIM_Setting
{
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fAbortOnError"}: ToSubClass] boolean AbortReadWriteOnError;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|BaudRate"}: ToSubClass] uint32 BaudRate;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fBinary"}: ToSubClass] boolean BinaryModeEnabled;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|ByteSize"}: ToSubClass] uint32 BitsPerByte;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fTXContinueOnXoff"}: ToSubClass] boolean ContinueXMitOnXOff;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fOutxCtsFlow"}: ToSubClass] boolean CTSOutflowControl;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fNull"}: ToSubClass] boolean DiscardNULLBytes;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fOutxDsrFlow"}: ToSubClass] boolean DSROutflowControl;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fDsrSensitivity"}: ToSubClass] boolean DSRSensitivity;
	[read: ToSubClass, ValueMap{"Enable", "Disable", "Handshake"}: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fDtrControl"}: ToSubClass] string DTRFlowControlType;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|EofChar"}: ToSubClass] uint32 EOFCharacter;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|ErrorChar"}: ToSubClass] uint32 ErrorReplaceCharacter;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fErrorChar"}: ToSubClass] boolean ErrorReplacementEnabled;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|EvtChar"}: ToSubClass] uint32 EventCharacter;
	[read: ToSubClass, MappingStrings{"Win32API|File Functions|CreateFile"}: ToSubClass] boolean IsBusy;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"Win32Registry|Hardware\\DeviceMap\\SerialComm"}: ToSubClass] string Name;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|Parity"}: ToSubClass, ValueMap{"None", "Odd", "Even", "Mark", "Space"}: ToSubClass] string Parity;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fParity"}: ToSubClass] boolean ParityCheckEnabled;
	[read: ToSubClass, ValueMap{"Enable", "Disable", "Handshake", "Toggle"}: ToSubClass] string RTSFlowControlType;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|StopBits"}: ToSubClass, ValueMap{"1", "1.5", "2"}: ToSubClass] string StopBits;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|XoffChar"}: ToSubClass] uint32 XOffCharacter;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|XoffLim"}: ToSubClass] uint32 XOffXMitThreshold;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|XonChar"}: ToSubClass] uint32 XOnCharacter;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|XonLim"}: ToSubClass] uint32 XOnXMitThreshold;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fInX"}: ToSubClass] uint32 XOnXOffInFlowControl;
	[read: ToSubClass, MappingStrings{"Win32API|Communication Structures|DCB|fOutX"}: ToSubClass] uint32 XOnXOffOutFlowControl;
};

//**************************************************************************
//* Class: Win32_WMISetting
//* Derived from: CIM_Setting
//**************************************************************************
[Singleton: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("WBEMCORE"): ToInstance, Locale(1033): ToInstance, UUID("{A83EF166-CA8D-11d2-B33D-00104BCC4B4A}"): ToInstance]
class Win32_WMISetting : CIM_Setting
{
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM|Installation Directory"}: ToSubClass] string InstallationDirectory;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM|Build"}: ToSubClass] string BuildVersion;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM|MOF Self-Install Directory"}: ToSubClass] string MofSelfInstallDirectory;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Autorecover MOFs"}: ToSubClass] string AutorecoverMofs[];
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|AutostartWin9X"}: ToSubClass] uint32 AutoStartWin9X;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|EnableAnonConnections"}: ToSubClass] boolean EnableAnonWin9xConnections;
	[read: ToSubClass, write: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Log File Max Size"}: ToSubClass] uint32 MaxLogFileSize;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Logging"}: ToSubClass] uint32 LoggingLevel;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Logging Directory"}: ToSubClass] string LoggingDirectory;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Repository Directory"}: ToSubClass] string DatabaseDirectory;
	[read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Max DB Size"}: ToSubClass] uint32 DatabaseMaxSize;
	[read: ToSubClass, write: ToSubClass, Units("Minutes"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Backup Interval Threshold"}: ToSubClass] uint32 BackupInterval;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32API|Time Functions|GetTimeZoneInformation"}: ToSubClass] datetime BackupLastTime;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\scripting|Enable for ASP"}: ToSubClass] boolean ASPScriptEnabled;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\scripting|Default Namespace"}: ToSubClass] string ASPScriptDefaultNamespace = "\\\\root\\cimv2";
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|EnableEvents"}: ToSubClass] boolean EnableEvents;
	[read: ToSubClass, write: ToSubClass, Units("Objects per second"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|High Threshold On Client Objects"}: ToSubClass] uint32 HighThresholdOnClientObjects;
	[read: ToSubClass, write: ToSubClass, Units("Objects per second"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Low Threshold On Client Objects"}: ToSubClass] uint32 LowThresholdOnClientObjects;
	[read: ToSubClass, write: ToSubClass, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Max Wait On Events"}: ToSubClass] uint32 MaxWaitOnClientObjects;
	[read: ToSubClass, write: ToSubClass, Units("Events per second"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|High Threshold On Events"}: ToSubClass] uint32 HighThresholdOnEvents;
	[read: ToSubClass, write: ToSubClass, Units("Events per second"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Low Threshold On Events"}: ToSubClass] uint32 LowThresholdOnEvents;
	[read: ToSubClass, write: ToSubClass, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Max Wait On Events"}: ToSubClass] uint32 MaxWaitOnEvents;
	[read: ToSubClass, write: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|EnableStartupHeapPreallocation"}: ToSubClass] boolean EnableStartupHeapPreallocation;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|LastStartupHeapPreallocation"}: ToSubClass] uint32 LastStartupHeapPreallocation;
};

//**************************************************************************
//* Class: Win32_TerminalSetting
//* Derived from: CIM_Setting
//**************************************************************************
[abstract]
class Win32_TerminalSetting : CIM_Setting
{
	[read] string TerminalName;
};

//**************************************************************************
//* Class: Win32_TSRemoteControlSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSREMOTECONTROLSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSRemoteControlSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[read, write] uint32 RemoteControlPolicy;
	[read] uint32 LevelOfControl;
	[Implemented] uint32 RemoteControl([In] uint32 LevelOfControl);
};

//**************************************************************************
//* Class: Win32_TSNetworkAdapterSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSNETWORKADAPTERSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSNetworkAdapterSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[read] string NetworkAdapterID;
	[read] string NetworkAdapterName;
	[read, write] uint32 MaximumConnections;
	[Implemented] uint32 SelectAllNetworkAdapters();
	[Implemented] uint32 SelectNetworkAdapterID([In] string NetworkAdapterID);
};

//**************************************************************************
//* Class: Win32_TSAccount
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, overwrite, provider("Win32_WIN32_TSACCOUNT_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSAccount : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[key, read] string AccountName;
	[read] string SID;
	[read] uint32 PermissionsAllowed;
	[read] uint32 PermissionsDenied;
	[read] uint32 AuditSuccess;
	[read] uint32 AuditFail;
	[Implemented] uint32 Delete();
	[Implemented] uint32 ModifyPermissions([In] uint32 PermissionMask, [In] boolean Allow);
	[Implemented] uint32 ModifyAuditPermissions([In] uint32 PermissionMask, [In] boolean Success);
};

//**************************************************************************
//* Class: Win32_TSGeneralSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSGENERALSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSGeneralSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[read] string TerminalProtocol;
	[read] string Transport;
	[read, write] string Comment;
	[read, write] uint32 WindowsAuthentication;
	[read] uint32 MinEncryptionLevel;
	[Implemented] uint32 SetEncryptionLevel([In] uint32 MinEncryptionLevel);
};

//**************************************************************************
//* Class: Win32_TSPermissionsSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSPERMISSIONSSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSPermissionsSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[Implemented] uint32 AddAccount([In] string AccountName, [In] uint32 PermissionPreSet);
	[Implemented] uint32 RestoreDefaults();
};

//**************************************************************************
//* Class: Win32_TSClientSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSCLIENTSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSClientSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[read, write] uint32 ConnectionPolicy;
	[read] uint32 ConnectClientDrivesAtLogon;
	[read] uint32 ConnectPrinterAtLogon;
	[read] uint32 DefaultToClientPrinter;
	[read] uint32 WindowsPrinterMapping;
	[read] uint32 LPTPortMapping;
	[read] uint32 COMPortMapping;
	[read] uint32 DriveMapping;
	[read] uint32 AudioMapping;
	[read] uint32 ClipboardMapping;
	[read] uint32 ColorDepthPolicy;
	[read] uint32 ColorDepth;
	[Implemented] uint32 SetColorDepthPolicy([In] uint32 ColorDepthPolicy);
	[Implemented] uint32 SetColorDepth([In] uint32 ColorDepth);
	[Implemented] uint32 ConnectionSettings([In] uint32 ConnectClientDrivesAtLogon, [In] uint32 ConnectPrinterAtLogon, [In] uint32 DefaultToClientPrinter);
	[Implemented] uint32 SetClientProperty([In] string PropertyName, [In] boolean Value);
};

//**************************************************************************
//* Class: Win32_TSEnvironmentSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSENVIRONMENTSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSEnvironmentSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[read, write] uint32 InitialProgramPolicy;
	[read] string InitialProgramPath;
	[read] string Startin;
	[read, write] uint32 ClientWallPaper;
	[Implemented] uint32 InitialProgram([In] string InitialProgramPath, [In] string Startin);
};

//**************************************************************************
//* Class: Win32_TSNetworkAdapterListSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, overwrite, provider("Win32_WIN32_TSNETWORKADAPTERLISTSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSNetworkAdapterListSetting : Win32_TerminalSetting
{
	[read] string Description = NULL;
	[read, key] string TerminalProtocol;
	[read, key] string Transport;
	[read, key] string NetworkAdapterID;
};

//**************************************************************************
//* Class: Win32_TSLogonSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSLOGONSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSLogonSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[read, write] uint32 ClientLogonInfoPolicy;
	[read] uint32 PromptForPassword;
	[read] string UserName;
	[read] string Domain;
	[Implemented] uint32 ExplicitLogon([In] string UserName, [In] string Domain, [In] string Password);
	[Implemented] uint32 SetPromptForPassword([In] uint32 PromptForPassword);
};

//**************************************************************************
//* Class: Win32_TSSessionSetting
//* Derived from: Win32_TerminalSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSSESSIONSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations")]
class Win32_TSSessionSetting : Win32_TerminalSetting
{
	[key, read] string TerminalName = NULL;
	[read, write] uint32 TimeLimitPolicy;
	[read] uint32 ActiveSessionLimit;
	[read] uint32 DisconnectedSessionLimit;
	[read] uint32 IdleSessionLimit;
	[read, write] uint32 BrokenConnectionPolicy;
	[read] uint32 BrokenConnectionAction;
	[read, write] uint32 ReconnectionPolicy;
	[Implemented] uint32 TimeLimit([In] uint32 SessionLimitType, [In] uint32 ValueLimit);
	[Implemented] uint32 BrokenConnection([In] uint32 BrokenConnectionAction);
};

//**************************************************************************
//* Class: Win32_DisplayConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[DEPRECATED: ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E4-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DisplayConfiguration : CIM_Setting
{
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|BITSPIXEL"}: ToSubClass] uint32 BitsPerPel;
	[DEPRECATED: ToSubClass, read: ToSubClass, key, MaxLen(260): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string DeviceName;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDisplayFlags "}: ToSubClass] uint32 DisplayFlags;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Hertz"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VREFRESH"}: ToSubClass] uint32 DisplayFrequency;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDitherType"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass] uint32 DitherType;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|Ver"}: ToSubClass] string DriverVersion;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmICMIntent"}: ToSubClass, ValueMap{"1", "2", "3"}: ToSubClass] uint32 ICMIntent;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmICMMethod "}: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass] uint32 ICMMethod;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmLogPixels"}: ToSubClass] uint32 LogPixels;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPelsHeight "}: ToSubClass] uint32 PelsHeight;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPelsWidth "}: ToSubClass] uint32 PelsWidth;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmSpecVersion"}: ToSubClass] uint32 SpecificationVersion;
};

//**************************************************************************
//* Class: Win32_COMSetting
//* Derived from: CIM_Setting
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{E5D8A560-F6C0-11d2-B35E-00105A1F8569}"): ToInstance]
class Win32_COMSetting : CIM_Setting
{
};

//**************************************************************************
//* Class: Win32_ClassicCOMClassSetting
//* Derived from: Win32_COMSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{E5D8A562-F6C0-11d2-B35E-00105A1F8569}"): ToInstance]
class Win32_ClassicCOMClassSetting : Win32_COMSetting
{
	[read: ToSubClass, key, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[Default]"}: ToSubClass] string ComponentId;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\ProgID[Default]"}: ToSubClass] string ProgId;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[AppID]"}: ToSubClass] string AppID;
	[read: ToSubClass, ValueMap{"Apartment", "Free", "Both"}: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer32[ThreadingModel]"}: ToSubClass] string ThreadingModel;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\Version[Default]"}: ToSubClass] string Version;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\Insertable"}: ToSubClass] boolean Insertable;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\Control"}: ToSubClass] boolean Control;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\TypeLib[Default]"}: ToSubClass] string TypeLibraryId;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer32[JavaClass]"}: ToSubClass] boolean JavaClass;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\TreatAs[Default]"}: ToSubClass] string TreatAsClsid;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer[Default]"}: ToSubClass] string InprocServer;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer32[Default]"}: ToSubClass] string InprocServer32;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\LocalServer[Default]"}: ToSubClass] string LocalServer;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\LocalServer32[Default]"}: ToSubClass] string LocalServer32;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocHandler[Default]"}: ToSubClass] string InprocHandler;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocHandler32[Default]"}: ToSubClass] string InprocHandler32;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AutoConvertTo[Default]"}: ToSubClass] string AutoConvertToClsid;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AutoTreatAs[Default]"}: ToSubClass] string AutoTreatAsClsid;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\DefaultIcon[Default]"}: ToSubClass] string DefaultIcon;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\VersionIndependentProgId[Default]"}: ToSubClass] string VersionIndependentProgId;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AuxUserType\\2[Default]"}: ToSubClass] string ShortDisplayName;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AuxUserType\\3[Default]"}: ToSubClass] string LongDisplayName;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\ToolBoxBitmap32[Default]"}: ToSubClass] string ToolBoxBitmap32;
};

//**************************************************************************
//* Class: Win32_DCOMApplicationSetting
//* Derived from: Win32_COMSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{E5D8A561-F6C0-11d2-B35E-00105A1F8569}"): ToInstance]
class Win32_DCOMApplicationSetting : Win32_COMSetting
{
	[read: ToSubClass, key, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[Default]"}: ToSubClass] string AppID;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[AuthenticationLevel]"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5", "6"}: ToSubClass] uint32 AuthenticationLevel;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[RemoteServerName]"}: ToSubClass] string RemoteServerName;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[RunAs]"}: ToSubClass] string RunAsUser;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[ActivateAtStorage]"}: ToSubClass] boolean EnableAtStorageActivation;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[DllSurrogate]"}: ToSubClass] boolean UseSurrogate;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[DllSurrogate]"}: ToSubClass] string CustomSurrogate;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[LocalService]"}: ToSubClass] string LocalService;
	[read: ToSubClass, MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[ServiceParameters]"}: ToSubClass] string ServiceParameters;
};

//**************************************************************************
//* Class: Win32_MSIResource
//* Derived from: CIM_Setting
//**************************************************************************
[Locale(1033): ToInstance, UUID("{CD7CA121-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, Abstract, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_MSIResource : CIM_Setting
{
};

//**************************************************************************
//* Class: Win32_ServiceControl
//* Derived from: Win32_MSIResource
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{E7D29B98-E3D1-11d2-8601-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_ServiceControl : Win32_MSIResource
{
	[key, read: ToSubClass] string ID;
	[key, read: ToSubClass] string ProductCode;
	[read: ToSubClass] string Name;
	[read: ToSubClass] string Event;
	[read: ToSubClass] uint16 Wait;
	[read: ToSubClass] string Arguments;
};

//**************************************************************************
//* Class: Win32_Property
//* Derived from: Win32_MSIResource
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{CD7CA120-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance]
class Win32_Property : Win32_MSIResource
{
	[read: ToSubClass] string Value;
	[key, read: ToSubClass] string Property;
	[key, read: ToSubClass] string ProductCode;
};

//**************************************************************************
//* Class: Win32_Binary
//* Derived from: Win32_MSIResource
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{DB150AA8-E3D1-11d2-8601-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance]
class Win32_Binary : Win32_MSIResource
{
	[key, read: ToSubClass] string Name;
	[read: ToSubClass] string Data;
	[key, read: ToSubClass] string ProductCode;
};

//**************************************************************************
//* Class: Win32_PatchPackage
//* Derived from: Win32_MSIResource
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{14575942-E3E1-11d2-8601-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_PatchPackage : Win32_MSIResource
{
	[key, read: ToSubClass] string PatchID;
	[key, read: ToSubClass] string ProductCode;
};

//**************************************************************************
//* Class: Win32_Patch
//* Derived from: Win32_MSIResource
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{7A9E24ED-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance]
class Win32_Patch : Win32_MSIResource
{
	[key, read: ToSubClass] string File;
	[key, read: ToSubClass] sint16 Sequence;
	[read: ToSubClass] uint32 PatchSize;
	[read: ToSubClass] uint16 Attributes;
	[key, read: ToSubClass] string ProductCode;
};

//**************************************************************************
//* Class: Win32_NamedJobObjectLimitSetting
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("NamedJobObjectLimitSettingProv"): ToInstance, Locale(1033): ToInstance, UUID("{F2D96E32-2A34-475b-878D-B0AE7657519F}"): ToInstance]
class Win32_NamedJobObjectLimitSetting : CIM_Setting
{
	[read: ToSubClass, key] string SettingID = NULL;
	[read: ToSubClass, write: ToSubClass, Units("KB"): ToSubClass] uint32 ProcessMemoryLimit;
	[read: ToSubClass, write: ToSubClass] uint32 JobMemoryLimit;
	[read: ToSubClass, write: ToSubClass, Units("100ns"): ToSubClass] uint64 PerProcessUserTimeLimit;
	[read: ToSubClass, write: ToSubClass, Units("100ns"): ToSubClass] uint64 PerJobUserTimeLimit;
	[read: ToSubClass, write: ToSubClass] uint32 LimitFlags;
	[read: ToSubClass, write: ToSubClass] uint32 MinimumWorkingSetSize;
	[read: ToSubClass, write: ToSubClass] uint32 MaximumWorkingSetSize;
	[read: ToSubClass, write: ToSubClass] uint32 ActiveProcessLimit;
	[read: ToSubClass, write: ToSubClass] uint32 Affinity;
	[read: ToSubClass, write: ToSubClass] uint32 PriorityClass;
	[read: ToSubClass, write: ToSubClass] uint32 SchedulingClass;
};

//**************************************************************************
//* Class: Win32_QuotaSetting
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("DskQuotaProvider"): ToInstance, SupportsUpdate, Locale(1033): ToInstance, UUID("29013152-7F77-4A8A-A8BB-E1F24DECE9F7"): ToInstance]
class Win32_QuotaSetting : CIM_Setting
{
	[read: ToSubClass, write: ToSubClass, key] string VolumePath;
	[read: ToSubClass, write: ToSubClass, ValueMap{"0", "1", "2"}: ToSubClass] uint32 State;
	[read: ToSubClass, write: ToSubClass, Units("Bytes"): ToSubClass] uint64 DefaultLimit;
	[read: ToSubClass, write: ToSubClass, Units("Bytes"): ToSubClass] uint64 DefaultWarningLimit;
	[read: ToSubClass, write: ToSubClass] boolean ExceededNotification;
	[read: ToSubClass, write: ToSubClass] boolean WarningExceededNotification;
};

//**************************************************************************
//* Class: CIM_MonitorResolution
//* Derived from: CIM_Setting
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCEC-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_MonitorResolution : CIM_Setting
{
	[read: ToSubClass, MaxLen(256): ToSubClass, Override("SettingID"), key] string SettingID = NULL;
	[read: ToSubClass, Units("Pixels"): ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentHorizontalResolution"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.2"}: ToSubClass] uint32 HorizontalResolution;
	[read: ToSubClass, Units("Pixels"): ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentVerticalResolution"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.3"}: ToSubClass] uint32 VerticalResolution;
	[read: ToSubClass, Units("Hertz"): ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentRefreshRate"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.4"}: ToSubClass] uint32 RefreshRate;
	[read: ToSubClass, Units("Hertz"): ToSubClass, ModelCorrespondence{"CIM_VideoController.MinRefreshRate"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.6"}: ToSubClass] uint32 MinRefreshRate;
	[read: ToSubClass, Units("Hertz"): ToSubClass, ModelCorrespondence{"CIM_VideoController.MaxRefreshRate"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.7"}: ToSubClass] uint32 MaxRefreshRate;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentScanMode"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.5"}: ToSubClass] uint16 ScanMode;
};

//**************************************************************************
//* Class: Win32_AutochkSetting
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, SupportsUpdate, Locale(1033): ToInstance]
class Win32_AutochkSetting : CIM_Setting
{
	[Override("SettingId"), key] string SettingID = NULL;
	[read: ToSubClass, write: ToSubClass, Units("Seconds"): ToSubClass, MappingStrings{"Win32Registry | HKLM\\CurrentControlSet\\Control\\Session Manager | AutoChkTimeOut"}: ToSubClass] uint32 UserInputDelay;
};

//**************************************************************************
//* Class: Win32_StartupCommand
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C50A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_StartupCommand : CIM_Setting
{
	[read: ToSubClass, key, MappingStrings{"WMI"}: ToSubClass] string User;
	[read: ToSubClass, key, MappingStrings{"Win32API|File Structures|WIN32_FIND_DATA|cFileName"}: ToSubClass] string Name;
	[read: ToSubClass, key, ValueMap{"Startup", "Common Startup", "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices"}: ToSubClass, MappingStrings{"Win32Registry|\\SOFTWARE\\MICROSOFT\\WINDOWS\\CURRENTVERSION\\Windows"}: ToSubClass] string Location;
	[read: ToSubClass, key, MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"}: ToSubClass] string Command;
};

//**************************************************************************
//* Class: Win32_TerminalServiceSetting
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TERMINALSERVICESETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer")]
class Win32_TerminalServiceSetting : CIM_Setting
{
	[key, read] string ServerName;
	[read] uint32 TerminalServerMode;
	[read] uint32 LicensingType;
	[read] string LicensingName;
	[read] string LicensingDescription;
	[read, write] uint32 ActiveDesktop;
	[read, write] uint32 UserPermission;
	[read] uint32 DeleteTempFolders;
	[read] uint32 UseTempFolders;
	[read] uint32 AllowTSConnections;
	[read] uint32 SingleSession;
	[read] string ProfilePath;
	[read] string HomeDirectory;
	[read, write] string Logons;
	[read] string DirectConnectLicenseServers;
	[Implemented] uint32 AddDirectConnectLicenseServer([In] string LicenseServerName);
	[Implemented] uint32 DeleteDirectConnectLicenseServer([In] string LicenseServerName);
	[Implemented] uint32 ChangeMode([In] uint32 LicensingType);
	[Implemented] uint32 SetAllowTSConnections([In] uint32 AllowTSConnections);
	[Implemented] uint32 SetSingleSession([In] uint32 SingleSession);
	[Implemented] uint32 SetProfilePath([In] string ProfilePath);
	[Implemented] uint32 SetHomeDirectory([In] string HomeDirectory);
	[Implemented] uint32 SetPolicyPropertyName([In] string PropertyName, [In] boolean Value);
};

//**************************************************************************
//* Class: CIM_VideoControllerResolution
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{1008CCEA-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_VideoControllerResolution : CIM_Setting
{
	[read: ToSubClass, MaxLen(256): ToSubClass, Override("SettingID"), key] string SettingID = NULL;
	[read: ToSubClass, Units("Pixels"): ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentHorizontalResolution"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.2"}: ToSubClass] uint32 HorizontalResolution;
	[read: ToSubClass, Units("Pixels"): ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentVerticalResolution"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.3"}: ToSubClass] uint32 VerticalResolution;
	[read: ToSubClass, Units("Hertz"): ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentRefreshRate"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.4"}: ToSubClass] uint32 RefreshRate;
	[read: ToSubClass, Units("Hertz"): ToSubClass, ModelCorrespondence{"CIM_VideoController.MinRefreshRate"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.6"}: ToSubClass] uint32 MinRefreshRate;
	[read: ToSubClass, Units("Hertz"): ToSubClass, ModelCorrespondence{"CIM_VideoController.MaxRefreshRate"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.7"}: ToSubClass] uint32 MaxRefreshRate;
	[read: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentScanMode"}: ToSubClass, MappingStrings{"MIF.DMTF|Monitor Resolutions|002.5"}: ToSubClass] uint16 ScanMode;
	[read: ToSubClass, ModelCorrespondence{"CIM_VideoController.CurrentNumberOfColors"}: ToSubClass] uint64 NumberOfColors;
};

//**************************************************************************
//* Class: Win32_PageFileSetting
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Privileges{"SeCreatePagefileNamePrivilege"}: ToSubClass, Locale(1033): ToInstance, UUID("{514A9270-C856-11D2-B364-00105A1f77A1}"): ToInstance, SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance"), SupportsUpdate]
class Win32_PageFileSetting : CIM_Setting
{
	[read: ToSubClass, write: ToSubClass, key, MappingStrings{"WMI"}: ToSubClass] string Name;
	[read: ToSubClass, write: ToSubClass, Units("Megabytes"): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|PagingFiles"}: ToSubClass] uint32 InitialSize;
	[read: ToSubClass, write: ToSubClass, Units("Megabytes"): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|PagingFiles"}: ToSubClass] uint32 MaximumSize;
};

//**************************************************************************
//* Class: Win32_VideoConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[DEPRECATED: ToSubClass, Locale(1033): ToInstance, UUID("{8502C4ED-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_VideoConfiguration : CIM_Setting
{
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Bits Per Pixel"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|COLORRES"}: ToSubClass] uint32 ActualColorResolution;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Info|ChipType"}: ToSubClass] string AdapterChipType;
	[DEPRECATED: ToSubClass, read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string AdapterCompatibility;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Info|DACType"}: ToSubClass] string AdapterDACType;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string AdapterDescription;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Info|VideoMemory"}: ToSubClass] uint32 AdapterRAM;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|HARDWARE\\Description\\System\\DisplayController\\0\\Identifier"}: ToSubClass] string AdapterType;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|BITSPIXEL"}: ToSubClass] uint32 BitsPerPixel;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|PLANES"}: ToSubClass] uint32 ColorPlanes;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMCOLORS"}: ToSubClass] uint32 ColorTableEntries;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMPENS"}: ToSubClass] uint32 DeviceSpecificPens;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\AdapterDescription|DriverDate"}: ToSubClass] datetime DriverDate;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZRES"}: ToSubClass] uint32 HorizontalResolution;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|InfPath"}: ToSubClass] string InfFilename;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|InfSection"}: ToSubClass] string InfSection;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Defaule|drv"}: ToSubClass] string InstalledDisplayDrivers;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] string MonitorManufacturer;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|HARDWARE\\Description\\System\\MonitorPeripheral\\0|Identifier"}: ToSubClass] string MonitorType;
	[DEPRECATED: ToSubClass, read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"WMI"}: ToSubClass] string Name;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|LOGPIXELSX"}: ToSubClass] uint32 PixelsPerXLogicalInch;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|LOGPIXELSY"}: ToSubClass] uint32 PixelsPerYLogicalInch;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VREFRESH"}: ToSubClass] uint32 RefreshRate;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Device0|DefaultSettings.Interlaced"}: ToSubClass] string ScanMode;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Millimeters"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VERTSIZE"}: ToSubClass] uint32 ScreenHeight;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Millimeters"): ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZSIZE"}: ToSubClass] uint32 ScreenWidth;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|SIZEPALETTE"}: ToSubClass] uint32 SystemPaletteEntries;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VERTRES"}: ToSubClass] uint32 VerticalResolution;
};

//**************************************************************************
//* Class: Win32_NetworkLoginProfile
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E7-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NetworkLoginProfile : CIM_Setting
{
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_acct_expires"}: ToSubClass] datetime AccountExpires;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_auth_flags"}: ToSubClass] uint32 AuthorizationFlags;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Functions|NetUserEnum"}: ToSubClass] uint32 BadPasswordCount;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_code_page"}: ToSubClass] uint32 CodePage;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_comment"}: ToSubClass] string Comment;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_country_code"}: ToSubClass] uint32 CountryCode;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_flags"}: ToSubClass, BitMap{"0", "1", "3", "4", "5", "6", "7", "8", "9", "11", "12", "13", "16", "17", "18", "19", "20", "21", "22", "23"}: ToSubClass] uint32 Flags;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_full_name"}: ToSubClass] string FullName;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_home_dir"}: ToSubClass] string HomeDirectory;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_home_dir_drive"}: ToSubClass] string HomeDirectoryDrive;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_last_logoff"}: ToSubClass] datetime LastLogoff;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_last_logon"}: ToSubClass] datetime LastLogon;
	[read: ToSubClass, MaxLen(147): ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_logon_hours"}: ToSubClass] string LogonHours;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_logon_server"}: ToSubClass] string LogonServer;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_max_storage"}: ToSubClass] uint64 MaximumStorage;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_name"}: ToSubClass] string Name;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_num_logons"}: ToSubClass] uint32 NumberOfLogons;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_parms"}: ToSubClass] string Parameters;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_password_age"}: ToSubClass] datetime PasswordAge;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_MODALS_INFO_0|usrmod0_max_passwd_age"}: ToSubClass] datetime PasswordExpires;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_primary_group_id"}: ToSubClass] uint32 PrimaryGroupId;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_priv"}: ToSubClass] uint32 Privileges;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_profile"}: ToSubClass] string Profile;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_script_path"}: ToSubClass] string ScriptPath;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_units_per_week"}: ToSubClass] uint32 UnitsPerWeek;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_usr_comment"}: ToSubClass] string UserComment;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_user_id"}: ToSubClass] uint32 UserId;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_flags"}: ToSubClass, ValueMap{"Normal Account", "Duplicate Account", "Workstation Trust Account", "Server Trust Account", "Interdomain Trust Account", "Unknown"}: ToSubClass] string UserType;
	[read: ToSubClass, MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_workstations"}: ToSubClass] string Workstations;
};

//**************************************************************************
//* Class: Win32_ODBCSourceAttribute
//* Derived from: CIM_Setting
//**************************************************************************
[Locale(1033): ToInstance, UUID("{100985A4-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ODBCSourceAttribute : CIM_Setting
{
	[key, read: ToSubClass] string DataSource;
	[key, read: ToSubClass] string Attribute;
	[read: ToSubClass] string Value;
};

//**************************************************************************
//* Class: Win32_PrinterConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E9-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_PrinterConfiguration : CIM_Setting
{
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmBitsPerPel"}: ToSubClass] uint32 BitsPerPel;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmCollate"}: ToSubClass] boolean Collate;
	[read: ToSubClass, ValueMap{"1", "2"}: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmColor"}: ToSubClass] uint32 Color;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmCopies"}: ToSubClass] uint32 Copies;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDeviceName"}: ToSubClass] string DeviceName;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDisplayFlags "}: ToSubClass] uint32 DisplayFlags;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDisplayFrequency "}: ToSubClass] uint32 DisplayFrequency;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDitherType"}: ToSubClass, ValueMap{"1", "2", "3", "4", "5"}: ToSubClass] uint32 DitherType;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDriverVersion"}: ToSubClass] uint32 DriverVersion;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDuplex"}: ToSubClass] boolean Duplex;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmFormName"}: ToSubClass] string FormName;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmICMIntent"}: ToSubClass, ValueMap{"1", "2", "3"}: ToSubClass] uint32 ICMIntent;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmICMMethod "}: ToSubClass, ValueMap{"1", "2", "3", "4"}: ToSubClass] uint32 ICMMethod;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmLogPixels"}: ToSubClass] uint32 LogPixels;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmMediaType"}: ToSubClass, ValueMap{"1", "2", "3"}: ToSubClass] uint32 MediaType;
	[read: ToSubClass, key, MaxLen(256): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|PRINTER_INFO_5|pPrinterName"}: ToSubClass] string Name;
	[read: ToSubClass, ValueMap{"1", "2"}: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmOrientation"}: ToSubClass] uint32 Orientation;
	[read: ToSubClass, Units("Tenths of a Millimeter"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPaperLength"}: ToSubClass] uint32 PaperLength;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPaperSize"}: ToSubClass] string PaperSize;
	[read: ToSubClass, Units("Tenths of a Millimeter"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPaperWidth "}: ToSubClass] uint32 PaperWidth;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPelsHeight "}: ToSubClass] uint32 PelsHeight;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPelsWidth "}: ToSubClass] uint32 PelsWidth;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPrintQuality"}: ToSubClass, ValueMap{"-1", "-2", "-3", "-4"}: ToSubClass] uint32 PrintQuality;
	[read: ToSubClass, Units("Percent"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmScale"}: ToSubClass] uint32 Scale;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmSpecVersion"}: ToSubClass] uint32 SpecificationVersion;
	[read: ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmTTOption"}: ToSubClass, ValueMap{"1", "2", "3"}: ToSubClass] uint32 TTOption;
	[read: ToSubClass, DEPRECATED: ToSubClass, Units("dots per inch"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPrintQuality"}: ToSubClass] uint32 XResolution;
	[read: ToSubClass, DEPRECATED: ToSubClass, Units("dots per inch"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmYResolution "}: ToSubClass] uint32 YResolution;
	[read: ToSubClass, Units("dots per inch"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPrintQuality"}: ToSubClass] uint32 HorizontalResolution;
	[read: ToSubClass, Units("dots per inch"): ToSubClass, MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmYResolution"}: ToSubClass] uint32 VerticalResolution;
};

//**************************************************************************
//* Class: Win32_LogicalMemoryConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[DEPRECATED: ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E6-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalMemoryConfiguration : CIM_Setting
{
	[DEPRECATED: ToSubClass, read: ToSubClass, key, MappingStrings{"WMI"}: ToSubClass] string Name;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUSEX|ullAvailVirtual"}: ToSubClass] uint32 AvailableVirtualMemory;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUSEX|ullTotalPageFile"}: ToSubClass] uint32 TotalPageFileSpace;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUSEX|ullTotalPhys"}: ToSubClass] uint32 TotalPhysicalMemory;
	[DEPRECATED: ToSubClass, read: ToSubClass, Units("Kilobytes"): ToSubClass, MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUSEX|ullTotalVirtual"}: ToSubClass] uint32 TotalVirtualMemory;
};

//**************************************************************************
//* Class: ScriptingStandardConsumerSetting
//* Derived from: CIM_Setting
//**************************************************************************
[locale(1033), Singleton: DisableOverride ToInstance ToSubClass]
class ScriptingStandardConsumerSetting : CIM_Setting
{
	[read, Override("SettingID")] string SettingID = "ScriptingStandardConsumerSetting";
	[read, Override("Caption")] string Caption = "Scripting Standard Consumer Setting";
	[read, Override("Description")] string Description = "Registration data common to all instances of the Scripting Standard Consumer";
	[read] uint32 MaximumScripts = 300;
	[read, units("Minutes")] uint32 Timeout = 0;
};

//**************************************************************************
//* Class: Win32_Desktop
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4E3-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Desktop : CIM_Setting
{
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|BorderWidth"}: ToSubClass] uint32 BorderWidth;
	[read: ToSubClass, MappingStrings{"Win32Registry|Control Panel\\Desktop|CoolSwitch"}: ToSubClass] boolean CoolSwitch;
	[read: ToSubClass, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32Registry|Control Panel\\Desktop|CursorBlinkRate"}: ToSubClass] uint32 CursorBlinkRate;
	[read: ToSubClass, MappingStrings{"Win32Registry|Control Panel\\Desktop|DragFullWindows"}: ToSubClass] boolean DragFullWindows;
	[read: ToSubClass, Units("8 Pixels"): ToSubClass, MappingStrings{"Win32Registry|Control Panel\\Desktop|GridGranularity"}: ToSubClass] uint32 GridGranularity;
	[read: ToSubClass, Units("Pixels"): ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|IconSpacing"}: ToSubClass] uint32 IconSpacing;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|IconFont"}: ToSubClass] string IconTitleFaceName;
	[read: ToSubClass, Units("Point"): ToSubClass, MappingStrings{"Win32API|Font and Text Structures|LOGFONTW|lfHeight"}: ToSubClass] uint32 IconTitleSize;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|IconTitleWrap"}: ToSubClass] boolean IconTitleWrap;
	[read: ToSubClass, key, MappingStrings{"WMI"}: ToSubClass] string Name;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|Pattern"}: ToSubClass] string Pattern;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|ScreenSaveActive"}: ToSubClass] boolean ScreenSaverActive;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|SCRNSAVE.EXE"}: ToSubClass] string ScreenSaverExecutable;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|ScreenSaverIsSecure"}: ToSubClass] boolean ScreenSaverSecure;
	[read: ToSubClass, Units("Seconds"): ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|ScreenSaveTimeOut"}: ToSubClass] uint32 ScreenSaverTimeout;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|Wallpaper"}: ToSubClass] string Wallpaper;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|TileWallpaper"}: ToSubClass] boolean WallpaperTiled;
	[read: ToSubClass, MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|WallpaperStyle"}: ToSubClass] boolean WallpaperStretched;
};

//**************************************************************************
//* Class: Win32_NetworkAdapterConfiguration
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C515-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NetworkAdapterConfiguration : CIM_Setting
{
	[read: ToSubClass] uint16 GatewayCostMetric[];
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters|DefaultGateway"}: ToSubClass] string DefaultIPGateway[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|EnableDHCP"}: ToSubClass] boolean DHCPEnabled;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|LeaseTerminatesTime"}: ToSubClass] datetime DHCPLeaseExpires;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|LeaseObtainedTime"}: ToSubClass] datetime DHCPLeaseObtained;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|DhcpServer"}: ToSubClass] string DHCPServer;
	[read: ToSubClass, key, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E972-E325-11CE-BFC1-08002BE10318}"}: ToSubClass] uint32 Index;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters\\Tcpip|IPAddress"}: ToSubClass] string IPAddress[];
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters|SubnetMask"}: ToSubClass] string IPSubnet[];
	[read: ToSubClass, MappingStrings{"Win32API|Windows Sockets Version 2|getsockopt|IPX_ADDRESS"}: ToSubClass] string IPXAddress;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] string MACAddress;
	[read: ToSubClass, MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|ServiceName"}: ToSubClass] string ServiceName;
	[read: ToSubClass, MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters\\Tcpip"}: ToSubClass] boolean IPEnabled;
	[read: ToSubClass, MappingStrings{"WMI"}: ToSubClass] boolean IPXEnabled;
	[read: ToSubClass] boolean FullDNSRegistrationEnabled;
	[read: ToSubClass] boolean DomainDNSRegistrationEnabled;
	[read: ToSubClass] uint32 IPConnectionMetric;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DatabasePath"}: ToSubClass] string DatabasePath;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|UseZeroBroadcast"}: ToSubClass] boolean IPUseZeroBroadcast;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpAlwaysSourceRoute"}: ToSubClass] boolean ArpAlwaysSourceRoute;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpUseEtherSNAP"}: ToSubClass] boolean ArpUseEtherSNAP;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTOS"}: ToSubClass] uint8 DefaultTOS;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTTL"}: ToSubClass] uint8 DefaultTTL;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableDeadGWDetect"}: ToSubClass] boolean DeadGWDetectEnabled;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUBHDetect"}: ToSubClass] boolean PMTUBHDetectEnabled;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUDiscovery"}: ToSubClass] boolean PMTUDiscoveryEnabled;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ForwardBufferMemory"}: ToSubClass] uint32 ForwardBufferMemory;
	[read: ToSubClass, ValueMap{"0", "1", "2"}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IGMPLevel"}: ToSubClass] uint8 IGMPLevel;
	[read: ToSubClass, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"}: ToSubClass] uint32 KeepAliveInterval;
	[read: ToSubClass, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"}: ToSubClass] uint32 KeepAliveTime;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|MTU"}: ToSubClass] uint32 MTU;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NumForwardPackets"}: ToSubClass] uint32 NumForwardPackets;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxConnectRetransmissions"}: ToSubClass] uint32 TcpMaxConnectRetransmissions;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxDataRetransmissions"}: ToSubClass] uint32 TcpMaxDataRetransmissions;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpNumConnections"}: ToSubClass] uint32 TcpNumConnections;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpUseRFC1122UrgentPointer"}: ToSubClass] boolean TcpUseRFC1122UrgentPointer;
	[read: ToSubClass, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpWindowSize"}: ToSubClass] uint16 TcpWindowSize;
	[DEPRECATED: ToSubClass, read: ToSubClass, MappingStrings{"WMI|Win32_NetworkAdapterConfiguration|IPFilterSecurityEnabled"}: ToSubClass] boolean IPPortSecurityEnabled;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IPFilterSecurityEnabled"}: ToSubClass] boolean IPFilterSecurityEnabled;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TCPAllowedPorts"}: ToSubClass] string IPSecPermitTCPPorts[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|UDPAllowedPorts"}: ToSubClass] string IPSecPermitUDPPorts[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|RawIPAllowedProtocols"}: ToSubClass] string IPSecPermitIPProtocols[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Hostname"}: ToSubClass] string DNSHostName;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Domain"}: ToSubClass] string DNSDomain;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"}: ToSubClass] string DNSServerSearchOrder[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|SearchList"}: ToSubClass] string DNSDomainSuffixSearchOrder[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableDNS"}: ToSubClass] boolean DNSEnabledForWINSResolution;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableLMHOSTS"}: ToSubClass] boolean WINSEnableLMHostsLookup;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] string WINSPrimaryServer;
	[read: ToSubClass, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] string WINSSecondaryServer;
	[read: ToSubClass, MappingStrings{"Win32API|System Information Functions|GetSystemDirectory|\\drivers\\etc\\lmhosts"}: ToSubClass] string WINSHostLookupFile;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ScopeID"}: ToSubClass] string WINSScopeID;
	[read: ToSubClass] uint32 TcpipNetbiosOptions;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|VirtualNetworkNumber"}: ToSubClass] string IPXVirtualNetNumber;
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|NetworkNumber"}: ToSubClass] string IPXNetworkNumber[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|PktType"}: ToSubClass, ValueMap{"0", "1", "2", "3", "255"}: ToSubClass] uint32 IPXFrameType[];
	[read: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|MediaType"}: ToSubClass, ValueMap{"1", "2", "3", "8"}: ToSubClass] uint32 IPXMediaType;
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 EnableDHCP();
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 RenewDHCPLease();
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 RenewDHCPLeaseAll();
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 ReleaseDHCPLease();
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 ReleaseDHCPLeaseAll();
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 EnableStatic([In, MappingStrings{"WMI"}: ToSubClass] string IPAddress[], [In, MappingStrings{"WMI"}: ToSubClass] string SubnetMask[]);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint32 SetGateways([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfaces\\"}: ToSubClass] string DefaultIPGateway[], [In, Optional: ToSubClass, MappingStrings{"WMI"}: ToSubClass] uint16 GatewayCostMetric[]);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 EnableDNS([In, Optional: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Hostname"}: ToSubClass] string DNSHostName, [In, Optional: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Domain"}: ToSubClass] string DNSDomain, [In, Optional: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"}: ToSubClass] string DNSServerSearchOrder[], [In, Optional: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|SearchList"}: ToSubClass] string DNSDomainSuffixSearchOrder[]);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetDNSDomain([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Domain"}: ToSubClass] string DNSDomain);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetDNSServerSearchOrder([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"}: ToSubClass] string DNSServerSearchOrder[]);
	[Implemented, Static, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetDNSSuffixSearchOrder([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"}: ToSubClass] string DNSDomainSuffixSearchOrder[]);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass] uint32 SetDynamicDNSRegistration([In] boolean FullDNSRegistrationEnabled, [In, Optional: ToSubClass] boolean DomainDNSRegistrationEnabled);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass] uint32 SetIPConnectionMetric([In] uint32 IPConnectionMetric);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] uint32 SetWINSServer([In, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] string WINSPrimaryServer, [In, MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"}: ToSubClass] string WINSSecondaryServer);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services"}: ToSubClass] uint32 EnableWINS([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Netbt\\Parameters|EnableDNS"}: ToSubClass] boolean DNSEnabledForWINSResolution, [In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Netbt\\Parameters|EnableLMHOSTS"}: ToSubClass] boolean WINSEnableLMHostsLookup, [In, optional: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DatabasePath"}: ToSubClass] string WINSHostLookupFile, [In, optional: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Netbt\\Parameters|ScopeID"}: ToSubClass] string WINSScopeID);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass] uint32 SetTcpipNetbios([In] uint32 TcpipNetbiosOptions);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces"}: ToSubClass] uint32 EnableIPSec([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces|TCPAllowedPorts"}: ToSubClass] string IPSecPermitTCPPorts[], [In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces|UDPAllowedPorts"}: ToSubClass] string IPSecPermitUDPPorts[], [In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces|RawIPAllowedProtocols"}: ToSubClass] string IPSecPermitIPProtocols[]);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces"}: ToSubClass] uint32 DisableIPSec();
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters"}: ToSubClass] uint32 SetIPXVirtualNetworkNumber([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|VirtualNetworkNumber"}: ToSubClass] string IPXVirtualNetNumber);
	[Implemented, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters\\Adapters"}: ToSubClass] uint32 SetIPXFrameTypeNetworkPairs([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters\\Adapters|NetworkNumber"}: ToSubClass] string IPXNetworkNumber[], [In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters\\Adapters|PktType"}: ToSubClass, ValueMap{"0", "1", "2", "3", "255"}: ToSubClass] uint32 IPXFrameType[]);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetDatabasePath([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DatabasePath"}: ToSubClass] string DatabasePath);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetIPUseZeroBroadcast([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|UseZeroBroadcast"}: ToSubClass] boolean IPUseZeroBroadcast);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetArpAlwaysSourceRoute([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpAlwaysSourceRoute"}: ToSubClass] boolean ArpAlwaysSourceRoute);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetArpUseEtherSNAP([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpUseEtherSNAP"}: ToSubClass] boolean ArpUseEtherSNAP);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetDefaultTOS([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTOS"}: ToSubClass] uint8 DefaultTOS);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetDefaultTTL([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTTL"}: ToSubClass] uint8 DefaultTTL);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetDeadGWDetect([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableDeadGWDetect"}: ToSubClass] boolean DeadGWDetectEnabled);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetPMTUBHDetect([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUBHDetect"}: ToSubClass] boolean PMTUBHDetectEnabled);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetPMTUDiscovery([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUDiscovery"}: ToSubClass] boolean PMTUDiscoveryEnabled);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetForwardBufferMemory([In, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ForwardBufferMemory"}: ToSubClass] uint32 ForwardBufferMemory);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetIGMPLevel([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IGMPLevel"}: ToSubClass] uint8 IGMPLevel);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetKeepAliveInterval([In, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"}: ToSubClass] uint32 KeepAliveInterval);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetKeepAliveTime([In, Units("Milliseconds"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"}: ToSubClass] uint32 KeepAliveTime);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetMTU([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|MTU"}: ToSubClass] uint32 MTU);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetNumForwardPackets([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NumForwardPackets"}: ToSubClass] uint32 NumForwardPackets);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxConnectRetransmissions"}: ToSubClass] uint32 SetTcpMaxConnectRetransmissions([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxConnectRetransmissions"}: ToSubClass] uint32 TcpMaxConnectRetransmissions);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetTcpMaxDataRetransmissions([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxDataRetransmissions"}: ToSubClass] uint32 TcpMaxDataRetransmissions);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetTcpNumConnections([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpNumConnections"}: ToSubClass] uint32 TcpNumConnections);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetTcpUseRFC1122UrgentPointer([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpUseRFC1122UrgentPointer"}: ToSubClass] boolean TcpUseRFC1122UrgentPointer);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 SetTcpWindowSize([In, Units("Bytes"): ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpWindowSize"}: ToSubClass] uint16 TcpWindowSize);
	[Implemented, Static: ToSubClass, ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."}: ToSubClass, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"}: ToSubClass] uint32 EnableIPFilterSec([In, MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IPFilterSecurityEnabled"}: ToSubClass] boolean IPFilterSecurityEnabled);
};

//**************************************************************************
//* Class: Win32_ODBCAttribute
//* Derived from: CIM_Setting
//**************************************************************************
[Locale(1033): ToInstance, UUID("{023763EC-E3D2-11d2-8601-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ODBCAttribute : CIM_Setting
{
	[key, read: ToSubClass] string Driver;
	[key, read: ToSubClass] string Attribute;
	[read: ToSubClass] string Value;
};

//**************************************************************************
//* Class: Win32_NamedJobObjectSecLimitSetting
//* Derived from: CIM_Setting
//**************************************************************************
[dynamic: ToInstance, provider("NamedJobObjectSecLimitSettingProv"): ToInstance, Locale(1033): ToInstance, UUID("{F2D96E32-2A34-475b-878D-B0AE7657519F}"): ToInstance]
class Win32_NamedJobObjectSecLimitSetting : CIM_Setting
{
	[read: ToSubClass, key] string SettingID = NULL;
	[read: ToSubClass, write: ToSubClass] uint32 SecurityLimitFlags;
	[read: ToSubClass, write: ToSubClass] Win32_TokenGroups SIDsToDisable;
	[read: ToSubClass, write: ToSubClass] Win32_TokenGroups RestrictedSIDs;
	[read: ToSubClass, write: ToSubClass] Win32_TokenPrivileges PrivilegesToDelete;
};

//**************************************************************************
//* Class: CIM_SettingContext
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{F0B752E8-DB30-11d2-85FC-0000F8102E5F}"): ToInstance, Aggregation: ToSubClass, Association: DisableOverride ToInstance ToSubClass]
class CIM_SettingContext
{
	[read: ToSubClass, Aggregate: ToSubClass] CIM_Configuration ref Context;
	[read: ToSubClass] CIM_Setting ref Setting;
};

//**************************************************************************
//* Class: Win32_CollectionStatistics
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{13FFA73F-25AA-4b66-B63C-B635514678C5}"): ToInstance]
class Win32_CollectionStatistics
{
	CIM_StatisticalInformation ref Stats;
	CIM_CollectionOfMSEs ref Collection;
};

//**************************************************************************
//* Class: Win32_NamedJobObjectStatistics
//* Derived from: Win32_CollectionStatistics
//**************************************************************************
[provider("CIMWin32a"): ToInstance, dynamic: ToInstance, Locale(1033): ToInstance, UUID("{C741E1B8-2F7F-4f2b-9A0C-57FCFD89F5C8}"): ToInstance]
class Win32_NamedJobObjectStatistics : Win32_CollectionStatistics
{
	[read: ToSubClass, key] Win32_NamedJobObjectActgInfo ref Stats = NULL;
	[read: ToSubClass, key] Win32_NamedJobObject ref Collection = NULL;
};

//**************************************************************************
//* Class: Win32_ShortcutSAP
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{08145BE0-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_ShortcutSAP
{
	[key, read: ToSubClass] Win32_ShortcutAction ref Action;
	[key, read: ToSubClass] Win32_CommandLineAccess ref Element;
};

//**************************************************************************
//* Class: CIM_FromDirectorySpecification
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{6715375E-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_FromDirectorySpecification
{
	[read: ToSubClass, Min(0): ToSubClass] CIM_FileAction ref FileName;
	[read: ToSubClass, Max(1): ToSubClass, Min(0): ToSubClass] CIM_DirectorySpecification ref SourceDirectory;
};

//**************************************************************************
//* Class: Win32_SecuritySettingOwner
//* Derived from: 
//**************************************************************************
[abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{8502C585-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySettingOwner
{
	[key, read: ToSubClass] Win32_SecuritySetting ref SecuritySetting;
	[key, read: ToSubClass] Win32_SID ref Owner;
};

//**************************************************************************
//* Class: Win32_LogicalFileOwner
//* Derived from: Win32_SecuritySettingOwner
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C58E-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalFileOwner : Win32_SecuritySettingOwner
{
	[Override("SecuritySetting"): ToSubClass] Win32_LogicalFileSecuritySetting ref SecuritySetting = NULL;
	[Override("Owner"): ToSubClass] Win32_SID ref Owner = NULL;
};

//**************************************************************************
//* Class: CIM_FromDirectoryAction
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{55D5B446-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_FromDirectoryAction
{
	[read: ToSubClass, Min(0): ToSubClass] CIM_FileAction ref FileName;
	[read: ToSubClass, Max(1): ToSubClass, Min(0): ToSubClass] CIM_DirectoryAction ref SourceDirectory;
};

//**************************************************************************
//* Class: Win32_SoftwareFeatureCheck
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{5016E228-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareFeatureCheck
{
	[key, read: ToSubClass] Win32_SoftwareFeature ref Element;
	[key, read: ToSubClass] CIM_Check ref Check;
};

//**************************************************************************
//* Class: Win32_ComClassEmulator
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED5C-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_ComClassEmulator
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_ClassicCOMClass"}: ToSubClass] Win32_ClassicCOMClass ref OldVersion;
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_ClassicCOMClass"}: ToSubClass] Win32_ClassicCOMClass ref NewVersion;
};

//**************************************************************************
//* Class: CIM_AdjacentSlots
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B88-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_AdjacentSlots
{
	[read: ToSubClass] CIM_Slot ref SlotA;
	[read: ToSubClass] CIM_Slot ref SlotB;
	[Units("Inches"): ToSubClass, read: ToSubClass] real32 DistanceBetweenSlots;
	[read: ToSubClass] boolean SharedSlots;
};

//**************************************************************************
//* Class: Win32_SoftwareFeatureAction
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{3F3B81D4-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareFeatureAction
{
	[key, read: ToSubClass] Win32_SoftwareFeature ref Element;
	[key, read: ToSubClass] CIM_Action ref Action;
};

//**************************************************************************
//* Class: CIM_ElementSetting
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{8502C577-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_ElementSetting
{
	[read: ToSubClass] CIM_ManagedSystemElement ref Element;
	[read: ToSubClass] CIM_Setting ref Setting;
};

//**************************************************************************
//* Class: Win32_DeviceSettings
//* Derived from: CIM_ElementSetting
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C4FD-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DeviceSettings : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"CIM|CIM_Setting"}: ToSubClass] CIM_Setting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_PrinterSetting
//* Derived from: Win32_DeviceSettings
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C500-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_PrinterSetting : Win32_DeviceSettings
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_Printer"}: ToSubClass] Win32_Printer ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_PrinterConfiguration"}: ToSubClass] Win32_PrinterConfiguration ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SerialPortSetting
//* Derived from: Win32_DeviceSettings
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4FE-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SerialPortSetting : Win32_DeviceSettings
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_SerialPort"}: ToSubClass] Win32_SerialPort ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_SerialPortConfiguration"}: ToSubClass] Win32_SerialPortConfiguration ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_NetworkAdapterSetting
//* Derived from: Win32_DeviceSettings
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C50A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_NetworkAdapterSetting : Win32_DeviceSettings
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_NetworkAdapter"}: ToSubClass] Win32_NetworkAdapter ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_NetworkAdapterConfiguration"}: ToSubClass] Win32_NetworkAdapterConfiguration ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_VolumeQuotaSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("DskQuotaProvider"): ToInstance, Locale(1033): ToInstance, UUID("FA452BCE-5B4F-4A56-BF52-7C4533984706"): ToInstance]
class Win32_VolumeQuotaSetting : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element")] Win32_LogicalDisk ref Element = NULL;
	[read: ToSubClass, key, Override("Setting")] Win32_QuotaSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_OperatingSystemAutochkSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance]
class Win32_OperatingSystemAutochkSetting : CIM_ElementSetting
{
	[Override("Element"), key] Win32_OperatingSystem ref Element = NULL;
	[Override("Setting"), key] Win32_AutochkSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_TSSessionDirectorySetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TSSESSIONDIRECTORYSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer")]
class Win32_TSSessionDirectorySetting : CIM_ElementSetting
{
	[key] Win32_TerminalService ref Element = NULL;
	[key] Win32_TSSessionDirectory ref Setting = NULL;
};

//**************************************************************************
//* Class: CIM_MonitorSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCED-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_MonitorSetting : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element")] CIM_DesktopMonitor ref Element = NULL;
	[read: ToSubClass, key, Override("Setting")] CIM_MonitorResolution ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_ComputerSystemWindowsProductActivationSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_COMPUTERSYSTEMWINDOWSPRODUCTACTIVATIONSETTING_Prov"), Locale(1033), UUID("{A2B6D807-EE1E-40f6-BDF4-B4D6F552783E}")]
class Win32_ComputerSystemWindowsProductActivationSetting : CIM_ElementSetting
{
	[key] Win32_ComputerSystem ref Element = NULL;
	[key] Win32_WindowsProductActivation ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_UserDesktop
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4FF-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_UserDesktop : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_UserAccount"}: ToSubClass] Win32_UserAccount ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_Desktop"}: ToSubClass] Win32_Desktop ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_TerminalServiceToSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TERMINALSERVICETOSETTING_Prov"), ClassContext("local|hkey_local_machine\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer")]
class Win32_TerminalServiceToSetting : CIM_ElementSetting
{
	[key] Win32_TerminalService ref Element = NULL;
	[key] Win32_TerminalServiceSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_WMIElementSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("WBEMCORE"): ToInstance, Locale(1033): ToInstance, UUID("{A83EF167-CA8D-11d2-B33D-00104BCC4B4A}"): ToInstance]
class Win32_WMIElementSetting : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_Service"}: ToSubClass] Win32_Service ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_WMISetting"}: ToSubClass] Win32_WMISetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SystemSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C501-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemSetting : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"CIM|CIM_Setting"}: ToSubClass] CIM_Setting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SystemProgramGroups
//* Derived from: Win32_SystemSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C505-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemProgramGroups : Win32_SystemSetting
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_LogicalProgramGroup"}: ToSubClass] Win32_LogicalProgramGroup ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SystemDesktop
//* Derived from: Win32_SystemSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C506-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemDesktop : Win32_SystemSetting
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_Desktop"}: ToSubClass] Win32_Desktop ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SystemBootConfiguration
//* Derived from: Win32_SystemSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C507-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemBootConfiguration : Win32_SystemSetting
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_BootConfiguration"}: ToSubClass] Win32_BootConfiguration ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SystemTimeZone
//* Derived from: Win32_SystemSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C504-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemTimeZone : Win32_SystemSetting
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass] Win32_ComputerSystem ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_TimeZone"}: ToSubClass] Win32_TimeZone ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SystemLogicalMemoryConfiguration
//* Derived from: Win32_SystemSetting
//**************************************************************************
[DEPRECATED: ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C502-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SystemLogicalMemoryConfiguration : Win32_SystemSetting
{
	[read: ToSubClass, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_ComputerSystem"}: ToSubClass, DEPRECATED: ToSubClass] Win32_ComputerSystem ref Element = NULL;
	[read: ToSubClass, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_LogicalMemoryConfiguration"}: ToSubClass, DEPRECATED: ToSubClass] Win32_LogicalMemoryConfiguration ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_ClassicCOMClassSettings
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{E5D8A564-F6C0-11d2-B35E-00105A1F8569}"): ToInstance]
class Win32_ClassicCOMClassSettings : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_ClassicCOMClass"}: ToSubClass] Win32_ClassicCOMClass ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_ClassicCOMClassSetting"}: ToSubClass] Win32_ClassicCOMClassSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_TerminalTerminalSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("Win32_WIN32_TERMINALTERMINALSETTING_Prov")]
class Win32_TerminalTerminalSetting : CIM_ElementSetting
{
	[key] Win32_Terminal ref Element = NULL;
	[key] Win32_TerminalSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_PageFileElementSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8E7F70E8-C856-11D2-B364-00105A1F77A1}"): ToInstance]
class Win32_PageFileElementSetting : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_PageFileUsage"}: ToSubClass] Win32_PageFileUsage ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_PageFileSetting"}: ToSubClass] Win32_PageFileSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: CIM_VideoSetting
//* Derived from: CIM_ElementSetting
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1008CCEB-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class CIM_VideoSetting : CIM_ElementSetting
{
	[read: ToSubClass, Override("Element")] CIM_VideoController ref Element = NULL;
	[read: ToSubClass, Override("Setting")] CIM_VideoControllerResolution ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_VideoSettings
//* Derived from: CIM_VideoSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{1008CCEE-7BFF-11D2-AAD2-006008C78BC7}"): ToInstance]
class Win32_VideoSettings : CIM_VideoSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_VideoController"}: ToSubClass] Win32_VideoController ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"CIM|CIM_VideoControllerResolution"}: ToSubClass] CIM_VideoControllerResolution ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_COMApplicationSettings
//* Derived from: CIM_ElementSetting
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{E5D8A563-F6C0-11d2-B35E-00105A1F8569}"): ToInstance]
class Win32_COMApplicationSettings : CIM_ElementSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{"WMI|Win32_DCOMApplication"}: ToSubClass] Win32_DCOMApplication ref Element = NULL;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{"WMI|Win32_DCOMApplicationSetting"}: ToSubClass] Win32_DCOMApplicationSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SecuritySettingOfObject
//* Derived from: CIM_ElementSetting
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C584-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySettingOfObject : CIM_ElementSetting
{
	[Override("Element"): ToSubClass] CIM_LogicalElement ref Element = NULL;
	[Override("Setting"): ToSubClass] Win32_SecuritySetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SecuritySettingOfLogicalShare
//* Derived from: Win32_SecuritySettingOfObject
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C592-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySettingOfLogicalShare : Win32_SecuritySettingOfObject
{
	[Override("Element"): ToSubClass, read: ToSubClass, key] Win32_Share ref Element = NULL;
	[Override("Setting"): ToSubClass, read: ToSubClass, key] Win32_LogicalShareSecuritySetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SecuritySettingOfLogicalFile
//* Derived from: Win32_SecuritySettingOfObject
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C58D-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySettingOfLogicalFile : Win32_SecuritySettingOfObject
{
	[Override("Element"): ToSubClass, key] CIM_LogicalFile ref Element = NULL;
	[Override("Setting"): ToSubClass, key] Win32_LogicalFileSecuritySetting ref Setting = NULL;
};

//**************************************************************************
//* Class: CIM_SoftwareElementChecks
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{24783E8A-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, Aggregation: ToSubClass, Abstract]
class CIM_SoftwareElementChecks
{
	[Min(1): ToSubClass, Max(1): ToSubClass, Aggregate: ToSubClass, read: ToSubClass] CIM_SoftwareElement ref Element;
	[Min(0): ToSubClass, Max(FALSE): ToSubClass, Weak: ToSubClass, read: ToSubClass] CIM_Check ref Check;
	[read: ToSubClass] uint16 Phase;
};

//**************************************************************************
//* Class: Win32_ODBCDriverSoftwareElement
//* Derived from: CIM_SoftwareElementChecks
//**************************************************************************
[Locale(1033): ToInstance, UUID("{3A20796C-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ODBCDriverSoftwareElement : CIM_SoftwareElementChecks
{
	[read: ToSubClass, key] Win32_SoftwareElement ref Element = NULL;
	[read: ToSubClass, key] Win32_ODBCDriverSpecification ref Check = NULL;
};

//**************************************************************************
//* Class: Win32_SoftwareElementCheck
//* Derived from: CIM_SoftwareElementChecks
//**************************************************************************
[Locale(1033): ToInstance, UUID("{1E45DFA6-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareElementCheck : CIM_SoftwareElementChecks
{
	[read: ToSubClass, key] Win32_SoftwareElement ref Element = NULL;
	[read: ToSubClass, key] CIM_Check ref Check = NULL;
};

//**************************************************************************
//* Class: Win32_DiskQuota
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("DskQuotaProvider"): ToInstance, Locale(1033): ToInstance, UUID("B94560CA-41CC-4FB5-BD56-282329DA41DA"): ToInstance, SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance"), SupportsUpdate]
class Win32_DiskQuota
{
	[read: ToSubClass, key] Win32_LogicalDisk ref QuotaVolume;
	[read: ToSubClass, key] Win32_Account ref User;
	[read: ToSubClass, ValueMap{"0", "1", "2"}: ToSubClass] uint32 Status;
	[read: ToSubClass, write: ToSubClass, Units("Bytes"): ToSubClass] uint64 Limit;
	[read: ToSubClass, write: ToSubClass, Units("Bytes"): ToSubClass] uint64 WarningLimit;
	[read: ToSubClass, Units("Bytes"): ToSubClass] uint64 DiskSpaceUsed;
};

//**************************************************************************
//* Class: CIM_Location
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B67-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Location
{
	[key, read: ToSubClass, MaxLen(256): ToSubClass] string Name;
	[key, read: ToSubClass, MaxLen(256): ToSubClass] string PhysicalPosition;
	[read: ToSubClass, MaxLen(1024): ToSubClass] string Address;
};

//**************************************************************************
//* Class: Win32_NTLogEventLog
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("MS_NT_EVENTLOG_PROVIDER"): ToInstance, EnumPrivileges{"SeSecurityPrivilege"}: ToSubClass, Locale(1033): ToInstance, UUID("{8502C57D-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class Win32_NTLogEventLog
{
	[key, read: ToSubClass] Win32_NTEventlogFile ref Log;
	[key, read: ToSubClass] Win32_NTLogEvent ref Record;
};

//**************************************************************************
//* Class: Win32_SIDandAttributes
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{DE1B36A6-4157-43ed-937F-D90606C09216}"): ToInstance]
class Win32_SIDandAttributes
{
	[read: ToSubClass] Win32_SID SID;
	[read: ToSubClass] uint32 Attributes;
};

//**************************************************************************
//* Class: Win32_AccountSID
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{8502C582-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_AccountSID
{
	[read: ToSubClass, key] Win32_Account ref Element;
	[read: ToSubClass, key] Win32_SID ref Setting;
};

//**************************************************************************
//* Class: CIM_Dependency
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, Abstract, Locale(1033): ToInstance, UUID("{8502C53A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_Dependency
{
	[read: ToSubClass] CIM_ManagedSystemElement ref Antecedent;
	[read: ToSubClass] CIM_ManagedSystemElement ref Dependent;
};

//**************************************************************************
//* Class: Win32_SessionResource
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance]
class Win32_SessionResource : CIM_Dependency
{
	[Override("Antecedent")] Win32_LogicalElement ref Antecedent = NULL;
	[Override("Dependent")] Win32_Session ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_SessionProcess
//* Derived from: Win32_SessionResource
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("9CD8E1CE-0D27-4a41-AADE-F8D200230FF4"): ToInstance]
class Win32_SessionProcess : Win32_SessionResource
{
	[Override("Antecedent"), key] Win32_LogonSession ref Antecedent = NULL;
	[Override("Dependent"), key] Win32_Process ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_BIOSLoadedInNV
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{524ED194-DB35-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_BIOSLoadedInNV : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_NonVolatileStorage ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_BIOSElement ref Dependent = NULL;
	[read: ToSubClass] UINT64 EndingAddress;
	[read: ToSubClass] UINT64 StartingAddress;
};

//**************************************************************************
//* Class: CIM_DeviceAccessedByFile
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{05D1FFF2-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_DeviceAccessedByFile : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_DeviceFile ref Antecedent = NULL;
	[read: ToSubClass, Max(1): ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_SoftwareFeatureParent
//* Derived from: CIM_Dependency
//**************************************************************************
[Locale(1033): ToInstance, UUID("{E7CD451C-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareFeatureParent : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent")] Win32_SoftwareFeature ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent")] Win32_SoftwareFeature ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ElementsLinked
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B83-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ElementsLinked : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_PhysicalLink ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PhysicalElement ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_PackageTempSensor
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Aggregation: ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B8F-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PackageTempSensor : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_TemperatureSensor ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PhysicalPackage ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_AssociatedMemory
//* Derived from: CIM_Dependency
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{464FFAB0-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class CIM_AssociatedMemory : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_Memory ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_AssociatedProcessorMemory
//* Derived from: CIM_AssociatedMemory
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{464FFAB1-946F-11d2-AAE2-006008C78BC7}"): ToInstance]
class CIM_AssociatedProcessorMemory : CIM_AssociatedMemory
{
	[read: ToSubClass, Override("Dependent")] CIM_Processor ref Dependent = NULL;
	[Units("MegaHertz"): ToSubClass, read: ToSubClass] uint32 BusSpeed;
};

//**************************************************************************
//* Class: Win32_AssociatedProcessorMemory
//* Derived from: CIM_AssociatedProcessorMemory
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{074737F0-ACBC-11d2-ABF6-00805F538618}"): ToInstance]
class Win32_AssociatedProcessorMemory : CIM_AssociatedProcessorMemory
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_CacheMemory"}: ToSubClass] Win32_CacheMemory ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_Processor"}: ToSubClass] Win32_Processor ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_SubSession
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance]
class Win32_SubSession : CIM_Dependency
{
	Win32_Session ref Antecedent = NULL;
	Win32_Session ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_Docked
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, MappingStrings{"MIF.DMTF|Dynamic States|001.2"}: ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B75-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Docked : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent"), Max(1): ToSubClass] CIM_Chassis ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent"), Max(1): ToSubClass] CIM_Chassis ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_PackageCooling
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B8E-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PackageCooling : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_CoolingDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PhysicalPackage ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_BootOSFromFS
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{5F5B101E-DB35-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_BootOSFromFS : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_FileSystem ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_OperatingSystem ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_OperatingSystemQFE
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{2CB2C452-C516-11D2-B364-00105A1F77A1}"): ToInstance]
class Win32_OperatingSystemQFE : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_OperatingSystem"}: ToSubClass] Win32_OperatingSystem ref Antecedent = NULL;
	[read: ToSubClass, key, Weak: ToSubClass, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_QuickFixEngineering"}: ToSubClass] Win32_QuickFixEngineering ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_LoadOrderGroupServiceDependencies
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4FC-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LoadOrderGroupServiceDependencies : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_LoadOrderGroup"}: ToSubClass] Win32_LoadOrderGroup ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_BaseService"}: ToSubClass] Win32_BaseService ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ServiceAccessBySAP
//* Derived from: CIM_Dependency
//**************************************************************************
[Locale(1033): ToInstance, UUID("{714C00BA-DB37-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_ServiceAccessBySAP : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_Service ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_ServiceAccessPoint ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_ApplicationCommandLine
//* Derived from: CIM_ServiceAccessBySAP
//**************************************************************************
[Locale(1033): ToInstance, UUID("{C170CF06-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_ApplicationCommandLine : CIM_ServiceAccessBySAP
{
	[read: ToSubClass, key, Override("Antecedent")] Win32_ApplicationService ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent")] Win32_CommandLineAccess ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_BootServiceAccessBySAP
//* Derived from: CIM_ServiceAccessBySAP
//**************************************************************************
[Locale(1033): ToInstance, UUID("{6EDF1DD2-DB35-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_BootServiceAccessBySAP : CIM_ServiceAccessBySAP
{
	[read: ToSubClass, Override("Antecedent")] CIM_BootService ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_BootSAP ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ClusterServiceAccessBySAP
//* Derived from: CIM_ServiceAccessBySAP
//**************************************************************************
[Locale(1033): ToInstance, UUID("{88F073D8-DB35-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_ClusterServiceAccessBySAP : CIM_ServiceAccessBySAP
{
	[read: ToSubClass, Override("Antecedent")] CIM_ClusteringService ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_ClusteringSAP ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_AssociatedBattery
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C578-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_AssociatedBattery : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_Battery ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_AssociatedBattery
//* Derived from: CIM_AssociatedBattery
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C50B-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_AssociatedBattery : CIM_AssociatedBattery
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|CIM_Battery"}: ToSubClass] CIM_Battery ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_SystemDriverPNPEntity
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0800F074-CB98-11d2-B35D-00104BC97924}"): ToInstance]
class Win32_SystemDriverPNPEntity : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_PNPEntity"}: ToSubClass] Win32_PNPEntity ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_SystemDriver"}: ToSubClass] Win32_SystemDriver ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_SAPSAPDependency
//* Derived from: CIM_Dependency
//**************************************************************************
[Locale(1033): ToInstance, UUID("{422D175A-E3D5-11d2-8601-0000F8102E5F}"): ToInstance, Abstract]
class CIM_SAPSAPDependency : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_ServiceAccessPoint ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_ServiceAccessPoint ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_SessionConnection
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("SessionProvider"): ToInstance, Locale(1033): ToInstance]
class Win32_SessionConnection : CIM_Dependency
{
	[key] Win32_ServerSession ref Antecedent = NULL;
	[key] Win32_ServerConnection ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_DeviceBus
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C50F-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance ToSubClass]
class Win32_DeviceBus : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_Bus"}: ToSubClass] Win32_Bus ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_PackageAlarm
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Aggregation: ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B90-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PackageAlarm : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_AlarmDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PhysicalPackage ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_AllocatedResource
//* Derived from: CIM_Dependency
//**************************************************************************
[DEPRECATED: ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C50D-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_AllocatedResource : CIM_Dependency
{
	[key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|CIM_SystemResource"}: ToSubClass] CIM_SystemResource ref Antecedent = NULL;
	[key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ProcessExecutable
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C542-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_ProcessExecutable : CIM_Dependency
{
	[read: ToSubClass, key] CIM_DataFile ref Antecedent = NULL;
	[read: ToSubClass, key] CIM_Process ref Dependent = NULL;
	[read: ToSubClass, Schema("Win32"): ToInstance] uint32 GlobalProcessCount;
	[read: ToSubClass, Schema("Win32"): ToInstance] uint32 ProcessCount;
	[DEPRECATED: ToSubClass, read: ToSubClass, Schema("Win32"): ToInstance] uint32 ModuleInstance;
	[read: ToSubClass, Schema("Win32"): ToInstance] uint64 BaseAddress;
};

//**************************************************************************
//* Class: CIM_AssociatedAlarm
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{2280CB02-DB35-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_AssociatedAlarm : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_AlarmDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_ConnectionShare
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("SessionProvider"): ToInstance, Locale(1033): ToInstance]
class Win32_ConnectionShare : CIM_Dependency
{
	[key] Win32_Share ref Antecedent = NULL;
	[key] Win32_ServerConnection ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_DeviceServiceImplementation
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{290FC242-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_DeviceServiceImplementation : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_LogicalDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_Service ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ConnectedTo
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B85-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ConnectedTo : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_PhysicalConnector ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PhysicalConnector ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_SlotInSlot
//* Derived from: CIM_ConnectedTo
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B87-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_SlotInSlot : CIM_ConnectedTo
{
	[read: ToSubClass, Override("Antecedent")] CIM_Slot ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent"), Max(1): ToSubClass] CIM_Slot ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_Realizes
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B62-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Realizes : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_PhysicalElement ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_RealizesAggregatePExtent
//* Derived from: CIM_Realizes
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B81-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_RealizesAggregatePExtent : CIM_Realizes
{
	[read: ToSubClass, Override("Antecedent"), Max(1): ToSubClass] CIM_PhysicalMedia ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_AggregatePExtent ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_MemoryDeviceLocation
//* Derived from: CIM_Realizes
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B9C-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_MemoryDeviceLocation : CIM_Realizes
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, Max(1): ToSubClass, MappingStrings{"WMI|Win32_PhysicalMemory"}: ToSubClass] Win32_PhysicalMemory ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_MemoryDevice"}: ToSubClass] Win32_MemoryDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_RealizesDiskPartition
//* Derived from: CIM_Realizes
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B80-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_RealizesDiskPartition : CIM_Realizes
{
	[read: ToSubClass, Override("Antecedent"), Max(1): ToSubClass] CIM_PhysicalMedia ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_DiskPartition ref Dependent = NULL;
	[read: ToSubClass] uint64 StartingAddress;
};

//**************************************************************************
//* Class: Win32_MemoryArrayLocation
//* Derived from: CIM_Realizes
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{B24EF561-BBBE-11d2-ABFB-00805F538618}"): ToInstance]
class Win32_MemoryArrayLocation : CIM_Realizes
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_PhysicalMemoryArray"}: ToSubClass] Win32_PhysicalMemoryArray ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_MemoryArray"}: ToSubClass] Win32_MemoryArray ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_RealizesPExtent
//* Derived from: CIM_Realizes
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B7F-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_RealizesPExtent : CIM_Realizes
{
	[read: ToSubClass, Override("Antecedent"), Max(1): ToSubClass] CIM_PhysicalMedia ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PhysicalExtent ref Dependent = NULL;
	[read: ToSubClass] uint64 StartingAddress;
};

//**************************************************************************
//* Class: Win32_DiskDrivePhysicalMedia
//* Derived from: CIM_Realizes
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance, UUID("{}"): ToInstance]
class Win32_DiskDrivePhysicalMedia : CIM_Realizes
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{""}: ToSubClass] Win32_PhysicalMedia ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{""}: ToSubClass] Win32_DiskDrive ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_HostedAccessPoint
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{576C3C56-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_HostedAccessPoint : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent"), Max(1): ToSubClass, Min(1): ToSubClass] CIM_System ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent"), Weak: ToSubClass] CIM_ServiceAccessPoint ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_HostedBootSAP
//* Derived from: CIM_HostedAccessPoint
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{625B4512-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_HostedBootSAP : CIM_HostedAccessPoint
{
	[read: ToSubClass, Override("Antecedent")] CIM_UnitaryComputerSystem ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_BootSAP ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_RunningOS
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{1F2EA300-DB37-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_RunningOS : CIM_Dependency
{
	[read: ToSubClass, Max(1): ToSubClass, Override("Antecedent")] CIM_OperatingSystem ref Antecedent = NULL;
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("Dependent")] CIM_ComputerSystem ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ResidesOnExtent
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{10458E26-DB37-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_ResidesOnExtent : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_StorageExtent ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_FileSystem ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_MemoryWithMedia
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B7E-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_MemoryWithMedia : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_PhysicalMemory ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PhysicalMedia ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_JobDestinationJobs
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8D079BEE-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_JobDestinationJobs : CIM_Dependency
{
	[read: ToSubClass, Max(1): ToSubClass, Override("Antecedent")] CIM_JobDestination ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_Job ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_SoftwareFeatureSAPImplementation
//* Derived from: CIM_Dependency
//**************************************************************************
[Locale(1033): ToInstance, UUID("{7EFCC186-DB37-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_SoftwareFeatureSAPImplementation : CIM_Dependency
{
	[read: ToSubClass, Min(0): ToSubClass, Override("Antecedent")] CIM_SoftwareFeature ref Antecedent = NULL;
	[read: ToSubClass, Min(0): ToSubClass, Override("Dependent")] CIM_ServiceAccessPoint ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ComputerSystemPackage
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B8D-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ComputerSystemPackage : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_PhysicalPackage ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_UnitaryComputerSystem ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_AssociatedSensor
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{956597A0-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_AssociatedSensor : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_Sensor ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_AssociatedSupplyVoltageSensor
//* Derived from: CIM_AssociatedSensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{327ABD78-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_AssociatedSupplyVoltageSensor : CIM_AssociatedSensor
{
	[read: ToSubClass, Override("Antecedent")] CIM_VoltageSensor ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PowerSupply ref Dependent = NULL;
	[read: ToSubClass] UINT16 MonitoringRange;
};

//**************************************************************************
//* Class: CIM_AssociatedSupplyCurrentSensor
//* Derived from: CIM_AssociatedSensor
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{29B273F2-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_AssociatedSupplyCurrentSensor : CIM_AssociatedSensor
{
	[read: ToSubClass, Override("Antecedent")] CIM_CurrentSensor ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_PowerSupply ref Dependent = NULL;
	[read: ToSubClass] UINT16 MonitoringRange;
};

//**************************************************************************
//* Class: CIM_ServiceServiceDependency
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C53B-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_ServiceServiceDependency : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_Service ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_Service ref Dependent = NULL;
	[read: ToSubClass] uint16 TypeOfDependency;
};

//**************************************************************************
//* Class: Win32_DependentService
//* Derived from: CIM_ServiceServiceDependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4FA-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DependentService : CIM_ServiceServiceDependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_BaseService"}: ToSubClass] Win32_BaseService ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_BaseService"}: ToSubClass] Win32_BaseService ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_DeviceConnection
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C53C-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_DeviceConnection : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_LogicalDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
	[read: ToSubClass, Units("Bits per Second"): ToSubClass] uint64 NegotiatedSpeed;
	[read: ToSubClass, Units("Bits"): ToSubClass] uint32 NegotiatedDataWidth;
};

//**************************************************************************
//* Class: CIM_ControlledBy
//* Derived from: CIM_DeviceConnection
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C53D-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_ControlledBy : CIM_DeviceConnection
{
	[read: ToSubClass, Override("Antecedent")] CIM_Controller ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
	[read: ToSubClass] uint16 AccessState;
	[read: ToSubClass] uint32 NumberOfHardResets;
	[read: ToSubClass] uint32 NumberOfSoftResets;
};

//**************************************************************************
//* Class: CIM_SCSIInterface
//* Derived from: CIM_ControlledBy
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{7CE7448E-E3D4-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_SCSIInterface : CIM_ControlledBy
{
	[read: ToSubClass, Override("Antecedent")] CIM_SCSIController ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
	[read: ToSubClass] UINT32 SCSIRetries;
	[read: ToSubClass] UINT32 SCSITimeouts;
};

//**************************************************************************
//* Class: Win32_IDEControllerDevice
//* Derived from: CIM_ControlledBy
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{5BC42B62-C7A1-11d2-911D-0060081A46FD}"): ToInstance]
class Win32_IDEControllerDevice : CIM_ControlledBy
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|Win32_IDEController"}: ToSubClass] Win32_IDEController ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_SCSIControllerDevice
//* Derived from: CIM_ControlledBy
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{CC0F48D2-C847-11d2-911E-0060081A46FD}"): ToInstance]
class Win32_SCSIControllerDevice : CIM_ControlledBy
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|Win32_SCSIController"}: ToSubClass] Win32_SCSIController ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_PrinterController
//* Derived from: CIM_ControlledBy
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B5C-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_PrinterController : CIM_ControlledBy
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|CIM_Controller"}: ToSubClass] CIM_Controller ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_Printer"}: ToSubClass] Win32_Printer ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_1394ControllerDevice
//* Derived from: CIM_ControlledBy
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8835CFC9-BAEF-11d2-85E5-0000F8102E5F}"): ToInstance]
class Win32_1394ControllerDevice : CIM_ControlledBy
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_1394Controller"}: ToSubClass] Win32_1394Controller ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_POTSModemToSerialPort
//* Derived from: CIM_ControlledBy
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4B6-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_POTSModemToSerialPort : CIM_ControlledBy
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_SerialPort"}: ToSubClass] Win32_SerialPort ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_POTSModem"}: ToSubClass] Win32_POTSModem ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_SerialInterface
//* Derived from: CIM_ControlledBy
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8B309BDA-E3D4-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_SerialInterface : CIM_ControlledBy
{
	[read: ToSubClass, Override("Antecedent")] CIM_SerialController ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
	[read: ToSubClass] UINT16 FlowControlInfo;
	[read: ToSubClass, Units("Bits"): ToSubClass] UINT16 NumberOfStopBits;
	[read: ToSubClass] UINT16 ParityInfo;
};

//**************************************************************************
//* Class: CIM_USBControllerHasHub
//* Derived from: CIM_ControlledBy
//**************************************************************************
class CIM_USBControllerHasHub : CIM_ControlledBy
{
	[Override("Antecedent"), Min(1): ToSubClass, Max(1): ToSubClass] CIM_USBController ref Antecedent = NULL;
	[Override("Dependent"), Min(1): ToSubClass] CIM_USBHub ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_ControllerHasHub
//* Derived from: CIM_USBControllerHasHub
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance]
class Win32_ControllerHasHub : CIM_USBControllerHasHub
{
	[Min(1): ToSubClass, Max(1): ToSubClass, read: ToSubClass, key, Override("Antecedent")] Win32_USBController ref Antecedent = NULL;
	[Min(1): ToSubClass, read: ToSubClass, key, Override("Dependent")] Win32_USBHub ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_USBControllerDevice
//* Derived from: CIM_ControlledBy
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{DE57D792-A032-11D2-90F0-0060081A46FD}"): ToInstance]
class Win32_USBControllerDevice : CIM_ControlledBy
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|CIM_USBController"}: ToSubClass] CIM_USBController ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_PnPSignedDriverCIMDataFile
//* Derived from: CIM_Dependency
//**************************************************************************
[provider("WhqlProvider"): ToInstance ToSubClass, dynamic: ToInstance ToSubClass, Decription("Win32_PnPSignedDriverCIMDataFile is an association class basically used to get all the binary files associated with the driver"): ToSubClass]
class Win32_PnPSignedDriverCIMDataFile : CIM_Dependency
{
	[read: ToInstance ToSubClass, key, Decription("The Antecedent propety is a reference to Win32_PnPSignedDriver\tinstance "): ToSubClass] Win32_PnPSignedDriver ref Antecedent = NULL;
	[read: ToInstance ToSubClass, key, Decription("The Dependent property is a reference to CIM_DataFile which represents the binary file associated with the PnP driver "): ToSubClass] CIM_DataFile ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_HostedJobDestination
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{7880DD16-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_HostedJobDestination : CIM_Dependency
{
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("Antecedent")] CIM_System ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent"), Weak: ToSubClass] CIM_JobDestination ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_HostedService
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{83B2A7AA-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_HostedService : CIM_Dependency
{
	[read: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass, Override("Antecedent")] CIM_System ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent"), Weak: ToSubClass] CIM_Service ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_HostedBootService
//* Derived from: CIM_HostedService
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{6DAE7092-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_HostedBootService : CIM_HostedService
{
	CIM_System ref Antecedent = NULL;
	[Override("Dependent")] CIM_BootService ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_LoggedOnUser
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8BB5B3EC-E1F7-4b39-942A-605D5F55789A}"): ToInstance]
class Win32_LoggedOnUser : CIM_Dependency
{
	[key] Win32_Account ref Antecedent = NULL;
	[key] Win32_LogonSession ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_BasedOn
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C53E-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_BasedOn : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_StorageExtent ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_StorageExtent ref Dependent = NULL;
	[read: ToSubClass] uint64 StartingAddress;
	[read: ToSubClass] uint64 EndingAddress;
};

//**************************************************************************
//* Class: CIM_LogicalDiskBasedOnPartition
//* Derived from: CIM_BasedOn
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C53F-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_LogicalDiskBasedOnPartition : CIM_BasedOn
{
	[read: ToSubClass, Override("Antecedent"), Max(1): ToSubClass] CIM_DiskPartition ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDisk ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_LogicalDiskToPartition
//* Derived from: CIM_LogicalDiskBasedOnPartition
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4FB-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalDiskToPartition : CIM_LogicalDiskBasedOnPartition
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_DiskPartition"}: ToSubClass] Win32_DiskPartition ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_LogicalDisk"}: ToSubClass] Win32_LogicalDisk ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_LogicalDiskBasedOnVolumeSet
//* Derived from: CIM_BasedOn
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{3A608798-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_LogicalDiskBasedOnVolumeSet : CIM_BasedOn
{
	[read: ToSubClass, Max(1): ToSubClass, Override("Antecedent")] CIM_VolumeSet ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDisk ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_PSExtentBasedOnPExtent
//* Derived from: CIM_BasedOn
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{451FE14C-E3D3-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_PSExtentBasedOnPExtent : CIM_BasedOn
{
	[read: ToSubClass, Max(1): ToSubClass, Override("Antecedent")] CIM_PhysicalExtent ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_ProtectedSpaceExtent ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_DeviceSAPImplementation
//* Derived from: CIM_Dependency
//**************************************************************************
[Locale(1033): ToInstance, UUID("{1BE949DA-DB36-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_DeviceSAPImplementation : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_LogicalDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_ServiceAccessPoint ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_DeviceSoftware
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{36363AAA-DB36-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_DeviceSoftware : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_SoftwareElement ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
	[read: ToSubClass, ModelCorrespondence{"CIM_DeviceSoftware.PurposeDescription"}: ToSubClass] UINT16 Purpose;
	[read: ToSubClass, ModelCorrespondence{"CIM_DeviceSoftware.Purpose"}: ToSubClass] STRING PurposeDescription;
};

//**************************************************************************
//* Class: CIM_AllocatedResource
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C579-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_AllocatedResource : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_SystemResource ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_PNPAllocatedResource
//* Derived from: CIM_AllocatedResource
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("970C0998-41FE-4275-B7D9-7DABAD3FBC4D"): ToInstance]
class Win32_PNPAllocatedResource : CIM_AllocatedResource
{
	[key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|CIM_SystemResource"}: ToSubClass] CIM_SystemResource ref Antecedent = NULL;
	[key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] Win32_PNPEntity ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_AssociatedCooling
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{306F88F2-DB35-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_AssociatedCooling : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_CoolingDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_LogicalDevice ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_Mount
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{75BCF4F6-DB46-11D2-B4C8-80080C7B6371}"): ToInstance]
class CIM_Mount : CIM_Dependency
{
	[read: ToSubClass, Max(1): ToSubClass, Override("Antecedent")] CIM_Directory ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_NFS ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_LogicalProgramGroupItemDataFile
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{08FFAD62-8050-11d2-90CE-0060081A46FD}"): ToInstance]
class Win32_LogicalProgramGroupItemDataFile : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_LogicalProgramGroupItem"}: ToSubClass] Win32_LogicalProgramGroupItem ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_DataFile"}: ToSubClass] CIM_DataFile ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_MediaPresent
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C540-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class CIM_MediaPresent : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_MediaAccessDevice ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_StorageExtent ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_DiskDriveToDiskPartition
//* Derived from: CIM_MediaPresent
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C4F9-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_DiskDriveToDiskPartition : CIM_MediaPresent
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_DiskDrive"}: ToSubClass] Win32_DiskDrive ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_DiskPartition"}: ToSubClass] Win32_DiskPartition ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_PrinterShare
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B5E-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_PrinterShare : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_Printer"}: ToSubClass] Win32_Printer ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_Share"}: ToSubClass] Win32_Share ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_ServiceSAPDependency
//* Derived from: CIM_Dependency
//**************************************************************************
[Locale(1033): ToInstance, UUID("{652E2D58-DB37-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_ServiceSAPDependency : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_ServiceAccessPoint ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent")] CIM_Service ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_LogonSessionMappedDisk
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance]
class Win32_LogonSessionMappedDisk : CIM_Dependency
{
	[Override("Antecedent"), key] Win32_LogonSession ref Antecedent = NULL;
	[Override("Dependent"), key] Win32_MappedLogicalDisk ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_PackageInSlot
//* Derived from: CIM_Dependency
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B89-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PackageInSlot : CIM_Dependency
{
	[read: ToSubClass, Override("Antecedent")] CIM_Slot ref Antecedent = NULL;
	[read: ToSubClass, Override("Dependent"), Max(1): ToSubClass] CIM_PhysicalPackage ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_CardInSlot
//* Derived from: CIM_PackageInSlot
//**************************************************************************
[Abstract, MappingStrings{"MIF.DMTF|System Slot|004.4"}: ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B8A-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_CardInSlot : CIM_PackageInSlot
{
	[read: ToSubClass, Override("Antecedent")] CIM_Slot ref Antecedent = NULL;
	[read: ToSubClass, Max(1): ToSubClass, Override("Dependent")] CIM_Card ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_LogicalProgramGroupDirectory
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{F25FE467-783E-11d2-90BF-0060081A46FD}"): ToInstance]
class Win32_LogicalProgramGroupDirectory : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"WMI|Win32_LogicalProgramGroup"}: ToSubClass] Win32_LogicalProgramGroup ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_Directory"}: ToSubClass] Win32_Directory ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_PrinterDriverDll
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B5D-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_PrinterDriverDll : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|CIM_DataFile"}: ToSubClass] CIM_DataFile ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"WMI|Win32_Printer"}: ToSubClass] Win32_Printer ref Dependent = NULL;
};

//**************************************************************************
//* Class: Win32_CIMLogicalDeviceCIMDataFile
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C510-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_CIMLogicalDeviceCIMDataFile : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{"CIM|CIM_LogicalDevice"}: ToSubClass] CIM_LogicalDevice ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{"CIM|CIM_DataFile"}: ToSubClass] CIM_DataFile ref Dependent = NULL;
	[read: ToSubClass, MappingStrings{"CIM"}: ToSubClass] uint16 Purpose;
	[read: ToSubClass, MappingStrings{"CIM"}: ToSubClass] string PurposeDescription;
};

//**************************************************************************
//* Class: Win32_DriverForDevice
//* Derived from: CIM_Dependency
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{C2225311-00A1-47FC-B163-49006EDFD693}"): ToInstance]
class Win32_DriverForDevice : CIM_Dependency
{
	[read: ToSubClass, key, Override("Antecedent"): ToSubClass, MappingStrings{""}: ToSubClass] Win32_Printer ref Antecedent = NULL;
	[read: ToSubClass, key, Override("Dependent"): ToSubClass, MappingStrings{""}: ToSubClass] Win32_PrinterDriver ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_SoftwareFeatureServiceImplementation
//* Derived from: CIM_Dependency
//**************************************************************************
[Locale(1033): ToInstance, UUID("{8AC984F4-DB37-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_SoftwareFeatureServiceImplementation : CIM_Dependency
{
	[read: ToSubClass, Min(0): ToSubClass, Override("Antecedent")] CIM_SoftwareFeature ref Antecedent = NULL;
	[read: ToSubClass, Min(0): ToSubClass, Override("Dependent")] CIM_Service ref Dependent = NULL;
};

//**************************************************************************
//* Class: CIM_DirectorySpecificationFile
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{BCD64CCE-DB29-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_DirectorySpecificationFile
{
	[read: ToSubClass, Max(1): ToSubClass, Min(0): ToSubClass] CIM_DirectorySpecification ref DirectorySpecification;
	[read: ToSubClass, Min(0): ToSubClass] CIM_FileSpecification ref FileSpecification;
};

//**************************************************************************
//* Class: Win32_NTLogEventUser
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("MS_NT_EVENTLOG_PROVIDER"): ToInstance, EnumPrivileges{"SeSecurityPrivilege"}: ToSubClass, Locale(1033): ToInstance, UUID("{8502C57E-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class Win32_NTLogEventUser
{
	[key, read: ToSubClass] Win32_UserAccount ref User;
	[key, read: ToSubClass] Win32_NTLogEvent ref Record;
};

//**************************************************************************
//* Class: CIM_FRU
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{778C74EE-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_FRU
{
	[read: ToSubClass, MaxLen(64): ToSubClass] STRING Caption;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|FRU|002.3"}: ToSubClass] STRING Description;
	[read: ToSubClass, key, MappingStrings{"MIF.DMTF|FRU|002.6"}: ToSubClass, MaxLen(64): ToSubClass] STRING FRUNumber;
	[read: ToSubClass, key, MappingStrings{"MIF.DMTF|FRU|002.7"}: ToSubClass, MaxLen(64): ToSubClass] STRING IdentifyingNumber;
	[read: ToSubClass, MaxLen(256): ToSubClass] STRING Name;
	[read: ToSubClass, MappingStrings{"MIF.DMTF|FRU|002.8"}: ToSubClass, MaxLen(64): ToSubClass] STRING RevisionLevel;
	[read: ToSubClass, key, MappingStrings{"MIF.DMTF|FRU|002.4"}: ToSubClass, MaxLen(256): ToSubClass] STRING Vendor;
};

//**************************************************************************
//* Class: CIM_ToDirectoryAction
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{B58D172E-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_ToDirectoryAction
{
	[read: ToSubClass, Max(1): ToSubClass, Min(0): ToSubClass] CIM_DirectoryAction ref DestinationDirectory;
	[read: ToSubClass, Min(0): ToSubClass] CIM_CopyFileAction ref FileName;
};

//**************************************************************************
//* Class: Win32_ComClassAutoEmulator
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED5D-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_ComClassAutoEmulator
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_ClassicCOMClass"}: ToSubClass] Win32_ClassicCOMClass ref OldVersion;
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_ClassicCOMClass"}: ToSubClass] Win32_ClassicCOMClass ref NewVersion;
};

//**************************************************************************
//* Class: CIM_DependencyContext
//* Derived from: 
//**************************************************************************
[Abstract, Aggregation: ToSubClass, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{A228E208-DB22-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_DependencyContext
{
	[read: ToSubClass, Aggregate: ToSubClass] CIM_Configuration ref Context;
	[read: ToSubClass] CIM_Dependency ref Dependency;
};

//**************************************************************************
//* Class: CIM_ProductPhysicalElements
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{502F00A0-DB2B-11d2-85FC-0000F8102E5F}"): ToInstance, Aggregation: ToSubClass, Association: DisableOverride ToInstance ToSubClass]
class CIM_ProductPhysicalElements
{
	[read: ToSubClass] CIM_PhysicalElement ref Component;
	[read: ToSubClass, Aggregate: ToSubClass, Max(1): ToSubClass] CIM_Product ref Product;
};

//**************************************************************************
//* Class: CIM_ProductFRU
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{EB98A1B2-DB36-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_ProductFRU
{
	[read: ToSubClass] CIM_FRU ref FRU;
	[read: ToSubClass, Max(1): ToSubClass] CIM_Product ref Product;
};

//**************************************************************************
//* Class: CIM_Statistics
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{956597A3-7D80-11D2-AAD3-006008C78BC7}"): ToInstance]
class CIM_Statistics
{
	[read: ToSubClass] CIM_StatisticalInformation ref Stats;
	[read: ToSubClass] CIM_ManagedSystemElement ref Element;
};

//**************************************************************************
//* Class: CIM_ErrorCountersForDevice
//* Derived from: CIM_Statistics
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{2D79F3A0-D025-11d2-85F5-0000F8102E5F}"): ToInstance]
class CIM_ErrorCountersForDevice : CIM_Statistics
{
	[read: ToSubClass, Override("Stats"), Weak: ToSubClass] CIM_DeviceErrorCounts ref Stats = NULL;
	[read: ToSubClass, Override("Element"), Min(1): ToSubClass, Max(1): ToSubClass] CIM_LogicalDevice ref Element = NULL;
};

//**************************************************************************
//* Class: CIM_CollectedMSEs
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, Abstract, Association: DisableOverride ToInstance ToSubClass, Aggregation: ToSubClass]
class CIM_CollectedMSEs
{
	[Aggregate: ToSubClass, CIM_Key: ToSubClass] CIM_CollectionOfMSEs ref Collection;
	[CIM_Key: ToSubClass] CIM_ManagedSystemElement ref Member;
};

//**************************************************************************
//* Class: Win32_NamedJobObjectProcess
//* Derived from: CIM_CollectedMSEs
//**************************************************************************
[dynamic: ToInstance, SupportsCreate, CreateBy("PutInstance"), provider("CIMWin32a"): ToInstance, Locale(1033): ToInstance, UUID("{486F2A44-D0BF-46c1-9543-68EF5D37F1F9}"): ToInstance]
class Win32_NamedJobObjectProcess : CIM_CollectedMSEs
{
	[read: ToSubClass, Override("Collection"), key] Win32_NamedJobObject ref Collection = NULL;
	[read: ToSubClass, Override("Member"), key] Win32_Process ref Member = NULL;
};

//**************************************************************************
//* Class: Win32_LUID
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{0FF18C30-FA51-11d3-9C37-006008B088CE}"): ToInstance]
class Win32_LUID
{
	[read: ToSubClass] uint32 HighPart;
	[read: ToSubClass] uint32 LowPart;
};

//**************************************************************************
//* Class: Msft_Providers
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("Msft_ProviderSubSystem"), Description("The Msft_Providers class exposes configuration relating to provider instances")]
class Msft_Providers
{
	[key, Description("The Namespace property indicates the Namespace associated with a particular instantiation of a provider instance.")] String Namespace;
	[key, Description("If provider is configured for Per User Initialization, then the User property refers to User's particular instantiation of a provider instance.")] String User;
	[key, Description("If provider is configured for Per Local Initialization, then the Locale property refers to Locale's particular instantiation of a provider instance.")] String Locale;
	[key, Description("The Provider property holds the Provider Name associated with a particular instantiation of a provider instance.The Provider Name is identical to the __Win32provider :: Name property.")] String provider;
	[key, Description("The TransactionIdentifier property is for internal use, currently always {00000000-0000-0000-0000-000000000000}.")] String TransactionIdentifier;
	[key, Description("The HostingSpecification property defines the first component of the __Win32provider :: HostingModelproperty. The hosting property is defined to be one of the following value types :-WmiCore - Activate provider in host to the winmgmt service, note this is only supported for OS components.Note, attempts to register providers with WmiCore as HostingModel will fail with WBEM_E_ACCESS_DENIEDWmiCoreOrSelfHost - Activate provider in host to the winmgmt service or as local server,Note this is only supported for OS components.SelfHost - Activate provider as a local server implementation.Decoupled:Com - Activate provider as a decoupled com provider.Decoupled:NonCom - Activate provider as a non com event provider.LocalSystemHost[:((.)+)] - Activate provider in host to a wmi provider host running as LocalSystem.Note, this is the default if __Win32provider :: HostingModel is not set. Further note, that on creation of an instance of __Win32provider with HostingModel equal to NULL, LocalSystemHost or LocalSystemHostOrSelfHost, an event log record is generated so that admins are aware ofproviders running under the trusted status.LocalSystemHostOrSelfHost[:((.)+)] - Activate provider in host to a wmi provider host running as LocalSystem or as local server. Note, this is the default if __Win32provider :: HostingModel is not set. Further note, that on creation of an instance of __Win32provider with HostingModel equal to NULL, LocalSystemHost or LocalSystemHostOrSelfHost, an event log record is generated so that admins are aware ofproviders running under the trusted status.NetworkServiceHost[:((.)+)] - Activate provider in host to a wmi provider host running as NetworkService.LocalServiceHost[:((.)+)] - Activate provider in host to a wmi provider host running as LocalService.Note, [:((.)+)] refers to a regular expression that defines the hosting group for the provider.")] Uint32 HostingSpecification;
	[key, Description("The HostingGroup specification defines the second component of the __Win32provider :: HostingModel whenthe hosting model is one of LocalSystemHost, LocalSystemHostOrSelfHost, NetworkServiceHost or LocalServiceHost.The hosting group defines a particular instantiation of a wmi provider host, providers that share the same hosting modeland hosting group share the same surrogate process.")] String HostingGroup;
	[Description("The  HostProcessIdentifier property defines the process identifier hosting the particular instance of the provider.")] Uint32 HostProcessIdentifier;
	[Description("The ProviderOperation_GetObjectAsync property indicates the number of calls to IWbemServices :: GetObjectAsync.")] Uint64 ProviderOperation_GetObjectAsync;
	[Description("The  property indicates the number of calls to IWbemServices :: PutClassAsync.")] Uint64 ProviderOperation_PutClassAsync;
	[Description("The ProviderOperation_DeleteClassAsync property indicates the number of calls to IWbemServices :: DeleteClassAsync.")] Uint64 ProviderOperation_DeleteClassAsync;
	[Description("The ProviderOperation_CreateClassEnumAsync property indicates the number of calls to IWbemServices :: CreateClassEnumAsync.")] Uint64 ProviderOperation_CreateClassEnumAsync;
	[Description("The ProviderOperation_PutInstanceAsync property indicates the number of calls to IWbemServices :: PutInstanceAsync.")] Uint64 ProviderOperation_PutInstanceAsync;
	[Description("The ProviderOperation_DeleteInstanceAsync property indicates the number of calls to IWbemServices :: DeleteInstanceAsync.")] Uint64 ProviderOperation_DeleteInstanceAsync;
	[Description("The ProviderOperation_CreateInstanceEnumAsync property indicates the number of calls to IWbemServices :: CreateInstanceEnumAsync.")] Uint64 ProviderOperation_CreateInstanceEnumAsync;
	[Description("The ProviderOperation_ExecQueryAsync property indicates the number of calls to IWbemServices :: ExecQueryAsync.")] Uint64 ProviderOperation_ExecQueryAsync;
	[Description("The ProviderOperation_ExecMethodAsync property indicates the number of calls to IWbemServices :: ExecMethodAsync.")] Uint64 ProviderOperation_ExecMethodAsync;
	[Description("The ProviderOperation_QueryInstances property indicates the number of calls to IWbemHiPerfProvider :: QueryInstances.")] Uint64 ProviderOperation_QueryInstances;
	[Description("The ProviderOperation_CreateRefresher property indicates the number of calls to IWbemHiPerfProvider :: CreateRefresher.")] Uint64 ProviderOperation_CreateRefresher;
	[Description("The ProviderOperation_CreateRefreshableObject property indicates the number of calls to IWbemHiPerfProvider :: CreateRefreshableObject.")] Uint64 ProviderOperation_CreateRefreshableObject;
	[Description("The ProviderOperation_StopRefreshing property indicates the number of calls to IWbemHiPerfProvider :: StopRefreshing.")] Uint64 ProviderOperation_StopRefreshing;
	[Description("The ProviderOperation_CreateRefreshableEnum property indicates the number of calls to IWbemHiPerfProvider :: CreateRefreshableEnum.")] Uint64 ProviderOperation_CreateRefreshableEnum;
	[Description("The ProviderOperation_GetObjects property indicates the number of calls to IWbemHiPerfProvider :: GetObjects.")] Uint64 ProviderOperation_GetObjects;
	[Description("The ProviderOperation_GetProperty property indicates the number of calls to IWbemPropertyProvider :: GetProperty.")] Uint64 ProviderOperation_GetProperty;
	[Description("The ProviderOperation_PutProperty property indicates the number of calls to IWbemPropertyProvider :: PutProperty.")] Uint64 ProviderOperation_PutProperty;
	[Description("The ProviderOperation_ProvideEvents property indicates the number of calls to IWbemEventProvider :: ProvideEvents.")] Uint64 ProviderOperation_ProvideEvents;
	[Description("The ProviderOperation_NewQuery property indicates the number of calls to IWbemEventProviderQuerySink :: NewQuery.")] Uint64 ProviderOperation_NewQuery;
	[Description("The ProviderOperation_CancelQuery property indicates the number of calls to IWbemEventProviderQuerySink :: CancelQuery.")] Uint64 ProviderOperation_CancelQuery;
	[Description("The ProviderOperation_AccessCheck property indicates the number of calls to IWbemEventProviderSecurity :: AccessCheck.")] Uint64 ProviderOperation_AccessCheck;
	[Description("The ProviderOperation_SetRegistrationObject property is currently not set.")] Uint64 ProviderOperation_SetRegistrationObject;
	[Description("The ProviderOperation_FindConsumer property indicates the number of calls to IWbemEventConsumerProvider :: FindConsumer.")] Uint64 ProviderOperation_FindConsumer;
	[Description("The ProviderOperation_ValidateSubscription property indicates the number of calls to IWbemEventConsumerProviderEx :: ValidateSubscription.")] Uint64 ProviderOperation_ValidateSubscription;
	[Implemented, Description("The Suspend method suspends execution of providers. All calls passing through a particular instance of the provider will be pass through aninterception layer, this layer will fail the call. Depending on the particular operation, the client may receive the status code WBEM_E_PROVIDER_SUSPENDED ")] Uint32 Suspend();
	[Implemented, Description("The Resume method resumes execution of providers suspended through the use of the Suspend method.")] Uint32 Resume();
	[Implemented, Description("The dynamic UnLoad method unloads the COM server associated with the particular instance of the provider. Further calls intothe provider with the same CLSID will return WBEM_E_PROVIDER_DISABLED. If the COM server implementation is an inproc server hosted in the provider host process it will receive calls to the exported function DllCanUnloadNow, if the provider responds by returning TRUE then COM will unload the executable image. Currently COM is configured to unload the executable approximately 30 seconds after the first successful call to DllCanUnloadNow. If hosted in some other process surrogate the surrogate will unload using some other strategy. The provider can be re-enabled either through the use of the Msft_Provider :: Load method, changes to the associated instance of __Win32Provider or via service restart.")] Uint32 UnLoad();
	[Static, Implemented, Description("The Load method loads a specific instance of a provider.")] Uint32 Load([In] String Namespace, [In] String User, [In] String Locale, [In] String provider, [In] String TransactionIdentifier);
};

//**************************************************************************
//* Class: CIM_CollectionSetting
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, Abstract, Association: DisableOverride ToInstance ToSubClass]
class CIM_CollectionSetting
{
	[CIM_Key: ToSubClass] CIM_CollectionOfMSEs ref Collection;
	[CIM_Key: ToSubClass] CIM_Setting ref Setting;
};

//**************************************************************************
//* Class: Win32_NamedJobObjectLimit
//* Derived from: CIM_CollectionSetting
//**************************************************************************
[provider("CIMWin32a"): ToInstance, dynamic: ToInstance, Locale(1033): ToInstance, UUID("{08E31939-FAAB-4a3b-9B10-50151D1B9D24}"): ToInstance]
class Win32_NamedJobObjectLimit : CIM_CollectionSetting
{
	[read: ToSubClass, key] Win32_NamedJobObject ref Collection = NULL;
	[read: ToSubClass, key] Win32_NamedJobObjectLimitSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_NamedJobObjectSecLimit
//* Derived from: CIM_CollectionSetting
//**************************************************************************
[provider("CIMWin32a"): ToInstance, dynamic: ToInstance, Locale(1033): ToInstance, UUID("{08E31939-FAAB-4a3b-9B10-50151D1B9D24}"): ToInstance]
class Win32_NamedJobObjectSecLimit : CIM_CollectionSetting
{
	[read: ToSubClass, key] Win32_NamedJobObject ref Collection = NULL;
	[read: ToSubClass, key] Win32_NamedJobObjectSecLimitSetting ref Setting = NULL;
};

//**************************************************************************
//* Class: Win32_SettingCheck
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{FCD0E156-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, Abstract, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SettingCheck
{
	[read: ToSubClass] CIM_Setting ref Setting;
	[read: ToSubClass] CIM_Check ref Check;
};

//**************************************************************************
//* Class: Win32_PatchFile
//* Derived from: Win32_SettingCheck
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{A51D806C-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_PatchFile : Win32_SettingCheck
{
	[read: ToSubClass, key] Win32_Patch ref Setting = NULL;
	[read: ToSubClass, key] Win32_FileSpecification ref Check = NULL;
};

//**************************************************************************
//* Class: Win32_ODBCDriverAttribute
//* Derived from: Win32_SettingCheck
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{2B306494-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_ODBCDriverAttribute : Win32_SettingCheck
{
	[read: ToSubClass, key] Win32_ODBCAttribute ref Setting = NULL;
	[read: ToSubClass, key] Win32_ODBCDriverSpecification ref Check = NULL;
};

//**************************************************************************
//* Class: Win32_ODBCDataSourceAttribute
//* Derived from: Win32_SettingCheck
//**************************************************************************
[MappingStrings{"Microsoft.MSI"}: ToSubClass, Locale(1033): ToInstance, UUID("{0E5ACD14-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance]
class Win32_ODBCDataSourceAttribute : Win32_SettingCheck
{
	[read: ToSubClass, key] Win32_ODBCSourceAttribute ref Setting = NULL;
	[read: ToSubClass, key] Win32_ODBCDataSourceSpecification ref Check = NULL;
};

//**************************************************************************
//* Class: CIM_ParticipatesInSet
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Aggregation: ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B6D-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ParticipatesInSet
{
	[Aggregate: ToSubClass, read: ToSubClass] CIM_ReplacementSet ref Set;
	[read: ToSubClass] CIM_PhysicalElement ref Element;
};

//**************************************************************************
//* Class: Win32_SecuritySettingAuditing
//* Derived from: 
//**************************************************************************
[abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{8502C588-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecuritySettingAuditing
{
	[key, read: ToSubClass] Win32_SecuritySetting ref SecuritySetting;
	[key, read: ToSubClass] Win32_SID ref Trustee;
	[read: ToSubClass] uint32 Type;
	[read: ToSubClass] uint32 Inheritance;
	[read: ToSubClass] uint32 AuditedAccessMask;
	[read: ToSubClass] string GuidObjectType;
	[read: ToSubClass] string GuidInheritedObjectType;
};

//**************************************************************************
//* Class: Win32_LogicalShareAuditing
//* Derived from: Win32_SecuritySettingAuditing
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C594-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_LogicalShareAuditing : Win32_SecuritySettingAuditing
{
	[read: ToSubClass, Override("SecuritySetting"): ToSubClass] Win32_LogicalShareSecuritySetting ref SecuritySetting = NULL;
	[read: ToSubClass, Override("Trustee"): ToSubClass] Win32_SID ref Trustee = NULL;
};

//**************************************************************************
//* Class: Win32_LogicalFileAuditing
//* Derived from: Win32_SecuritySettingAuditing
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{FCC86599-DB20-11d2-85FC-0000F8102E5F}"): ToInstance]
class Win32_LogicalFileAuditing : Win32_SecuritySettingAuditing
{
	[Override("SecuritySetting"): ToSubClass] Win32_LogicalFileSecuritySetting ref SecuritySetting = NULL;
	[Override("Trustee"): ToSubClass] Win32_SID ref Trustee = NULL;
};

//**************************************************************************
//* Class: Win32_ServiceSpecificationService
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{ED2ED490-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ServiceSpecificationService
{
	[key, Override("Setting"), read: ToSubClass] Win32_ServiceSpecification ref Check;
	[key, Override("Element"), read: ToSubClass] Win32_Service ref Element;
};

//**************************************************************************
//* Class: CIM_CompatibleProduct
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{2F648FBA-DB22-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_CompatibleProduct
{
	[read: ToSubClass] STRING CompatibilityDescription;
	[read: ToSubClass] CIM_Product ref CompatibleProduct;
	[read: ToSubClass] CIM_Product ref Product;
};

//**************************************************************************
//* Class: CIM_Action
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{2F156260-DB21-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_Action
{
	[Propagated("CIM_SoftwareElement.Name"): ToSubClass, CIM_key: ToSubClass, maxlen(256): ToSubClass, read: ToSubClass] string Name;
	[Propagated("CIM_SoftwareElement.Version"): ToSubClass, CIM_key: ToSubClass, Maxlen(64): ToSubClass, read: ToSubClass, Mappingstrings{"MIF.DMTF|ComponentID|001.3"}: ToSubClass] string Version;
	[Propagated("CIM_SoftwareElement.SoftwareElementState"): ToSubClass, CIM_key: ToSubClass, read: ToSubClass] uint16 SoftwareElementState;
	[Propagated("CIM_SoftwareElement.SoftwareElementID"): ToSubClass, CIM_key: ToSubClass, maxlen(256): ToSubClass, read: ToSubClass] string SoftwareElementID;
	[Propagated("CIM_SoftwareElement.TargetOperatingSystem"): ToSubClass, CIM_key: ToSubClass, read: ToSubClass, Mappingstrings{"MIF.DMTF|Software Component Information|002.5"}: ToSubClass] uint16 TargetOperatingSystem;
	[key, maxlen(256): ToSubClass, read: ToSubClass] string ActionID;
	[read: ToSubClass] uint16 Direction;
	[maxlen(64): ToSubClass, read: ToSubClass] string Caption;
	[read: ToSubClass] string Description;
	 uint32 Invoke();
};

//**************************************************************************
//* Class: CIM_DirectoryAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{8875A39E-DB29-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_DirectoryAction : CIM_Action
{
	[maxlen(1024): ToSubClass, read: ToSubClass] string DirectoryName;
};

//**************************************************************************
//* Class: CIM_CreateDirectoryAction
//* Derived from: CIM_DirectoryAction
//**************************************************************************
[Locale(1033): ToInstance, UUID("{87946AAC-DB22-11d2-85FC-0000F8102E5F}"): ToInstance, abstract]
class CIM_CreateDirectoryAction : CIM_DirectoryAction
{
};

//**************************************************************************
//* Class: Win32_CreateFolderAction
//* Derived from: CIM_CreateDirectoryAction
//**************************************************************************
[Locale(1033): ToInstance, UUID("{55A2DC30-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_CreateFolderAction : CIM_CreateDirectoryAction
{
};

//**************************************************************************
//* Class: CIM_RemoveDirectoryAction
//* Derived from: CIM_DirectoryAction
//**************************************************************************
[Locale(1033): ToInstance, Abstract, UUID("{B272D2EA-DB22-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_RemoveDirectoryAction : CIM_DirectoryAction
{
	[read: ToSubClass] boolean MustBeEmpty;
};

//**************************************************************************
//* Class: Win32_ExtensionInfoAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{9668DF4E-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ExtensionInfoAction : CIM_Action
{
	[read: ToSubClass] string ProgID;
	[read: ToSubClass] string ShellNew;
	[read: ToSubClass] string ShellNewValue;
	[read: ToSubClass] string Extension;
	[read: ToSubClass] string Verb;
	[read: ToSubClass] string Command;
	[read: ToSubClass] string Argument;
	[read: ToSubClass] string MIME;
};

//**************************************************************************
//* Class: CIM_RebootAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{AB08D884-DB30-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_RebootAction : CIM_Action
{
};

//**************************************************************************
//* Class: Win32_MIMEInfoAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{F3F3A266-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_MIMEInfoAction : CIM_Action
{
	[read: ToSubClass] string ContentType;
	[read: ToSubClass] string CLSID;
	[read: ToSubClass] string Extension;
};

//**************************************************************************
//* Class: Win32_TypeLibraryAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{5D06847A-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_TypeLibraryAction : CIM_Action
{
	[Fixed: ToSubClass, read: ToSubClass] uint16 Language;
	[Fixed: ToSubClass, read: ToSubClass] uint32 Cost;
	[Fixed: ToSubClass, read: ToSubClass] string LibID;
};

//**************************************************************************
//* Class: Win32_RemoveIniAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{B94A25A8-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_RemoveIniAction : CIM_Action
{
	[read: ToSubClass] string Section;
	[read: ToSubClass] string key;
	[read: ToSubClass] string Value;
	[read: ToSubClass] uint16 Action;
};

//**************************************************************************
//* Class: CIM_ModifySettingAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{ECDE0B90-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_ModifySettingAction : CIM_Action
{
	[read: ToSubClass] UINT16 ActionType;
	[Maxlen(256): ToSubClass, read: ToSubClass] STRING EntryName;
	[read: ToSubClass] STRING EntryValue;
	[Maxlen(1024): ToSubClass, read: ToSubClass] STRING FileName;
	[Maxlen(256): ToSubClass, read: ToSubClass] STRING SectionKey;
};

//**************************************************************************
//* Class: Win32_BindImageAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{1D40FFD4-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_BindImageAction : CIM_Action
{
	[read: ToSubClass] string Path;
	[read: ToSubClass] string File;
};

//**************************************************************************
//* Class: CIM_ExecuteProgram
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{149ADDEE-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_ExecuteProgram : CIM_Action
{
	[read: ToSubClass] STRING CommandLine;
	[maxlen(1024): ToSubClass, read: ToSubClass] STRING ProgramPath;
};

//**************************************************************************
//* Class: Win32_ShortcutAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{FAE1F7B6-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ShortcutAction : CIM_Action
{
	[read: ToSubClass] string Name = NULL;
	[read: ToSubClass] string Arguments;
	[read: ToSubClass] uint16 HotKey;
	string IconIndex;
	[ValueMap{"0", "3", "7"}: ToSubClass, read: ToSubClass] uint16 ShowCmd;
	[read: ToSubClass] string Shortcut;
	[read: ToSubClass] string Target;
	[read: ToSubClass] string WkDir;
};

//**************************************************************************
//* Class: Win32_FontInfoAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{C63BAA94-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, ImplementationSource("MSI"): ToSubClass]
class Win32_FontInfoAction : CIM_Action
{
	[read: ToSubClass] string FontTitle;
	[read: ToSubClass] string File;
};

//**************************************************************************
//* Class: Win32_PublishComponentAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{990E7AE6-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_PublishComponentAction : CIM_Action
{
	[read: ToSubClass] string ComponentID;
	[read: ToSubClass] string Qual;
	[read: ToSubClass] string AppData;
};

//**************************************************************************
//* Class: Win32_RegistryAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A3864E0E-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_RegistryAction : CIM_Action
{
	[read: ToSubClass] string Registry;
	[read: ToSubClass] string EntryName;
	[read: ToSubClass] string EntryValue;
	[ValueMap{-1, -1, 0, 1, 2, 3}: ToSubClass, read: ToSubClass] sint16 Root;
	[read: ToSubClass] string key;
};

//**************************************************************************
//* Class: Win32_ClassInfoAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{38BA58F0-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ClassInfoAction : CIM_Action
{
	[read: ToSubClass] string CLSID;
	[read: ToSubClass] string ProgID;
	[read: ToSubClass] string VIProgID;
	[read: ToSubClass] uint16 Insertable;
	[read: ToSubClass] string AppID;
	[read: ToSubClass] string FileTypeMask;
	[read: ToSubClass] string Argument;
	[read: ToSubClass] string DefInprocHandler;
	[read: ToSubClass] string Context;
	[read: ToSubClass] string RemoteName;
};

//**************************************************************************
//* Class: CIM_FileAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{2B590C72-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_FileAction : CIM_Action
{
};

//**************************************************************************
//* Class: CIM_RemoveFileAction
//* Derived from: CIM_FileAction
//**************************************************************************
[Locale(1033): ToInstance, UUID("{C75D89F8-DB30-11d2-85FC-0000F8102E5F}"): ToInstance, abstract]
class CIM_RemoveFileAction : CIM_FileAction
{
	[maxlen(1024): ToSubClass, read: ToSubClass] string File;
};

//**************************************************************************
//* Class: Win32_RemoveFileAction
//* Derived from: CIM_RemoveFileAction
//**************************************************************************
[Locale(1033): ToInstance, UUID("{AE565838-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_RemoveFileAction : CIM_RemoveFileAction
{
	[read: ToSubClass] string FileName;
	[read: ToSubClass] string DirProperty;
	[read: ToSubClass] string FileKey;
	[read: ToSubClass] uint16 InstallMode;
};

//**************************************************************************
//* Class: Win32_MoveFileAction
//* Derived from: CIM_FileAction
//**************************************************************************
[Locale(1033): ToInstance, UUID("{FF7DA3FC-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_MoveFileAction : CIM_FileAction
{
	[read: ToSubClass] string SourceName;
	[read: ToSubClass] string DestName;
	[read: ToSubClass] string SourceFolder;
	[read: ToSubClass] string DestFolder;
	[read: ToSubClass] uint16 Options;
	[read: ToSubClass] string FileKey;
};

//**************************************************************************
//* Class: CIM_CopyFileAction
//* Derived from: CIM_FileAction
//**************************************************************************
[Locale(1033): ToInstance, UUID("{73553260-DB22-11d2-85FC-0000F8102E5F}"): ToInstance, abstract]
class CIM_CopyFileAction : CIM_FileAction
{
	[maxlen(1024): ToSubClass, read: ToSubClass] string Source;
	[maxlen(1024): ToSubClass, read: ToSubClass] string Destination;
	[read: ToSubClass] boolean DeleteAfterCopy;
};

//**************************************************************************
//* Class: Win32_DuplicateFileAction
//* Derived from: CIM_CopyFileAction
//**************************************************************************
[Locale(1033): ToInstance, UUID("{785B1AD0-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_DuplicateFileAction : CIM_CopyFileAction
{
	[read: ToSubClass] string FileKey;
};

//**************************************************************************
//* Class: Win32_SelfRegModuleAction
//* Derived from: CIM_Action
//**************************************************************************
[Locale(1033): ToInstance, UUID("{DC7E5E90-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SelfRegModuleAction : CIM_Action
{
	[read: ToSubClass] uint16 Cost;
	[read: ToSubClass] string File;
};

//**************************************************************************
//* Class: CIM_StorageDefect
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{5CC70817-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Aggregation: ToSubClass, Association: DisableOverride ToInstance ToSubClass]
class CIM_StorageDefect
{
	[read: ToSubClass, Weak: ToSubClass] CIM_StorageError ref Error;
	[read: ToSubClass, Aggregate: ToSubClass, Max(1): ToSubClass, Min(1): ToSubClass] CIM_StorageExtent ref Extent;
};

//**************************************************************************
//* Class: Win32_PingStatus
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("WMIPingProvider"): ToInstance]
class Win32_PingStatus
{
	[read: ToSubClass, key] String Address;
	[read: ToSubClass, key] uint32 TimeToLive = 80;
	[read: ToSubClass, key] uint32 Timeout = 4000;
	[read: ToSubClass, key] uint32 BufferSize = 32;
	[read: ToSubClass, key] boolean NoFragmentation = FALSE;
	[read: ToSubClass, key, ValueMap{"0", "2", "4", "8", "16"}: ToSubClass] uint32 TypeofService = 0;
	[read: ToSubClass, key] uint32 RecordRoute = 0;
	[read: ToSubClass, key] uint32 TimestampRoute = 0;
	[read: ToSubClass, key, ValueMap{"0", "1", "2"}: ToSubClass] uint32 SourceRouteType = 0;
	[read: ToSubClass, key] String SourceRoute = "";
	[read: ToSubClass, key] boolean ResolveAddressNames = FALSE;
	[read: ToSubClass, ValueMap{"0", "11001", "11002", "11003", "11004", "11005", "11006", "11007", "11008", "11009", "11010", "11011", "11012", "11013", "11014", "11015", "11016", "11017", "11018", "11032", "11050"}: ToSubClass] uint32 StatusCode;
	[read: ToSubClass] uint32 ResponseTime;
	[read: ToSubClass] uint32 ResponseTimeToLive;
	[read: ToSubClass] boolean ReplyInconsistency;
	[read: ToSubClass] uint32 ReplySize;
	[read: ToSubClass] String RouteRecord[];
	[read: ToSubClass] String RouteRecordResolved[];
	[read: ToSubClass] uint32 TimeStampRecord[];
	[read: ToSubClass] string TimeStampRecordAddress[];
	[read: ToSubClass] string TimeStampRecordAddressResolved[];
	[read: ToSubClass, MaxLen(4096): ToSubClass] String ProtocolAddress = "";
	[read: ToSubClass, MaxLen(4096): ToSubClass] String ProtocolAddressResolved = "";
	[read: ToSubClass, ValueMap{"0", ".."}: ToSubClass] uint32 PrimaryAddressResolutionStatus;
};

//**************************************************************************
//* Class: Win32_ActionCheck
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{0D51A84E-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ActionCheck
{
	[key, read: ToSubClass] CIM_Action ref Action;
	[key, read: ToSubClass] CIM_Check ref Check;
};

//**************************************************************************
//* Class: CIM_Check
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{7A9135CA-DB21-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_Check
{
	[Propagated("CIM_SoftwareElement.Name"): ToSubClass, CIM_key: ToSubClass, maxlen(256): ToSubClass, read: ToSubClass] string Name;
	[Propagated("CIM_SoftwareElement.Version"): ToSubClass, CIM_key: ToSubClass, Maxlen(64): ToSubClass, read: ToSubClass, Mappingstrings{"MIF.DMTF|ComponentID|001.3"}: ToSubClass] string Version;
	[Propagated("CIM_SoftwareElement.SoftwareElementState"): ToSubClass, CIM_key: ToSubClass, read: ToSubClass] uint16 SoftwareElementState;
	[Propagated("CIM_SoftwareElement.SoftwareElementID"): ToSubClass, CIM_key: ToSubClass, maxlen(256): ToSubClass, read: ToSubClass] string SoftwareElementID;
	[Propagated("CIM_SoftwareElement.TargetOperatingSystem"): ToSubClass, CIM_key: ToSubClass, read: ToSubClass, Mappingstrings{"MIF.DMTF|Software Component Information|002.5"}: ToSubClass] uint16 TargetOperatingSystem;
	[key, maxlen(256): ToSubClass, read: ToSubClass] string CheckID;
	[read: ToSubClass] string Description;
	[Maxlen(64): ToSubClass, read: ToSubClass] string Caption;
	[read: ToSubClass] boolean CheckMode;
	 uint32 Invoke();
};

//**************************************************************************
//* Class: Win32_ODBCTranslatorSpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{51E28842-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ODBCTranslatorSpecification : CIM_Check
{
	[read: ToSubClass] string Description = NULL;
	[read: ToSubClass] string Translator;
	[read: ToSubClass] string File;
	[read: ToSubClass] string SetupFile;
};

//**************************************************************************
//* Class: Win32_SoftwareElementCondition
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{280AE270-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareElementCondition : CIM_Check
{
	[read: ToSubClass] string Condition;
};

//**************************************************************************
//* Class: Win32_ServiceSpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{DBAD0F60-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ServiceSpecification : CIM_Check
{
	[read: ToSubClass] string Name = NULL;
	[read: ToSubClass] string ID;
	[read: ToSubClass] string DisplayName;
	[read: ToSubClass] sint32 ServiceType;
	[read: ToSubClass] sint32 StartType;
	[read: ToSubClass] sint32 ErrorControl;
	[read: ToSubClass] string LoadOrderGroup;
	[read: ToSubClass] string Dependencies;
	[read: ToSubClass] string StartName;
	[read: ToSubClass] string Password;
};

//**************************************************************************
//* Class: CIM_VersionCompatibilityCheck
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{D368CA4A-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_VersionCompatibilityCheck : CIM_Check
{
	[read: ToSubClass] BOOLEAN AllowDownVersion;
	[read: ToSubClass] BOOLEAN AllowMultipleVersions;
	[read: ToSubClass] BOOLEAN Reinstall;
};

//**************************************************************************
//* Class: CIM_FileSpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{41F377B0-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, abstract]
class CIM_FileSpecification : CIM_Check
{
	[maxlen(1024): ToSubClass, read: ToSubClass, Fixed: ToSubClass] string Name = NULL;
	[Fixed: ToSubClass, read: ToSubClass] datetime CreateTimeStamp;
	[units("KiloBytes"): ToSubClass, read: ToSubClass] uint64 FileSize;
	[Mappingstrings{"MIF.DMTF|Software Signature|002.4"}: ToSubClass, read: ToSubClass] uint32 CheckSum;
	[Mappingstrings{"MIF.DMTF|Software Signature|002.5"}: ToSubClass, read: ToSubClass] uint32 CRC1;
	[Mappingstrings{"MIF.DMTF|Software Signature|002.6"}: ToSubClass, read: ToSubClass] uint32 CRC2;
	[maxlen(16): ToSubClass, read: ToSubClass] string MD5Checksum;
};

//**************************************************************************
//* Class: Win32_IniFileSpecification
//* Derived from: CIM_FileSpecification
//**************************************************************************
[Locale(1033): ToInstance, UUID("{47772EC4-DB21-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_IniFileSpecification : CIM_FileSpecification
{
	[read: ToSubClass] string Section;
	[read: ToSubClass] string key;
	[read: ToSubClass] string Value;
	[read: ToSubClass] uint16 Action;
	[read: ToSubClass] string IniFile;
};

//**************************************************************************
//* Class: Win32_FileSpecification
//* Derived from: CIM_FileSpecification
//**************************************************************************
[Locale(1033): ToInstance, UUID("{BBB7EBAA-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_FileSpecification : CIM_FileSpecification
{
	[read: ToSubClass, Fixed: ToSubClass] string Version = NULL;
	[read: ToSubClass] string Language;
	[read: ToSubClass] uint16 Attributes;
	[read: ToSubClass] uint16 Sequence;
	[Fixed: ToSubClass, read: ToSubClass] string FileID;
};

//**************************************************************************
//* Class: CIM_MemoryCheck
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{DC0E96FE-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_MemoryCheck : CIM_Check
{
	[ModelCorrespondence{"CIM_OperatingSystem.FreePhysicalMemory"}: ToSubClass, units("KiloBytes"): ToSubClass, read: ToSubClass] UINT64 MemorySize;
};

//**************************************************************************
//* Class: CIM_DirectorySpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A524EE6E-DB29-11d2-85FC-0000F8102E5F}"): ToInstance, abstract]
class CIM_DirectorySpecification : CIM_Check
{
	[read: ToSubClass, Mappingstrings{"MIF.DMTF|Location|001.2"}: ToSubClass] uint16 DirectoryType;
	[Maxlen(1024): ToSubClass, read: ToSubClass] string DirectoryPath;
};

//**************************************************************************
//* Class: Win32_DirectorySpecification
//* Derived from: CIM_DirectorySpecification
//**************************************************************************
[Locale(1033): ToInstance, UUID("{6328B2A8-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_DirectorySpecification : CIM_DirectorySpecification
{
	[read: ToSubClass] string DefaultDir;
	[read: ToSubClass] string Directory;
};

//**************************************************************************
//* Class: Win32_LaunchCondition
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{E79C9694-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_LaunchCondition : CIM_Check
{
	[read: ToSubClass] string Condition;
};

//**************************************************************************
//* Class: Win32_ODBCDataSourceSpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{1F20B83E-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ODBCDataSourceSpecification : CIM_Check
{
	[read: ToSubClass] string Description = NULL;
	[read: ToSubClass] string DataSource;
	[read: ToSubClass] string DriverDescription;
	[read: ToSubClass] string Registration;
};

//**************************************************************************
//* Class: CIM_OSVersionCheck
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{FEE8368A-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_OSVersionCheck : CIM_Check
{
	[maxlen(64): ToSubClass, ModelCorrespondence{"CIM_OperatingSystem.Version"}: ToSubClass, read: ToSubClass] STRING MaximumVersion;
	[maxlen(64): ToSubClass, ModelCorrespondence{"CIM_OperatingSystem.Version"}: ToSubClass, read: ToSubClass] STRING MinimumVersion;
};

//**************************************************************************
//* Class: Win32_ReserveCost
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{C744CF5A-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ReserveCost : CIM_Check
{
	[read: ToSubClass] string ReserveKey;
	[read: ToSubClass] string ReserveFolder;
	[read: ToSubClass] uint32 ReserveLocal;
	[read: ToSubClass] uint32 ReserveSource;
};

//**************************************************************************
//* Class: Win32_ODBCDriverSpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{45BD8DD2-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ODBCDriverSpecification : CIM_Check
{
	[read: ToSubClass] string Description = NULL;
	[read: ToSubClass] string Driver;
	[read: ToSubClass] string File;
	[read: ToSubClass] string SetupFile;
};

//**************************************************************************
//* Class: CIM_SoftwareElementVersionCheck
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{4D23FBD0-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_SoftwareElementVersionCheck : CIM_Check
{
	[maxlen(64): ToSubClass, ModelCorrespondence{"CIM_SoftwareElement.Version"}: ToSubClass, read: ToSubClass] STRING LowerSoftwareElementVersion;
	[maxlen(256): ToSubClass, ModelCorrespondence{"CIM_SoftwareElement.Name"}: ToSubClass, read: ToSubClass] STRING SoftwareElementName;
	[maxlen(64): ToSubClass, ModelCorrespondence{"CIM_SoftwareElement.SoftwareElementState"}: ToSubClass, read: ToSubClass] UINT16 SoftwareElementStateDesired;
	[maxlen(64): ToSubClass, ModelCorrespondence{"CIM_SoftwareElement.TargetOperatingSystem"}: ToSubClass, read: ToSubClass] UINT16 TargetOperatingSystemDesired;
	[maxlen(64): ToSubClass, ModelCorrespondence{"CIM_SoftwareElement.Version"}: ToSubClass, read: ToSubClass] STRING UpperSoftwareElementVersion;
};

//**************************************************************************
//* Class: Win32_ProgIDSpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{8D500594-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ProgIDSpecification : CIM_Check
{
	[read: ToSubClass] string Description = NULL;
	[Fixed: ToSubClass, read: ToSubClass] string ProgID;
	[Fixed: ToSubClass, read: ToSubClass] string Parent;
};

//**************************************************************************
//* Class: CIM_DiskSpaceCheck
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{D3B1178A-DB29-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_DiskSpaceCheck : CIM_Check
{
	[read: ToSubClass, ModelCorrespondence{"CIM_FileSystem.AvailableSpace "}: ToSubClass, units("KiloBytes"): ToSubClass] UINT64 AvailableDiskSpace;
};

//**************************************************************************
//* Class: CIM_SwapSpaceCheck
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{A5AE701E-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_SwapSpaceCheck : CIM_Check
{
	[ModelCorrespondence{"CIM_OperatingSystem.TotalSwapSpaceSize"}: ToSubClass, units("KiloBytes"): ToSubClass, read: ToSubClass] UINT64 SwapSpaceSize;
};

//**************************************************************************
//* Class: CIM_SettingCheck
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{DC1D8140-DB30-11d2-85FC-0000F8102E5F}"): ToInstance, Abstract]
class CIM_SettingCheck : CIM_Check
{
	[read: ToSubClass] UINT16 CheckType;
	[Maxlen(256): ToSubClass, read: ToSubClass] STRING EntryName;
	[read: ToSubClass] STRING EntryValue;
	[Maxlen(1024): ToSubClass, read: ToSubClass] STRING FileName;
	[Maxlen(256): ToSubClass, read: ToSubClass] STRING SectionKey;
};

//**************************************************************************
//* Class: Win32_EnvironmentSpecification
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{8518ABC0-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_EnvironmentSpecification : CIM_Check
{
	[read: ToSubClass] string Environment;
	[read: ToSubClass] string Value;
};

//**************************************************************************
//* Class: Win32_Condition
//* Derived from: CIM_Check
//**************************************************************************
[Locale(1033): ToInstance, UUID("{43FF3654-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_Condition : CIM_Check
{
	[read: ToSubClass] uint16 Level;
	[read: ToSubClass] string Condition;
	[read: ToSubClass] string Feature;
};

//**************************************************************************
//* Class: CIM_Export
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{75BCF4F8-DB46-11D2-B4C8-80080C7B6371}"): ToInstance]
class CIM_Export
{
	[read: ToSubClass] CIM_Directory ref Directory;
	[Max(1): ToSubClass, read: ToSubClass] CIM_LocalFileSystem ref LocalFS;
	[read: ToSubClass] STRING ExportedDirectoryName;
};

//**************************************************************************
//* Class: Win32_ProductResource
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{6EBF1FC0-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ProductResource
{
	[key, read: ToSubClass] Win32_Product ref Product;
	[key, read: ToSubClass] Win32_MSIResource ref Resource;
};

//**************************************************************************
//* Class: Win32_ProductCheck
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{63ECB33C-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ProductCheck
{
	[key, read: ToSubClass] Win32_Product ref Product;
	[key, read: ToSubClass] CIM_Check ref Check;
};

//**************************************************************************
//* Class: Win32_TokenPrivileges
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{3559D159-47E8-4458-9B7E-5FD16D260B8D}"): ToInstance]
class Win32_TokenPrivileges
{
	[read: ToSubClass] uint32 PrivilegeCount;
	[read: ToSubClass] Win32_LUIDandAttributes Privileges[];
};

//**************************************************************************
//* Class: Win32_TokenGroups
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{6CDD7B40-369D-4725-AB7F-EFE53EE2C455}"): ToInstance]
class Win32_TokenGroups
{
	[read: ToSubClass] uint32 GroupCount;
	[read: ToSubClass] Win32_SIDandAttributes Groups[];
};

//**************************************************************************
//* Class: Win32_DCOMApplicationLaunchAllowedSetting
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED55-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_DCOMApplicationLaunchAllowedSetting
{
	[read: ToSubClass, key, Override("Element"): ToSubClass, MappingStrings{" Microsoft CIM Win32|Win32_DCOMApplication|AppID"}: ToSubClass] Win32_DCOMApplication ref Element;
	[read: ToSubClass, key, Override("Setting"): ToSubClass, MappingStrings{" Microsoft CIM Win32|Win32_SID|SID"}: ToSubClass] Win32_SID ref Setting;
};

//**************************************************************************
//* Class: CIM_CollectionOfMSEs
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, Abstract]
class CIM_CollectionOfMSEs
{
	[MaxLen(256): ToSubClass] string CollectionID;
	[MaxLen(64): ToSubClass] string Caption;
	string Description;
};

//**************************************************************************
//* Class: Win32_NamedJobObject
//* Derived from: CIM_CollectionOfMSEs
//**************************************************************************
[dynamic: ToInstance, provider("NamedJobObjectProv"): ToInstance, Locale(1033): ToInstance, UUID("{7552EF7F-7CC8-4022-9049-3B5E1B4B3852}"): ToInstance]
class Win32_NamedJobObject : CIM_CollectionOfMSEs
{
	[read: ToSubClass, key, Override("CollectionId")] string CollectionID = NULL;
	[read: ToSubClass] uint32 BasicUIRestrictions;
};

//**************************************************************************
//* Class: Win32_SID
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("SECRCW32"): ToInstance, Locale(1033): ToInstance, UUID("{8502C581-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SID
{
	[read: ToSubClass, key] string SID;
	[read: ToSubClass] uint8 BinaryRepresentation[];
	[read: ToSubClass] string AccountName;
	[read: ToSubClass] string ReferencedDomainName;
	[Units("Bytes"): ToSubClass, read: ToSubClass] uint32 SidLength;
};

//**************************************************************************
//* Class: Win32_NTLogEventComputer
//* Derived from: 
//**************************************************************************
[dynamic: ToInstance, provider("MS_NT_EVENTLOG_PROVIDER"): ToInstance, EnumPrivileges{"SeSecurityPrivilege"}: ToSubClass, Locale(1033): ToInstance, UUID("{8502C57F-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class Win32_NTLogEventComputer
{
	[key, read: ToSubClass] Win32_ComputerSystem ref Computer;
	[key, read: ToSubClass] Win32_NTLogEvent ref Record;
};

//**************************************************************************
//* Class: CIM_ProductSoftwareFeatures
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{7C39D12A-DB2B-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, Aggregation: ToSubClass, Abstract]
class CIM_ProductSoftwareFeatures
{
	[Min(0): ToSubClass, Max(FALSE): ToSubClass, Aggregate: ToSubClass, read: ToSubClass] CIM_Product ref Product;
	[Min(1): ToSubClass, Max(FALSE): ToSubClass, Weak: ToSubClass, read: ToSubClass] CIM_SoftwareFeature ref Component;
};

//**************************************************************************
//* Class: Win32_ProductSoftwareFeatures
//* Derived from: CIM_ProductSoftwareFeatures
//**************************************************************************
[Locale(1033): ToInstance, UUID("{80D071C8-DB33-11d2-85FC-0000F8102E5F}"): ToInstance, dynamic: ToInstance, provider("MSIProv"): ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_ProductSoftwareFeatures : CIM_ProductSoftwareFeatures
{
	[read: ToSubClass, key] Win32_Product ref Product = NULL;
	[read: ToSubClass, key] Win32_SoftwareFeature ref Component = NULL;
};

//**************************************************************************
//* Class: CIM_ActionSequence
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{F127E50E-E3E0-11d2-8601-0000F8102E5F}"): ToInstance]
class CIM_ActionSequence
{
	[Max(1): ToSubClass, Min(0): ToSubClass, read: ToSubClass] CIM_Action ref Next;
	[Max(1): ToSubClass, Min(0): ToSubClass, read: ToSubClass] CIM_Action ref Prior;
};

//**************************************************************************
//* Class: Win32_CheckCheck
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{2C6811D2-DB32-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_CheckCheck
{
	[key, read: ToSubClass] CIM_Check ref Check;
	[key, read: ToSubClass] CIM_Check ref Location;
};

//**************************************************************************
//* Class: NetDiagnostics
//* Derived from: 
//**************************************************************************
[singleton: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("NetDiagProv")]
class NetDiagnostics
{
	sint32 id;
	STRING NewsServer;
	boolean bIEProxy;
	STRING IEProxy;
	sint32 IEProxyPort;
	sint32 NewsNNTPPort;
	[implemented] boolean Ping([IN] string sInAddr, [out] string sOutArg);
	[implemented] boolean ConnectToPort([IN] string sInAddr, [IN] sint32 port, [out] string sOutArg);
};

//**************************************************************************
//* Class: Win32_MethodParameterClass
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C4DA-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_MethodParameterClass
{
};

//**************************************************************************
//* Class: Win32_Trustee
//* Derived from: Win32_MethodParameterClass
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{8502C589-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_Trustee : Win32_MethodParameterClass
{
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint8 SID[];
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] string SIDString;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] string Name;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] string Domain;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint32 SidLength;
};

//**************************************************************************
//* Class: Win32_ACE
//* Derived from: Win32_MethodParameterClass
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{8502C58A-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_ACE : Win32_MethodParameterClass
{
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] Win32_Trustee Trustee;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint32 AceType;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint32 AceFlags;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint32 AccessMask;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] string GuidObjectType;
	[write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] string GuidInheritedObjectType;
};

//**************************************************************************
//* Class: Win32_SecurityDescriptor
//* Derived from: Win32_MethodParameterClass
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{8502C58B-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_SecurityDescriptor : Win32_MethodParameterClass
{
	[read: ToSubClass, write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] Win32_Trustee Owner;
	[read: ToSubClass, write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] Win32_Trustee Group;
	[read: ToSubClass, write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] Win32_ACE DACL[];
	[read: ToSubClass, write: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] Win32_ACE SACL[];
	[read: ToSubClass, WritePrivileges{"SeSecurityPrivilege", "SeRestorePrivilege"}: ToSubClass] uint32 ControlFlags;
};

//**************************************************************************
//* Class: Win32_ProcessStartup
//* Derived from: Win32_MethodParameterClass
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{8502C4DB-5FBB-11D2-AAC1-006008C78BC7}"): ToInstance]
class Win32_ProcessStartup : Win32_MethodParameterClass
{
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Functions|CreateProcess|dwCreationFlags"}: ToSubClass, BitMap{"0", "1", "2", "3", "4", "9", "10", "26"}: ToSubClass] uint32 CreateFlags;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|JOBOBJECT_BASIC_LIMIT_INFORMATION|PriorityClass"}: ToSubClass, ValueMap{"32", "64", "128", "256", "16384", "32768"}: ToSubClass] uint32 PriorityClass;
	[write: ToSubClass, MappingStrings{"Win32Registry|HKEY_CURRENT_USER\\Environment"}: ToSubClass] string EnvironmentVariables[];
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|lpDesktop"}: ToSubClass] string WinstationDesktop;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|lpTitle"}: ToSubClass] string Title;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwX"}: ToSubClass] uint32 X;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwY"}: ToSubClass] uint32 Y;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwXSize"}: ToSubClass] uint32 XSize;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwYSize"}: ToSubClass] uint32 YSize;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|XCountChars"}: ToSubClass] uint32 XCountChars;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|YCountChars"}: ToSubClass] uint32 YCountChars;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwFillAttribute"}: ToSubClass] uint32 FillAttribute;
	[write: ToSubClass, MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|wShowWindow"}: ToSubClass] uint16 ShowWindow;
	[write: ToSubClass, MappingStrings{"Win32API|Error Functions|SetErrorMode"}: ToSubClass] uint16 ErrorMode = 0;
};

//**************************************************************************
//* Class: CIM_ElementConfiguration
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FC049DCE-DB29-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_ElementConfiguration
{
	[read: ToSubClass] CIM_Configuration ref Configuration;
	[read: ToSubClass] CIM_ManagedSystemElement ref Element;
};

//**************************************************************************
//* Class: Win32_ClientApplicationSetting
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED5E-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_ClientApplicationSetting
{
	[read: ToSubClass, key, MappingStrings{"CIM|CIM_DataFile"}: ToSubClass] CIM_DataFile ref Client;
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_DCOMApplication"}: ToSubClass] Win32_DCOMApplication ref Application;
};

//**************************************************************************
//* Class: CIM_Product
//* Derived from: 
//**************************************************************************
[abstract, Locale(1033): ToInstance, UUID("{FAF76B63-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_Product
{
	[read: ToSubClass, MaxLen(64): ToSubClass] string Caption;
	[read: ToSubClass] string Description;
	[key, read: ToSubClass, MaxLen(64): ToSubClass, MappingStrings{"MIF.DMTF|ComponentID|001.4"}: ToSubClass] string IdentifyingNumber;
	[key, read: ToSubClass, MaxLen(256): ToSubClass, MappingStrings{"MIF.DMTF|ComponentID|001.2"}: ToSubClass] string Name;
	[read: ToSubClass, MaxLen(64): ToSubClass] string SKUNumber;
	[CIM_Key: ToSubClass, read: ToSubClass, MaxLen(256): ToSubClass, MappingStrings{"MIF.DMTF|ComponentID|001.1"}: ToSubClass] string Vendor;
	[key, read: ToSubClass, MaxLen(64): ToSubClass, MappingStrings{"MIF.DMTF|ComponentID|001.3"}: ToSubClass] string Version;
};

//**************************************************************************
//* Class: Win32_Product
//* Derived from: CIM_Product
//**************************************************************************
[Locale(1033): ToInstance, UUID("{CE3324AA-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass, SupportsUpdate]
class Win32_Product : CIM_Product
{
	[read: ToSubClass, ValueMap{"-6", "-2", "-1", "1", "2", "5"}: ToSubClass] sint16 InstallState;
	[read: ToSubClass] string PackageCache;
	[DEPRECATED: ToSubClass, read: ToSubClass] string InstallDate;
	[read: ToSubClass] datetime InstallDate2;
	[read: ToSubClass] string InstallLocation;
	[static, Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Install([in] string PackageLocation, [in] string Options, [in] boolean AllUsers = FALSE);
	[static, Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Admin([in] string PackageLocation, [in] string TargetLocation, [in] string Options);
	[static, Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Advertise([in] string PackageLocation, [in] string Options, [in] boolean AllUsers = FALSE);
	[Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Reinstall([In, Valuemap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}: ToSubClass] uint16 ReinstallMode = 1);
	[Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Upgrade([in] string PackageLocation, [in] string Options);
	[Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Configure([in, Valuemap{"1", "2", "3"}: ToSubClass] uint16 InstallState = 1, [in, Valuemap{"1", "2", "3"}: ToSubClass] uint16 InstallLevel = 1);
	[Implemented, ValueMap{"0", "2147549445", ".."}: ToSubClass] uint32 Uninstall();
};

//**************************************************************************
//* Class: Win32_ComputerSystemProduct
//* Derived from: CIM_Product
//**************************************************************************
[dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{FAF76B96-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class Win32_ComputerSystemProduct : CIM_Product
{
	[read: ToSubClass, MappingStrings{"SMBIOS|Type 1|UUID"}: ToSubClass] String UUID;
};

//**************************************************************************
//* Class: Win32_ImplementedCategory
//* Derived from: 
//**************************************************************************
[Association: DisableOverride ToInstance ToSubClass, dynamic: ToInstance, provider("CIMWin32"): ToInstance, Locale(1033): ToInstance, UUID("{0F73ED5B-8ED9-11d2-B340-00105A1F8569}"): ToInstance]
class Win32_ImplementedCategory
{
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_ComponentCategory"}: ToSubClass] Win32_ComponentCategory ref Category;
	[read: ToSubClass, key, MappingStrings{"WMI|Win32_ClassicCOMClass"}: ToSubClass] Win32_ClassicCOMClass ref Component;
};

//**************************************************************************
//* Class: CIM_SoftwareElementActions
//* Derived from: 
//**************************************************************************
[Locale(1033): ToInstance, UUID("{4B82D255-E3CD-11d2-8601-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass, Aggregation: ToSubClass, Abstract]
class CIM_SoftwareElementActions
{
	[Min(1): ToSubClass, Max(1): ToSubClass, Aggregate: ToSubClass, read: ToSubClass] CIM_SoftwareElement ref Element;
	[Min(0): ToSubClass, Max(FALSE): ToSubClass, Weak: ToSubClass, read: ToSubClass] CIM_Action ref Action;
};

//**************************************************************************
//* Class: Win32_SoftwareElementAction
//* Derived from: CIM_SoftwareElementActions
//**************************************************************************
[Locale(1033): ToInstance, UUID("{1362C2AC-DB34-11d2-85FC-0000F8102E5F}"): ToInstance, provider("MSIProv"): ToInstance, dynamic: ToInstance, MappingStrings{"Microsoft.MSI"}: ToSubClass]
class Win32_SoftwareElementAction : CIM_SoftwareElementActions
{
	[read: ToSubClass, key] Win32_SoftwareElement ref Element = NULL;
	[read: ToSubClass, key] CIM_Action ref Action = NULL;
};

//**************************************************************************
//* Class: CIM_ToDirectorySpecification
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{C3E25A3C-DB31-11d2-85FC-0000F8102E5F}"): ToInstance, Association: DisableOverride ToInstance ToSubClass]
class CIM_ToDirectorySpecification
{
	[read: ToSubClass, Max(1): ToSubClass, Min(0): ToSubClass] CIM_DirectorySpecification ref DestinationDirectory;
	[read: ToSubClass, Min(0): ToSubClass] CIM_CopyFileAction ref FileName;
};

//**************************************************************************
//* Class: CIM_ReplacementSet
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{FAF76B6C-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_ReplacementSet
{
	[key, read: ToSubClass, MaxLen(256): ToSubClass] string Name;
	[read: ToSubClass] string Description;
};

//**************************************************************************
//* Class: CIM_Configuration
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{4C51D7AE-DB22-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_Configuration
{
	[read: ToSubClass, MaxLen(64): ToSubClass] STRING Caption;
	[read: ToSubClass] STRING Description;
	[read: ToSubClass, key, MaxLen(256): ToSubClass] STRING Name;
};

//**************************************************************************
//* Class: CIM_ActsAsSpare
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{64C1726E-DB21-11d2-85FC-0000F8102E5F}"): ToInstance]
class CIM_ActsAsSpare
{
	[read: ToSubClass] CIM_SpareGroup ref Group;
	[read: ToSubClass] BOOLEAN HotStandby;
	[read: ToSubClass] CIM_ManagedSystemElement ref Spare;
};

//**************************************************************************
//* Class: CIM_FRUIncludesProduct
//* Derived from: 
//**************************************************************************
[Abstract, Locale(1033): ToInstance, UUID("{87FEEDCA-DB2A-11d2-85FC-0000F8102E5F}"): ToInstance, Aggregation: ToSubClass, Association: DisableOverride ToInstance ToSubClass]
class CIM_FRUIncludesProduct
{
	[read: ToSubClass] CIM_Product ref Component;
	[read: ToSubClass, Aggregate: ToSubClass, Max(1): ToSubClass] CIM_FRU ref FRU;
};

//**************************************************************************
//* Class: CIM_PhysicalElementLocation
//* Derived from: 
//**************************************************************************
[Abstract, Association: DisableOverride ToInstance ToSubClass, Locale(1033): ToInstance, UUID("{FAF76B68-798C-11D2-AAD1-006008C78BC7}"): ToInstance]
class CIM_PhysicalElementLocation
{
	[read: ToSubClass] CIM_PhysicalElement ref Element;
	[Max(1): ToSubClass, read: ToSubClass] CIM_Location ref PhysicalLocation;
};

//* EOF WinXpProSp3CIMV2.mof
